// Generated by DDC, the Dart Development Compiler (to JavaScript).
// Version: 2.19.2 (stable) (Tue Feb 7 18:37:17 2023 +0000) on "linux_x64"
// Module: zapp_user_main
// Flags: soundNullSafety(true), enableAsserts(true)
define('zapp_user_main', ['dart_sdk', 'flutter_sdk'], (function load__zapp_user_main(dart_sdk, flutter_sdk) {
  'use strict';
  const core = dart_sdk.core;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const js = dart_sdk.js;
  const ui = dart_sdk.ui;
  const convert = dart_sdk.convert;
  const _js_helper = dart_sdk._js_helper;
  const _internal = dart_sdk._internal;
  const collection = dart_sdk.collection;
  const developer = dart_sdk.developer;
  const html = dart_sdk.html;
  const math = dart_sdk.math;
  const js_util = dart_sdk.js_util;
  const typed_data = dart_sdk.typed_data;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const app = flutter_sdk.src__material__app;
  const theme_data = flutter_sdk.src__material__theme_data;
  const colors = flutter_sdk.src__material__colors;
  const framework = flutter_sdk.src__widgets__framework;
  const binding = flutter_sdk.src__widgets__binding;
  const plugin_registry = flutter_sdk.src__plugin_registry;
  const asset_bundle = flutter_sdk.src__services__asset_bundle;
  const change_notifier = flutter_sdk.src__foundation__change_notifier;
  const editable_text = flutter_sdk.src__widgets__editable_text;
  const scaffold = flutter_sdk.src__material__scaffold;
  const basic = flutter_sdk.src__widgets__basic;
  const progress_indicator = flutter_sdk.src__material__progress_indicator;
  const container = flutter_sdk.src__widgets__container;
  const box_decoration = flutter_sdk.src__painting__box_decoration;
  const media_query = flutter_sdk.src__widgets__media_query;
  const flex = flutter_sdk.src__rendering__flex;
  const gesture_detector = flutter_sdk.src__widgets__gesture_detector;
  const navigator = flutter_sdk.src__widgets__navigator;
  const page$ = flutter_sdk.src__material__page;
  const border_radius = flutter_sdk.src__painting__border_radius;
  const text$ = flutter_sdk.src__widgets__text;
  const text_style = flutter_sdk.src__painting__text_style;
  const edge_insets = flutter_sdk.src__painting__edge_insets;
  const box_border = flutter_sdk.src__painting__box_border;
  const icon$ = flutter_sdk.src__widgets__icon;
  const single_child_scroll_view = flutter_sdk.src__widgets__single_child_scroll_view;
  const basic_types = flutter_sdk.src__painting__basic_types;
  const text_field = flutter_sdk.src__material__text_field;
  const input_decorator = flutter_sdk.src__material__input_decorator;
  const input_border = flutter_sdk.src__material__input_border;
  const borders = flutter_sdk.src__painting__borders;
  const icons = flutter_sdk.src__material__icons;
  const icon_data = flutter_sdk.src__widgets__icon_data;
  const assertions = flutter_sdk.src__foundation__assertions;
  const diagnostics = flutter_sdk.src__foundation__diagnostics;
  const sliver = flutter_sdk.src__widgets__sliver;
  const layout_builder = flutter_sdk.src__widgets__layout_builder;
  const equality = flutter_sdk.src__equality;
  const value_listenable_builder = flutter_sdk.src__widgets__value_listenable_builder;
  const app_bar = flutter_sdk.src__material__app_bar;
  const dialog = flutter_sdk.src__material__dialog;
  const elevated_button = flutter_sdk.src__material__elevated_button;
  const box_shadow = flutter_sdk.src__painting__box_shadow;
  const snack_bar = flutter_sdk.src__material__snack_bar;
  const dismissible = flutter_sdk.src__widgets__dismissible;
  const circle_avatar = flutter_sdk.src__material__circle_avatar;
  const alignment = flutter_sdk.src__painting__alignment;
  const shape_decoration = flutter_sdk.src__painting__shape_decoration;
  const rounded_rectangle_border = flutter_sdk.src__painting__rounded_rectangle_border;
  const focus_manager = flutter_sdk.src__widgets__focus_manager;
  const divider = flutter_sdk.src__material__divider;
  const message_codec = flutter_sdk.src__services__message_codec;
  const platform_view = flutter_sdk.src__widgets__platform_view;
  const system_chrome = flutter_sdk.src__services__system_chrome;
  const icon_button = flutter_sdk.src__material__icon_button;
  const spacer = flutter_sdk.src__widgets__spacer;
  const ink_well = flutter_sdk.src__material__ink_well;
  const platform_channel = flutter_sdk.src__services__platform_channel;
  const message_codecs = flutter_sdk.src__services__message_codecs;
  const platform = flutter_sdk.src__foundation__platform;
  const texture = flutter_sdk.src__widgets__texture;
  const object = flutter_sdk.src__foundation__object;
  var $46zapp_entry = Object.create(dart.library);
  var testpage = Object.create(dart.library);
  var web_plugin_registrant = Object.create(dart.library);
  var provider = Object.create(dart.library);
  var video_provider = Object.create(dart.library);
  var feed = Object.create(dart.library);
  var camera_web = Object.create(dart.library);
  var async_provider = Object.create(dart.library);
  var change_notifier_provider = Object.create(dart.library);
  var consumer = Object.create(dart.library);
  var listenable_provider = Object.create(dart.library);
  var provider$ = Object.create(dart.library);
  var proxy_provider = Object.create(dart.library);
  var reassemble_handler = Object.create(dart.library);
  var selector$ = Object.create(dart.library);
  var value_listenable_provider = Object.create(dart.library);
  var video = Object.create(dart.library);
  var flutter_boxicons = Object.create(dart.library);
  var ViewProf = Object.create(dart.library);
  var search = Object.create(dart.library);
  var botnav = Object.create(dart.library);
  var camera_web$ = Object.create(dart.library);
  var nested = Object.create(dart.library);
  var transaction = Object.create(dart.library);
  var under_cons = Object.create(dart.library);
  var courses = Object.create(dart.library);
  var feed$ = Object.create(dart.library);
  var camera_platform_interface = Object.create(dart.library);
  var stream_transform = Object.create(dart.library);
  var camera$ = Object.create(dart.library);
  var camera_service = Object.create(dart.library);
  var types = Object.create(dart.library);
  var action_button = Object.create(dart.library);
  var cross_file = Object.create(dart.library);
  var camera_event = Object.create(dart.library);
  var device_event = Object.create(dart.library);
  var camera_platform = Object.create(dart.library);
  var media_settings = Object.create(dart.library);
  var types$ = Object.create(dart.library);
  var async_expand = Object.create(dart.library);
  var async_map = Object.create(dart.library);
  var combine_latest = Object.create(dart.library);
  var concatenate = Object.create(dart.library);
  var merge = Object.create(dart.library);
  var rate_limit = Object.create(dart.library);
  var scan = Object.create(dart.library);
  var $switch = Object.create(dart.library);
  var take_until = Object.create(dart.library);
  var tap = Object.create(dart.library);
  var where = Object.create(dart.library);
  var dart_ui = Object.create(dart.library);
  var dart_js_util = Object.create(dart.library);
  var camera_error_code = Object.create(dart.library);
  var camera_metadata = Object.create(dart.library);
  var camera_options = Object.create(dart.library);
  var camera_web_exception = Object.create(dart.library);
  var media_device_kind = Object.create(dart.library);
  var orientation_type = Object.create(dart.library);
  var zoom_level_capability = Object.create(dart.library);
  var x_file = Object.create(dart.library);
  var utils = Object.create(dart.library);
  var plugin_platform_interface = Object.create(dart.library);
  var method_channel_camera = Object.create(dart.library);
  var resolution_preset = Object.create(dart.library);
  var camera_description = Object.create(dart.library);
  var camera_exception = Object.create(dart.library);
  var camera_image_data = Object.create(dart.library);
  var exposure_mode = Object.create(dart.library);
  var flash_mode = Object.create(dart.library);
  var focus_mode = Object.create(dart.library);
  var image_format_group = Object.create(dart.library);
  var video_capture_options = Object.create(dart.library);
  var aggregate_sample = Object.create(dart.library);
  var from_handlers = Object.create(dart.library);
  var dart_ui_real = Object.create(dart.library);
  var html$ = Object.create(dart.library);
  var type_conversion = Object.create(dart.library);
  var web_helpers = Object.create(dart.library);
  var base = Object.create(dart.library);
  var $toString = dartx.toString;
  var $toStringAsFixed = dartx.toStringAsFixed;
  var $isNotEmpty = dartx.isNotEmpty;
  var $runtimeType = dartx.runtimeType;
  var $add = dartx.add;
  var $_set = dartx._set;
  var $clear = dartx.clear;
  var $remove = dartx.remove;
  var $_get = dartx._get;
  var $map = dartx.map;
  var $toList = dartx.toList;
  var $navigator = dartx.navigator;
  var $getVideoTracks = dartx.getVideoTracks;
  var $forEach = dartx.forEach;
  var $enumerateDevices = dartx.enumerateDevices;
  var $whereType = dartx.whereType;
  var $where = dartx.where;
  var $first = dartx.first;
  var $name = dartx.name;
  var $containsKey = dartx.containsKey;
  var $toInt = dartx.toInt;
  var $onError = dartx.onError;
  var $onAbort = dartx.onAbort;
  var $onChange = dartx.onChange;
  var $document = dartx.document;
  var $requestFullscreen = dartx.requestFullscreen;
  var $lock = dartx.lock;
  var $type = dartx.type;
  var $reversed = dartx.reversed;
  var $style = dartx.style;
  var $setProperty = dartx.setProperty;
  var $append = dartx.append;
  var $autoplay = dartx.autoplay;
  var $muted = dartx.muted;
  var $setAttribute = dartx.setAttribute;
  var $onEnded = dartx.onEnded;
  var $play = dartx.play;
  var $getTracks = dartx.getTracks;
  var $videoWidth = dartx.videoWidth;
  var $videoHeight = dartx.videoHeight;
  var $context2D = dartx.context2D;
  var $drawImageScaled = dartx.drawImageScaled;
  var $toBlob = dartx.toBlob;
  var $isEmpty = dartx.isEmpty;
  var $getSettings = dartx.getSettings;
  var $getSupportedConstraints = dartx.getSupportedConstraints;
  var $getCapabilities = dartx.getCapabilities;
  var $applyConstraints = dartx.applyConstraints;
  var $addEventListener = dartx.addEventListener;
  var $hashCode = dartx.hashCode;
  var $removeEventListener = dartx.removeEventListener;
  var $join = dartx.join;
  var $firstWhere = dartx.firstWhere;
  var $transform = dartx.transform;
  var $transformOrigin = dartx.transformOrigin;
  var $pointerEvents = dartx.pointerEvents;
  var $width = dartx.width;
  var $height = dartx.height;
  var $objectFit = dartx.objectFit;
  var $getUserMedia = dartx.getUserMedia;
  var $toDouble = dartx.toDouble;
  var $cast = dartx.cast;
  var $removeWhere = dartx.removeWhere;
  var $length = dartx.length;
  var $contains = dartx.contains;
  var $code = dartx.code;
  var $_equals = dartx._equals;
  var $putIfAbsent = dartx.putIfAbsent;
  var $response = dartx.response;
  var $size = dartx.size;
  var $slice = dartx.slice;
  var $onLoadEnd = dartx.onLoadEnd;
  var $result = dartx.result;
  var $children = dartx.children;
  var $id = dartx.id;
  var $vendor = dartx.vendor;
  dart._checkModuleNullSafetyMode(true);
  dart._checkModuleRuntimeTypes(false);
  var T$ = {
    VoidTovoid: () => (T$.VoidTovoid = dart.constFn(dart.fnType(dart.void, [])))(),
    ListOfString: () => (T$.ListOfString = dart.constFn(core.List$(core.String)))(),
    ListOfStringTodynamic: () => (T$.ListOfStringTodynamic = dart.constFn(dart.fnType(dart.dynamic, [T$.ListOfString()])))(),
    JSArrayOfString: () => (T$.JSArrayOfString = dart.constFn(_interceptors.JSArray$(core.String)))(),
    dynamicToNull: () => (T$.dynamicToNull = dart.constFn(dart.fnType(core.Null, [dart.dynamic])))(),
    VoidToNull: () => (T$.VoidToNull = dart.constFn(dart.fnType(core.Null, [])))(),
    ObjectAndStackTraceTovoid: () => (T$.ObjectAndStackTraceTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace])))(),
    ZoneAndZoneDelegateAndZone__Tovoid: () => (T$.ZoneAndZoneDelegateAndZone__Tovoid = dart.constFn(dart.fnType(dart.void, [async.Zone, async.ZoneDelegate, async.Zone, core.String])))(),
    ChangeNotifierProviderOfVideoProvider: () => (T$.ChangeNotifierProviderOfVideoProvider = dart.constFn(change_notifier_provider.ChangeNotifierProvider$(video_provider.VideoProvider)))(),
    BuildContextToVideoProvider: () => (T$.BuildContextToVideoProvider = dart.constFn(dart.fnType(video_provider.VideoProvider, [framework.BuildContext])))(),
    JSArrayOfSingleChildWidget: () => (T$.JSArrayOfSingleChildWidget = dart.constFn(_interceptors.JSArray$(nested.SingleChildWidget)))(),
    MapOfString$dynamic: () => (T$.MapOfString$dynamic = dart.constFn(core.Map$(core.String, dart.dynamic)))(),
    FutureOfvoid: () => (T$.FutureOfvoid = dart.constFn(async.Future$(dart.void)))(),
    VoidToFutureOfvoid: () => (T$.VoidToFutureOfvoid = dart.constFn(dart.fnType(T$.FutureOfvoid(), [])))(),
    JSArrayOfWidget: () => (T$.JSArrayOfWidget = dart.constFn(_interceptors.JSArray$(framework.Widget)))(),
    BuildContextToViewProfPage: () => (T$.BuildContextToViewProfPage = dart.constFn(dart.fnType(ViewProf.ViewProfPage, [framework.BuildContext])))(),
    ListOfWidget: () => (T$.ListOfWidget = dart.constFn(core.List$(framework.Widget)))(),
    intToContainer: () => (T$.intToContainer = dart.constFn(dart.fnType(container.Container, [core.int])))(),
    StringTovoid: () => (T$.StringTovoid = dart.constFn(dart.fnType(dart.void, [core.String])))(),
    BuildContextToSearchPage: () => (T$.BuildContextToSearchPage = dart.constFn(dart.fnType(search.SearchPage, [framework.BuildContext])))(),
    BuildContextToWidget: () => (T$.BuildContextToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext])))(),
    ObjectN: () => (T$.ObjectN = dart.constFn(dart.nullable(core.Object)))(),
    ObjectNToNull: () => (T$.ObjectNToNull = dart.constFn(dart.fnType(core.Null, [T$.ObjectN()])))(),
    ChangeNotifierN: () => (T$.ChangeNotifierN = dart.constFn(dart.nullable(change_notifier.ChangeNotifier)))(),
    BuildContextAndChangeNotifierNTovoid: () => (T$.BuildContextAndChangeNotifierNTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T$.ChangeNotifierN()])))(),
    ListenableN: () => (T$.ListenableN = dart.constFn(dart.nullable(change_notifier.Listenable)))(),
    InheritedContextOfListenableN: () => (T$.InheritedContextOfListenableN = dart.constFn(provider$.InheritedContext$(T$.ListenableN())))(),
    InheritedContextOfListenableNAndListenableNToFn: () => (T$.InheritedContextOfListenableNAndListenableNToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [T$.InheritedContextOfListenableN(), T$.ListenableN()])))(),
    VoidTobool: () => (T$.VoidTobool = dart.constFn(dart.fnType(core.bool, [])))(),
    TTovoid$1: () => (T$.TTovoid$1 = dart.constFn(dart.gFnType(T => [dart.void, [T]], T => [T$.ObjectN()])))(),
    JSArrayOfPostEventCall: () => (T$.JSArrayOfPostEventCall = dart.constFn(_interceptors.JSArray$(provider$.PostEventCall)))(),
    IdentityMapOfString$ProviderNode: () => (T$.IdentityMapOfString$ProviderNode = dart.constFn(_js_helper.IdentityMap$(core.String, provider$.ProviderNode)))(),
    ElementTovoid: () => (T$.ElementTovoid = dart.constFn(dart.fnType(dart.void, [framework.Element])))(),
    _NestedHookElementN: () => (T$._NestedHookElementN = dart.constFn(dart.nullable(nested._NestedHookElement)))(),
    ElementTobool: () => (T$.ElementTobool = dart.constFn(dart.fnType(core.bool, [framework.Element])))(),
    LinkedHashMapOfString$ProviderNode: () => (T$.LinkedHashMapOfString$ProviderNode = dart.constFn(collection.LinkedHashMap$(core.String, provider$.ProviderNode)))(),
    FutureOfNull: () => (T$.FutureOfNull = dart.constFn(async.Future$(core.Null)))(),
    JSArrayOfDiagnosticsNode: () => (T$.JSArrayOfDiagnosticsNode = dart.constFn(_interceptors.JSArray$(diagnostics.DiagnosticsNode)))(),
    DefaultEqualityOfNever: () => (T$.DefaultEqualityOfNever = dart.constFn(equality.DefaultEquality$(dart.Never)))(),
    FnToR: () => (T$.FnToR = dart.constFn(dart.gFnType((T, R) => {
      var __t$TToR = () => (__t$TToR = dart.constFn(dart.fnType(R, [T])))();
      return [R, [__t$TToR()]];
    }, (T, R) => {
      var __t$TToR = () => (__t$TToR = dart.constFn(dart.fnType(R, [T])))();
      return [T$.ObjectN(), T$.ObjectN()];
    })))(),
    VoidToT: () => (T$.VoidToT = dart.constFn(dart.gFnType(T => [T, []], T => [T$.ObjectN()])))(),
    intN: () => (T$.intN = dart.constFn(dart.nullable(core.int)))(),
    JSArrayOfintN: () => (T$.JSArrayOfintN = dart.constFn(_interceptors.JSArray$(T$.intN())))(),
    ListOfint: () => (T$.ListOfint = dart.constFn(core.List$(core.int)))(),
    WidgetN: () => (T$.WidgetN = dart.constFn(dart.nullable(framework.Widget)))(),
    LinkedHashMapOfString$String: () => (T$.LinkedHashMapOfString$String = dart.constFn(collection.LinkedHashMap$(core.String, core.String)))(),
    dynamicToRestriction: () => (T$.dynamicToRestriction = dart.constFn(dart.fnType(video.Restriction, [dart.dynamic])))(),
    BuildContextToTransactionPage: () => (T$.BuildContextToTransactionPage = dart.constFn(dart.fnType(transaction.TransactionPage, [framework.BuildContext])))(),
    BuildContextToAlertDialog: () => (T$.BuildContextToAlertDialog = dart.constFn(dart.fnType(dialog.AlertDialog, [framework.BuildContext])))(),
    intToRow: () => (T$.intToRow = dart.constFn(dart.fnType(basic.Row, [core.int])))(),
    StringToGestureDetector: () => (T$.StringToGestureDetector = dart.constFn(dart.fnType(gesture_detector.GestureDetector, [core.String])))(),
    IdentityMapOfint$Camera: () => (T$.IdentityMapOfint$Camera = dart.constFn(_js_helper.IdentityMap$(core.int, camera$.Camera)))(),
    LinkedMapOfCameraDescription$CameraMetadata: () => (T$.LinkedMapOfCameraDescription$CameraMetadata = dart.constFn(_js_helper.LinkedMap$(camera_description.CameraDescription, camera_metadata.CameraMetadata)))(),
    StreamControllerOfCameraEvent: () => (T$.StreamControllerOfCameraEvent = dart.constFn(async.StreamController$(camera_event.CameraEvent)))(),
    StreamSubscriptionOfEvent: () => (T$.StreamSubscriptionOfEvent = dart.constFn(async.StreamSubscription$(html.Event)))(),
    IdentityMapOfint$StreamSubscriptionOfEvent: () => (T$.IdentityMapOfint$StreamSubscriptionOfEvent = dart.constFn(_js_helper.IdentityMap$(core.int, T$.StreamSubscriptionOfEvent())))(),
    StreamSubscriptionOfMediaStreamTrack: () => (T$.StreamSubscriptionOfMediaStreamTrack = dart.constFn(async.StreamSubscription$(html.MediaStreamTrack)))(),
    IdentityMapOfint$StreamSubscriptionOfMediaStreamTrack: () => (T$.IdentityMapOfint$StreamSubscriptionOfMediaStreamTrack = dart.constFn(_js_helper.IdentityMap$(core.int, T$.StreamSubscriptionOfMediaStreamTrack())))(),
    StreamSubscriptionOfErrorEvent: () => (T$.StreamSubscriptionOfErrorEvent = dart.constFn(async.StreamSubscription$(html.ErrorEvent)))(),
    IdentityMapOfint$StreamSubscriptionOfErrorEvent: () => (T$.IdentityMapOfint$StreamSubscriptionOfErrorEvent = dart.constFn(_js_helper.IdentityMap$(core.int, T$.StreamSubscriptionOfErrorEvent())))(),
    CameraEventTobool: () => (T$.CameraEventTobool = dart.constFn(dart.fnType(core.bool, [camera_event.CameraEvent])))(),
    JSArrayOfCameraDescription: () => (T$.JSArrayOfCameraDescription = dart.constFn(_interceptors.JSArray$(camera_description.CameraDescription)))(),
    MediaStreamTrackTovoid: () => (T$.MediaStreamTrackTovoid = dart.constFn(dart.fnType(dart.void, [html.MediaStreamTrack])))(),
    MediaDeviceInfoTobool: () => (T$.MediaDeviceInfoTobool = dart.constFn(dart.fnType(core.bool, [html.MediaDeviceInfo])))(),
    ListOfCameraDescription: () => (T$.ListOfCameraDescription = dart.constFn(core.List$(camera_description.CameraDescription)))(),
    EventTovoid: () => (T$.EventTovoid = dart.constFn(dart.fnType(dart.void, [html.Event])))(),
    _EmptyStreamOfCameraResolutionChangedEvent: () => (T$._EmptyStreamOfCameraResolutionChangedEvent = dart.constFn(async._EmptyStream$(camera_event.CameraResolutionChangedEvent)))(),
    EventToDeviceOrientationChangedEvent: () => (T$.EventToDeviceOrientationChangedEvent = dart.constFn(dart.fnType(device_event.DeviceOrientationChangedEvent, [html.Event])))(),
    _EmptyStreamOfDeviceOrientationChangedEvent: () => (T$._EmptyStreamOfDeviceOrientationChangedEvent = dart.constFn(async._EmptyStream$(device_event.DeviceOrientationChangedEvent)))(),
    VoidTodynamic: () => (T$.VoidTodynamic = dart.constFn(dart.fnType(dart.dynamic, [])))(),
    ErrorEventTovoid: () => (T$.ErrorEventTovoid = dart.constFn(dart.fnType(dart.void, [html.ErrorEvent])))(),
    ExpandoOfObject: () => (T$.ExpandoOfObject = dart.constFn(core.Expando$(core.Object)))(),
    LinkedHashSetOf_NestedHookElement: () => (T$.LinkedHashSetOf_NestedHookElement = dart.constFn(collection.LinkedHashSet$(nested._NestedHookElement)))(),
    SingleChildStateOfSingleChildStatefulWidget: () => (T$.SingleChildStateOfSingleChildStatefulWidget = dart.constFn(nested.SingleChildState$(nested.SingleChildStatefulWidget)))(),
    SingleChildStateMixinOfStatefulWidget: () => (T$.SingleChildStateMixinOfStatefulWidget = dart.constFn(nested.SingleChildStateMixin$(framework.StatefulWidget)))(),
    BuildContextToFeedPage: () => (T$.BuildContextToFeedPage = dart.constFn(dart.fnType(feed$.FeedPage, [framework.BuildContext])))(),
    StreamControllerOfMediaStreamTrack: () => (T$.StreamControllerOfMediaStreamTrack = dart.constFn(async.StreamController$(html.MediaStreamTrack)))(),
    StreamControllerOfErrorEvent: () => (T$.StreamControllerOfErrorEvent = dart.constFn(async.StreamController$(html.ErrorEvent)))(),
    StringTobool: () => (T$.StringTobool = dart.constFn(dart.fnType(core.bool, [core.String])))(),
    JSArrayOfBlob: () => (T$.JSArrayOfBlob = dart.constFn(_interceptors.JSArray$(html.Blob)))(),
    ListOfBlob: () => (T$.ListOfBlob = dart.constFn(core.List$(html.Blob)))(),
    ListOfBlobAndStringToBlob: () => (T$.ListOfBlobAndStringToBlob = dart.constFn(dart.fnType(html.Blob, [T$.ListOfBlob(), core.String])))(),
    StreamControllerOfVideoRecordedEvent: () => (T$.StreamControllerOfVideoRecordedEvent = dart.constFn(async.StreamController$(camera_event.VideoRecordedEvent)))(),
    intToDivElement: () => (T$.intToDivElement = dart.constFn(dart.fnType(html.DivElement, [core.int])))(),
    JSArrayOfMediaStreamTrack: () => (T$.JSArrayOfMediaStreamTrack = dart.constFn(_interceptors.JSArray$(html.MediaStreamTrack)))(),
    doubleN: () => (T$.doubleN = dart.constFn(dart.nullable(core.double)))(),
    boolN: () => (T$.boolN = dart.constFn(dart.nullable(core.bool)))(),
    IdentityMapOfString$Object: () => (T$.IdentityMapOfString$Object = dart.constFn(_js_helper.IdentityMap$(core.String, core.Object)))(),
    JSArrayOfObject: () => (T$.JSArrayOfObject = dart.constFn(_interceptors.JSArray$(core.Object)))(),
    StringN: () => (T$.StringN = dart.constFn(dart.nullable(core.String)))(),
    CompleterOfXFile: () => (T$.CompleterOfXFile = dart.constFn(async.Completer$(html$.XFile)))(),
    VoidToNever: () => (T$.VoidToNever = dart.constFn(dart.fnType(dart.Never, [])))(),
    numN: () => (T$.numN = dart.constFn(dart.nullable(core.num)))(),
    ListN: () => (T$.ListN = dart.constFn(dart.nullable(core.List)))(),
    IdentityMapOfString$ObjectN: () => (T$.IdentityMapOfString$ObjectN = dart.constFn(_js_helper.IdentityMap$(core.String, T$.ObjectN())))(),
    JSArrayOfStreamSubscription: () => (T$.JSArrayOfStreamSubscription = dart.constFn(_interceptors.JSArray$(async.StreamSubscription)))(),
    JSArrayOfFutureOfvoid: () => (T$.JSArrayOfFutureOfvoid = dart.constFn(_interceptors.JSArray$(T$.FutureOfvoid())))(),
    ObjectNTobool: () => (T$.ObjectNTobool = dart.constFn(dart.fnType(core.bool, [T$.ObjectN()])))(),
    ListOfvoid: () => (T$.ListOfvoid = dart.constFn(core.List$(dart.void)))(),
    ListOfvoidToNull: () => (T$.ListOfvoidToNull = dart.constFn(dart.fnType(core.Null, [T$.ListOfvoid()])))(),
    FutureNOfvoid: () => (T$.FutureNOfvoid = dart.constFn(dart.nullable(T$.FutureOfvoid())))(),
    VoidToFutureNOfvoid: () => (T$.VoidToFutureNOfvoid = dart.constFn(dart.fnType(T$.FutureNOfvoid(), [])))(),
    StreamControllerOfvoid: () => (T$.StreamControllerOfvoid = dart.constFn(async.StreamController$(dart.void)))(),
    voidTovoid: () => (T$.voidTovoid = dart.constFn(dart.fnType(dart.void, [dart.void])))(),
    TAnddynamicToT: () => (T$.TAnddynamicToT = dart.constFn(dart.gFnType(T => [T, [T, dart.dynamic]], T => [T$.ObjectN()])))(),
    SinkOfTTovoid: () => (T$.SinkOfTTovoid = dart.constFn(dart.gFnType(T => [dart.void, [core.Sink$(T)]], T => [T$.ObjectN()])))(),
    VoidToFutureOfNull: () => (T$.VoidToFutureOfNull = dart.constFn(dart.fnType(T$.FutureOfNull(), [])))(),
    LinkedHashSetOfint: () => (T$.LinkedHashSetOfint = dart.constFn(collection.LinkedHashSet$(core.int)))(),
    TAnddynamicToT$1: () => (T$.TAnddynamicToT$1 = dart.constFn(dart.gFnType(T => [T, [T, dart.dynamic]], T => [T$.ObjectN()])))(),
    TAndListNOfTToListOfT: () => (T$.TAndListNOfTToListOfT = dart.constFn(dart.gFnType(T => [core.List$(T), [T, dart.nullable(core.List$(T))]], T => [T$.ObjectN()])))(),
    SinkOfListOfTTovoid: () => (T$.SinkOfListOfTTovoid = dart.constFn(dart.gFnType(T => [dart.void, [core.Sink$(core.List$(T))]], T => [T$.ObjectN()])))(),
    StreamOfvoid: () => (T$.StreamOfvoid = dart.constFn(async.Stream$(dart.void)))(),
    SinkOfTTovoid$1: () => (T$.SinkOfTTovoid$1 = dart.constFn(dart.gFnType(T => [dart.void, [core.Sink$(T)]], T => [T$.ObjectN()])))(),
    dynamicAnddynamicTovoid: () => (T$.dynamicAnddynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic], [dart.dynamic])))(),
    voidToNull: () => (T$.voidToNull = dart.constFn(dart.fnType(core.Null, [dart.void])))(),
    VoidToNvoid: () => (T$.VoidToNvoid = dart.constFn(dart.nullable(T$.VoidTovoid())))(),
    ObjectAndStackTraceToNvoid: () => (T$.ObjectAndStackTraceToNvoid = dart.constFn(dart.nullable(T$.ObjectAndStackTraceTovoid())))(),
    VoidToStreamOfS: () => (T$.VoidToStreamOfS = dart.constFn(dart.gFnType(S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      return [__t$StreamOfS(), []];
    }, S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      return [T$.ObjectN()];
    })))(),
    FutureOrOfbool: () => (T$.FutureOrOfbool = dart.constFn(async.FutureOr$(core.bool)))(),
    IdentityMapOfString$dynamic: () => (T$.IdentityMapOfString$dynamic = dart.constFn(_js_helper.IdentityMap$(core.String, dart.dynamic)))(),
    IdentityMapOfint$MethodChannel: () => (T$.IdentityMapOfint$MethodChannel = dart.constFn(_js_helper.IdentityMap$(core.int, platform_channel.MethodChannel)))(),
    StreamControllerOfDeviceEvent: () => (T$.StreamControllerOfDeviceEvent = dart.constFn(async.StreamController$(device_event.DeviceEvent)))(),
    MethodCallToFuture: () => (T$.MethodCallToFuture = dart.constFn(dart.fnType(async.Future, [message_codec.MethodCall])))(),
    MapToCameraDescription: () => (T$.MapToCameraDescription = dart.constFn(dart.fnType(camera_description.CameraDescription, [core.Map])))(),
    VoidToMethodChannel: () => (T$.VoidToMethodChannel = dart.constFn(dart.fnType(platform_channel.MethodChannel, [])))(),
    CompleterOfvoid: () => (T$.CompleterOfvoid = dart.constFn(async.Completer$(dart.void)))(),
    CameraInitializedEventToNull: () => (T$.CameraInitializedEventToNull = dart.constFn(dart.fnType(core.Null, [camera_event.CameraInitializedEvent])))(),
    ObjectAndStackTraceToNull: () => (T$.ObjectAndStackTraceToNull = dart.constFn(dart.fnType(core.Null, [core.Object, core.StackTrace])))(),
    StreamControllerOfCameraImageData: () => (T$.StreamControllerOfCameraImageData = dart.constFn(async.StreamController$(camera_image_data.CameraImageData)))(),
    dynamicTovoid: () => (T$.dynamicTovoid = dart.constFn(dart.fnType(dart.void, [dart.dynamic])))(),
    MapOfObjectN$ObjectN: () => (T$.MapOfObjectN$ObjectN = dart.constFn(core.Map$(T$.ObjectN(), T$.ObjectN())))(),
    VoidToString: () => (T$.VoidToString = dart.constFn(dart.fnType(core.String, [])))(),
    SAndEventSinkOfTTovoid: () => (T$.SAndEventSinkOfTTovoid = dart.constFn(dart.gFnType((S, T) => [dart.void, [S, async.EventSink$(T)]], (S, T) => [T$.ObjectN(), T$.ObjectN()])))(),
    ObjectAndStackTraceAndEventSinkOfTTovoid: () => (T$.ObjectAndStackTraceAndEventSinkOfTTovoid = dart.constFn(dart.gFnType(T => [dart.void, [core.Object, core.StackTrace, async.EventSink$(T)]], T => [T$.ObjectN()])))(),
    EventSinkOfTTovoid: () => (T$.EventSinkOfTTovoid = dart.constFn(dart.gFnType(T => [dart.void, [async.EventSink$(T)]], T => [T$.ObjectN()])))(),
    BlobN: () => (T$.BlobN = dart.constFn(dart.nullable(html.Blob)))(),
    ListOfintToString: () => (T$.ListOfintToString = dart.constFn(dart.fnType(core.String, [T$.ListOfint()])))(),
    _AsyncStarImplOfUint8List: () => (T$._AsyncStarImplOfUint8List = dart.constFn(async._AsyncStarImpl$(typed_data.Uint8List)))(),
    Uint8ListN: () => (T$.Uint8ListN = dart.constFn(dart.nullable(typed_data.Uint8List)))(),
    ListOfCameraImagePlane: () => (T$.ListOfCameraImagePlane = dart.constFn(core.List$(camera_image_data.CameraImagePlane)))(),
    dynamicToCameraImagePlane: () => (T$.dynamicToCameraImagePlane = dart.constFn(dart.fnType(camera_image_data.CameraImagePlane, [dart.dynamic])))()
  };
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.fn(testpage.main, T$.VoidTovoid());
    },
    get C1() {
      return C[1] = dart.fn(change_notifier_provider.ChangeNotifierProvider._dispose, T$.BuildContextAndChangeNotifierNTovoid());
    },
    get C2() {
      return C[2] = dart.fn(listenable_provider.ListenableProvider._startListening, T$.InheritedContextOfListenableNAndListenableNToFn());
    },
    get C3() {
      return C[3] = dart.constList([], core.String);
    },
    get C4() {
      return C[4] = dart.const({
        __proto__: core.Object.prototype
      });
    },
    get C5() {
      return C[5] = dart.constMap(T$.ObjectN(), T$.ObjectN(), []);
    },
    get C7() {
      return C[7] = dart.const({
        __proto__: T$.DefaultEqualityOfNever().prototype
      });
    },
    get C6() {
      return C[6] = dart.const({
        __proto__: equality.DeepCollectionEquality.prototype,
        [DeepCollectionEquality__unordered]: false,
        [DeepCollectionEquality__base]: C[7] || CT.C7
      });
    },
    get C8() {
      return C[8] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59392
      });
    },
    get C9() {
      return C[9] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59393
      });
    },
    get C10() {
      return C[10] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59394
      });
    },
    get C11() {
      return C[11] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59395
      });
    },
    get C12() {
      return C[12] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59396
      });
    },
    get C13() {
      return C[13] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59397
      });
    },
    get C14() {
      return C[14] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59398
      });
    },
    get C15() {
      return C[15] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59399
      });
    },
    get C16() {
      return C[16] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59400
      });
    },
    get C17() {
      return C[17] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59401
      });
    },
    get C18() {
      return C[18] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59402
      });
    },
    get C19() {
      return C[19] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59403
      });
    },
    get C20() {
      return C[20] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59404
      });
    },
    get C21() {
      return C[21] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59405
      });
    },
    get C22() {
      return C[22] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59406
      });
    },
    get C23() {
      return C[23] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59407
      });
    },
    get C24() {
      return C[24] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59408
      });
    },
    get C25() {
      return C[25] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59409
      });
    },
    get C26() {
      return C[26] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59410
      });
    },
    get C27() {
      return C[27] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59411
      });
    },
    get C28() {
      return C[28] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59412
      });
    },
    get C29() {
      return C[29] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59413
      });
    },
    get C30() {
      return C[30] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59414
      });
    },
    get C31() {
      return C[31] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59415
      });
    },
    get C32() {
      return C[32] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59416
      });
    },
    get C33() {
      return C[33] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59417
      });
    },
    get C34() {
      return C[34] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59418
      });
    },
    get C35() {
      return C[35] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59419
      });
    },
    get C36() {
      return C[36] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59420
      });
    },
    get C37() {
      return C[37] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59421
      });
    },
    get C38() {
      return C[38] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59422
      });
    },
    get C39() {
      return C[39] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59423
      });
    },
    get C40() {
      return C[40] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59424
      });
    },
    get C41() {
      return C[41] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59425
      });
    },
    get C42() {
      return C[42] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59426
      });
    },
    get C43() {
      return C[43] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59427
      });
    },
    get C44() {
      return C[44] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59428
      });
    },
    get C45() {
      return C[45] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59429
      });
    },
    get C46() {
      return C[46] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59430
      });
    },
    get C47() {
      return C[47] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59431
      });
    },
    get C48() {
      return C[48] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59432
      });
    },
    get C49() {
      return C[49] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59433
      });
    },
    get C50() {
      return C[50] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59434
      });
    },
    get C51() {
      return C[51] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59435
      });
    },
    get C52() {
      return C[52] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59436
      });
    },
    get C53() {
      return C[53] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59437
      });
    },
    get C54() {
      return C[54] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59438
      });
    },
    get C55() {
      return C[55] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59439
      });
    },
    get C56() {
      return C[56] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59440
      });
    },
    get C57() {
      return C[57] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59441
      });
    },
    get C58() {
      return C[58] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59442
      });
    },
    get C59() {
      return C[59] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59443
      });
    },
    get C60() {
      return C[60] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59444
      });
    },
    get C61() {
      return C[61] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59445
      });
    },
    get C62() {
      return C[62] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59446
      });
    },
    get C63() {
      return C[63] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59447
      });
    },
    get C64() {
      return C[64] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59448
      });
    },
    get C65() {
      return C[65] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59449
      });
    },
    get C66() {
      return C[66] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59450
      });
    },
    get C67() {
      return C[67] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59451
      });
    },
    get C68() {
      return C[68] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59452
      });
    },
    get C69() {
      return C[69] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59453
      });
    },
    get C70() {
      return C[70] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59454
      });
    },
    get C71() {
      return C[71] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59455
      });
    },
    get C72() {
      return C[72] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59456
      });
    },
    get C73() {
      return C[73] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59457
      });
    },
    get C74() {
      return C[74] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59458
      });
    },
    get C75() {
      return C[75] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59459
      });
    },
    get C76() {
      return C[76] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59460
      });
    },
    get C77() {
      return C[77] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59461
      });
    },
    get C78() {
      return C[78] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59462
      });
    },
    get C79() {
      return C[79] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59463
      });
    },
    get C80() {
      return C[80] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59464
      });
    },
    get C81() {
      return C[81] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59465
      });
    },
    get C82() {
      return C[82] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59466
      });
    },
    get C83() {
      return C[83] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59467
      });
    },
    get C84() {
      return C[84] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59468
      });
    },
    get C85() {
      return C[85] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59469
      });
    },
    get C86() {
      return C[86] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59470
      });
    },
    get C87() {
      return C[87] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59471
      });
    },
    get C88() {
      return C[88] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59472
      });
    },
    get C89() {
      return C[89] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59473
      });
    },
    get C90() {
      return C[90] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59474
      });
    },
    get C91() {
      return C[91] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59475
      });
    },
    get C92() {
      return C[92] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59476
      });
    },
    get C93() {
      return C[93] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59477
      });
    },
    get C94() {
      return C[94] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59478
      });
    },
    get C95() {
      return C[95] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59479
      });
    },
    get C96() {
      return C[96] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59480
      });
    },
    get C97() {
      return C[97] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59481
      });
    },
    get C98() {
      return C[98] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59482
      });
    },
    get C99() {
      return C[99] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59483
      });
    },
    get C100() {
      return C[100] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59484
      });
    },
    get C101() {
      return C[101] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59485
      });
    },
    get C102() {
      return C[102] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59486
      });
    },
    get C103() {
      return C[103] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59487
      });
    },
    get C104() {
      return C[104] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59488
      });
    },
    get C105() {
      return C[105] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59489
      });
    },
    get C106() {
      return C[106] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59490
      });
    },
    get C107() {
      return C[107] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59491
      });
    },
    get C108() {
      return C[108] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59492
      });
    },
    get C109() {
      return C[109] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59493
      });
    },
    get C110() {
      return C[110] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59494
      });
    },
    get C111() {
      return C[111] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59495
      });
    },
    get C112() {
      return C[112] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59496
      });
    },
    get C113() {
      return C[113] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59497
      });
    },
    get C114() {
      return C[114] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59498
      });
    },
    get C115() {
      return C[115] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59499
      });
    },
    get C116() {
      return C[116] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59500
      });
    },
    get C117() {
      return C[117] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59501
      });
    },
    get C118() {
      return C[118] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59502
      });
    },
    get C119() {
      return C[119] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59503
      });
    },
    get C120() {
      return C[120] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59504
      });
    },
    get C121() {
      return C[121] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59505
      });
    },
    get C122() {
      return C[122] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59506
      });
    },
    get C123() {
      return C[123] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59507
      });
    },
    get C124() {
      return C[124] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59508
      });
    },
    get C125() {
      return C[125] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59509
      });
    },
    get C126() {
      return C[126] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59510
      });
    },
    get C127() {
      return C[127] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59511
      });
    },
    get C128() {
      return C[128] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59512
      });
    },
    get C129() {
      return C[129] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59513
      });
    },
    get C130() {
      return C[130] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59514
      });
    },
    get C131() {
      return C[131] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59515
      });
    },
    get C132() {
      return C[132] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59516
      });
    },
    get C133() {
      return C[133] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59517
      });
    },
    get C134() {
      return C[134] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59518
      });
    },
    get C135() {
      return C[135] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59519
      });
    },
    get C136() {
      return C[136] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59520
      });
    },
    get C137() {
      return C[137] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59521
      });
    },
    get C138() {
      return C[138] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59522
      });
    },
    get C139() {
      return C[139] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59523
      });
    },
    get C140() {
      return C[140] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59524
      });
    },
    get C141() {
      return C[141] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59525
      });
    },
    get C142() {
      return C[142] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59526
      });
    },
    get C143() {
      return C[143] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59527
      });
    },
    get C144() {
      return C[144] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59528
      });
    },
    get C145() {
      return C[145] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59529
      });
    },
    get C146() {
      return C[146] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59530
      });
    },
    get C147() {
      return C[147] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59531
      });
    },
    get C148() {
      return C[148] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59532
      });
    },
    get C149() {
      return C[149] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59533
      });
    },
    get C150() {
      return C[150] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59534
      });
    },
    get C151() {
      return C[151] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59535
      });
    },
    get C152() {
      return C[152] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59536
      });
    },
    get C153() {
      return C[153] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59537
      });
    },
    get C154() {
      return C[154] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59538
      });
    },
    get C155() {
      return C[155] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59539
      });
    },
    get C156() {
      return C[156] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59540
      });
    },
    get C157() {
      return C[157] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59541
      });
    },
    get C158() {
      return C[158] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59542
      });
    },
    get C159() {
      return C[159] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59543
      });
    },
    get C160() {
      return C[160] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59544
      });
    },
    get C161() {
      return C[161] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59545
      });
    },
    get C162() {
      return C[162] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59546
      });
    },
    get C163() {
      return C[163] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59547
      });
    },
    get C164() {
      return C[164] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59548
      });
    },
    get C165() {
      return C[165] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59549
      });
    },
    get C166() {
      return C[166] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59550
      });
    },
    get C167() {
      return C[167] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59551
      });
    },
    get C168() {
      return C[168] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59552
      });
    },
    get C169() {
      return C[169] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59553
      });
    },
    get C170() {
      return C[170] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59554
      });
    },
    get C171() {
      return C[171] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59555
      });
    },
    get C172() {
      return C[172] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59556
      });
    },
    get C173() {
      return C[173] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59557
      });
    },
    get C174() {
      return C[174] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59558
      });
    },
    get C175() {
      return C[175] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59559
      });
    },
    get C176() {
      return C[176] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59560
      });
    },
    get C177() {
      return C[177] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59561
      });
    },
    get C178() {
      return C[178] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59562
      });
    },
    get C179() {
      return C[179] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59563
      });
    },
    get C180() {
      return C[180] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59564
      });
    },
    get C181() {
      return C[181] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59565
      });
    },
    get C182() {
      return C[182] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59566
      });
    },
    get C183() {
      return C[183] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59567
      });
    },
    get C184() {
      return C[184] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59568
      });
    },
    get C185() {
      return C[185] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59569
      });
    },
    get C186() {
      return C[186] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59570
      });
    },
    get C187() {
      return C[187] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59571
      });
    },
    get C188() {
      return C[188] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59572
      });
    },
    get C189() {
      return C[189] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59573
      });
    },
    get C190() {
      return C[190] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59574
      });
    },
    get C191() {
      return C[191] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59575
      });
    },
    get C192() {
      return C[192] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59576
      });
    },
    get C193() {
      return C[193] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59577
      });
    },
    get C194() {
      return C[194] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59578
      });
    },
    get C195() {
      return C[195] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59579
      });
    },
    get C196() {
      return C[196] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59580
      });
    },
    get C197() {
      return C[197] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59581
      });
    },
    get C198() {
      return C[198] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59582
      });
    },
    get C199() {
      return C[199] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59583
      });
    },
    get C200() {
      return C[200] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59584
      });
    },
    get C201() {
      return C[201] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59585
      });
    },
    get C202() {
      return C[202] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59586
      });
    },
    get C203() {
      return C[203] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59587
      });
    },
    get C204() {
      return C[204] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59588
      });
    },
    get C205() {
      return C[205] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59589
      });
    },
    get C206() {
      return C[206] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59590
      });
    },
    get C207() {
      return C[207] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59591
      });
    },
    get C208() {
      return C[208] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59592
      });
    },
    get C209() {
      return C[209] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59593
      });
    },
    get C210() {
      return C[210] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59594
      });
    },
    get C211() {
      return C[211] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59595
      });
    },
    get C212() {
      return C[212] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59596
      });
    },
    get C213() {
      return C[213] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59597
      });
    },
    get C214() {
      return C[214] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59598
      });
    },
    get C215() {
      return C[215] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59599
      });
    },
    get C216() {
      return C[216] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59600
      });
    },
    get C217() {
      return C[217] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59601
      });
    },
    get C218() {
      return C[218] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59602
      });
    },
    get C219() {
      return C[219] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59603
      });
    },
    get C220() {
      return C[220] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59604
      });
    },
    get C221() {
      return C[221] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59605
      });
    },
    get C222() {
      return C[222] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59606
      });
    },
    get C223() {
      return C[223] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59607
      });
    },
    get C224() {
      return C[224] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59608
      });
    },
    get C225() {
      return C[225] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59609
      });
    },
    get C226() {
      return C[226] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59610
      });
    },
    get C227() {
      return C[227] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59611
      });
    },
    get C228() {
      return C[228] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59612
      });
    },
    get C229() {
      return C[229] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59613
      });
    },
    get C230() {
      return C[230] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59614
      });
    },
    get C231() {
      return C[231] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59615
      });
    },
    get C232() {
      return C[232] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59616
      });
    },
    get C233() {
      return C[233] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59617
      });
    },
    get C234() {
      return C[234] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59618
      });
    },
    get C235() {
      return C[235] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59619
      });
    },
    get C236() {
      return C[236] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59620
      });
    },
    get C237() {
      return C[237] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59621
      });
    },
    get C238() {
      return C[238] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59622
      });
    },
    get C239() {
      return C[239] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59623
      });
    },
    get C240() {
      return C[240] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59624
      });
    },
    get C241() {
      return C[241] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59625
      });
    },
    get C242() {
      return C[242] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59626
      });
    },
    get C243() {
      return C[243] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59627
      });
    },
    get C244() {
      return C[244] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59628
      });
    },
    get C245() {
      return C[245] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59629
      });
    },
    get C246() {
      return C[246] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59630
      });
    },
    get C247() {
      return C[247] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59631
      });
    },
    get C248() {
      return C[248] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59632
      });
    },
    get C249() {
      return C[249] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59633
      });
    },
    get C250() {
      return C[250] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59634
      });
    },
    get C251() {
      return C[251] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59635
      });
    },
    get C252() {
      return C[252] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59636
      });
    },
    get C253() {
      return C[253] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59637
      });
    },
    get C254() {
      return C[254] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59638
      });
    },
    get C255() {
      return C[255] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59639
      });
    },
    get C256() {
      return C[256] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59640
      });
    },
    get C257() {
      return C[257] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59641
      });
    },
    get C258() {
      return C[258] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59642
      });
    },
    get C259() {
      return C[259] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59643
      });
    },
    get C260() {
      return C[260] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59644
      });
    },
    get C261() {
      return C[261] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59645
      });
    },
    get C262() {
      return C[262] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59646
      });
    },
    get C263() {
      return C[263] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59647
      });
    },
    get C264() {
      return C[264] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59648
      });
    },
    get C265() {
      return C[265] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59649
      });
    },
    get C266() {
      return C[266] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59650
      });
    },
    get C267() {
      return C[267] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59651
      });
    },
    get C268() {
      return C[268] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59652
      });
    },
    get C269() {
      return C[269] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59653
      });
    },
    get C270() {
      return C[270] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59654
      });
    },
    get C271() {
      return C[271] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59655
      });
    },
    get C272() {
      return C[272] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59656
      });
    },
    get C273() {
      return C[273] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59657
      });
    },
    get C274() {
      return C[274] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59658
      });
    },
    get C275() {
      return C[275] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59659
      });
    },
    get C276() {
      return C[276] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59660
      });
    },
    get C277() {
      return C[277] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59661
      });
    },
    get C278() {
      return C[278] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59662
      });
    },
    get C279() {
      return C[279] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59663
      });
    },
    get C280() {
      return C[280] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59664
      });
    },
    get C281() {
      return C[281] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59665
      });
    },
    get C282() {
      return C[282] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59666
      });
    },
    get C283() {
      return C[283] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59667
      });
    },
    get C284() {
      return C[284] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59668
      });
    },
    get C285() {
      return C[285] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59669
      });
    },
    get C286() {
      return C[286] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59670
      });
    },
    get C287() {
      return C[287] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59671
      });
    },
    get C288() {
      return C[288] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59672
      });
    },
    get C289() {
      return C[289] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59673
      });
    },
    get C290() {
      return C[290] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59674
      });
    },
    get C291() {
      return C[291] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59675
      });
    },
    get C292() {
      return C[292] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59676
      });
    },
    get C293() {
      return C[293] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59677
      });
    },
    get C294() {
      return C[294] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59678
      });
    },
    get C295() {
      return C[295] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59679
      });
    },
    get C296() {
      return C[296] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59680
      });
    },
    get C297() {
      return C[297] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59681
      });
    },
    get C298() {
      return C[298] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59682
      });
    },
    get C299() {
      return C[299] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59683
      });
    },
    get C300() {
      return C[300] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59684
      });
    },
    get C301() {
      return C[301] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59685
      });
    },
    get C302() {
      return C[302] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59686
      });
    },
    get C303() {
      return C[303] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59687
      });
    },
    get C304() {
      return C[304] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59688
      });
    },
    get C305() {
      return C[305] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59689
      });
    },
    get C306() {
      return C[306] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59690
      });
    },
    get C307() {
      return C[307] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59691
      });
    },
    get C308() {
      return C[308] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59692
      });
    },
    get C309() {
      return C[309] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59693
      });
    },
    get C310() {
      return C[310] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59694
      });
    },
    get C311() {
      return C[311] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59695
      });
    },
    get C312() {
      return C[312] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59696
      });
    },
    get C313() {
      return C[313] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59697
      });
    },
    get C314() {
      return C[314] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59698
      });
    },
    get C315() {
      return C[315] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59699
      });
    },
    get C316() {
      return C[316] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59700
      });
    },
    get C317() {
      return C[317] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59701
      });
    },
    get C318() {
      return C[318] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59702
      });
    },
    get C319() {
      return C[319] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59703
      });
    },
    get C320() {
      return C[320] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59704
      });
    },
    get C321() {
      return C[321] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59705
      });
    },
    get C322() {
      return C[322] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59706
      });
    },
    get C323() {
      return C[323] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59707
      });
    },
    get C324() {
      return C[324] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59708
      });
    },
    get C325() {
      return C[325] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59709
      });
    },
    get C326() {
      return C[326] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59710
      });
    },
    get C327() {
      return C[327] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59711
      });
    },
    get C328() {
      return C[328] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59712
      });
    },
    get C329() {
      return C[329] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59713
      });
    },
    get C330() {
      return C[330] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59714
      });
    },
    get C331() {
      return C[331] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59715
      });
    },
    get C332() {
      return C[332] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59716
      });
    },
    get C333() {
      return C[333] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59717
      });
    },
    get C334() {
      return C[334] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59718
      });
    },
    get C335() {
      return C[335] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59719
      });
    },
    get C336() {
      return C[336] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59720
      });
    },
    get C337() {
      return C[337] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59721
      });
    },
    get C338() {
      return C[338] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59722
      });
    },
    get C339() {
      return C[339] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59723
      });
    },
    get C340() {
      return C[340] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59724
      });
    },
    get C341() {
      return C[341] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59725
      });
    },
    get C342() {
      return C[342] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59726
      });
    },
    get C343() {
      return C[343] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59727
      });
    },
    get C344() {
      return C[344] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59728
      });
    },
    get C345() {
      return C[345] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59729
      });
    },
    get C346() {
      return C[346] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59730
      });
    },
    get C347() {
      return C[347] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59731
      });
    },
    get C348() {
      return C[348] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59732
      });
    },
    get C349() {
      return C[349] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59733
      });
    },
    get C350() {
      return C[350] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59734
      });
    },
    get C351() {
      return C[351] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59735
      });
    },
    get C352() {
      return C[352] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59736
      });
    },
    get C353() {
      return C[353] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59737
      });
    },
    get C354() {
      return C[354] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59738
      });
    },
    get C355() {
      return C[355] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59739
      });
    },
    get C356() {
      return C[356] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59740
      });
    },
    get C357() {
      return C[357] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59741
      });
    },
    get C358() {
      return C[358] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59742
      });
    },
    get C359() {
      return C[359] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59743
      });
    },
    get C360() {
      return C[360] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59744
      });
    },
    get C361() {
      return C[361] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59745
      });
    },
    get C362() {
      return C[362] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59746
      });
    },
    get C363() {
      return C[363] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59747
      });
    },
    get C364() {
      return C[364] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59748
      });
    },
    get C365() {
      return C[365] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59749
      });
    },
    get C366() {
      return C[366] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59750
      });
    },
    get C367() {
      return C[367] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59751
      });
    },
    get C368() {
      return C[368] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59752
      });
    },
    get C369() {
      return C[369] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59753
      });
    },
    get C370() {
      return C[370] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59754
      });
    },
    get C371() {
      return C[371] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59755
      });
    },
    get C372() {
      return C[372] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59756
      });
    },
    get C373() {
      return C[373] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59757
      });
    },
    get C374() {
      return C[374] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59758
      });
    },
    get C375() {
      return C[375] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59759
      });
    },
    get C376() {
      return C[376] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59760
      });
    },
    get C377() {
      return C[377] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59761
      });
    },
    get C378() {
      return C[378] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59762
      });
    },
    get C379() {
      return C[379] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59763
      });
    },
    get C380() {
      return C[380] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59764
      });
    },
    get C381() {
      return C[381] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59765
      });
    },
    get C382() {
      return C[382] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59766
      });
    },
    get C383() {
      return C[383] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59767
      });
    },
    get C384() {
      return C[384] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59768
      });
    },
    get C385() {
      return C[385] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59769
      });
    },
    get C386() {
      return C[386] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59770
      });
    },
    get C387() {
      return C[387] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59771
      });
    },
    get C388() {
      return C[388] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59772
      });
    },
    get C389() {
      return C[389] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59773
      });
    },
    get C390() {
      return C[390] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59774
      });
    },
    get C391() {
      return C[391] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59775
      });
    },
    get C392() {
      return C[392] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59776
      });
    },
    get C393() {
      return C[393] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59777
      });
    },
    get C394() {
      return C[394] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59778
      });
    },
    get C395() {
      return C[395] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59779
      });
    },
    get C396() {
      return C[396] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59780
      });
    },
    get C397() {
      return C[397] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59781
      });
    },
    get C398() {
      return C[398] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59782
      });
    },
    get C399() {
      return C[399] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59783
      });
    },
    get C400() {
      return C[400] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59784
      });
    },
    get C401() {
      return C[401] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59785
      });
    },
    get C402() {
      return C[402] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59786
      });
    },
    get C403() {
      return C[403] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59787
      });
    },
    get C404() {
      return C[404] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59788
      });
    },
    get C405() {
      return C[405] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59789
      });
    },
    get C406() {
      return C[406] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59790
      });
    },
    get C407() {
      return C[407] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59791
      });
    },
    get C408() {
      return C[408] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59792
      });
    },
    get C409() {
      return C[409] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59793
      });
    },
    get C410() {
      return C[410] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59794
      });
    },
    get C411() {
      return C[411] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59795
      });
    },
    get C412() {
      return C[412] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59796
      });
    },
    get C413() {
      return C[413] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59797
      });
    },
    get C414() {
      return C[414] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59798
      });
    },
    get C415() {
      return C[415] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59799
      });
    },
    get C416() {
      return C[416] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59800
      });
    },
    get C417() {
      return C[417] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59801
      });
    },
    get C418() {
      return C[418] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59802
      });
    },
    get C419() {
      return C[419] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59803
      });
    },
    get C420() {
      return C[420] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59804
      });
    },
    get C421() {
      return C[421] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59805
      });
    },
    get C422() {
      return C[422] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59806
      });
    },
    get C423() {
      return C[423] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59807
      });
    },
    get C424() {
      return C[424] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59808
      });
    },
    get C425() {
      return C[425] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59809
      });
    },
    get C426() {
      return C[426] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59810
      });
    },
    get C427() {
      return C[427] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59811
      });
    },
    get C428() {
      return C[428] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59812
      });
    },
    get C429() {
      return C[429] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59813
      });
    },
    get C430() {
      return C[430] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59814
      });
    },
    get C431() {
      return C[431] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59815
      });
    },
    get C432() {
      return C[432] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59816
      });
    },
    get C433() {
      return C[433] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59817
      });
    },
    get C434() {
      return C[434] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59818
      });
    },
    get C435() {
      return C[435] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59819
      });
    },
    get C436() {
      return C[436] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59820
      });
    },
    get C437() {
      return C[437] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59821
      });
    },
    get C438() {
      return C[438] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59822
      });
    },
    get C439() {
      return C[439] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59823
      });
    },
    get C440() {
      return C[440] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59824
      });
    },
    get C441() {
      return C[441] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59825
      });
    },
    get C442() {
      return C[442] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59826
      });
    },
    get C443() {
      return C[443] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59827
      });
    },
    get C444() {
      return C[444] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59828
      });
    },
    get C445() {
      return C[445] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59829
      });
    },
    get C446() {
      return C[446] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59830
      });
    },
    get C447() {
      return C[447] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59831
      });
    },
    get C448() {
      return C[448] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59832
      });
    },
    get C449() {
      return C[449] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59833
      });
    },
    get C450() {
      return C[450] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59834
      });
    },
    get C451() {
      return C[451] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59835
      });
    },
    get C452() {
      return C[452] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59836
      });
    },
    get C453() {
      return C[453] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59837
      });
    },
    get C454() {
      return C[454] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59838
      });
    },
    get C455() {
      return C[455] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59839
      });
    },
    get C456() {
      return C[456] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59840
      });
    },
    get C457() {
      return C[457] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59841
      });
    },
    get C458() {
      return C[458] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59842
      });
    },
    get C459() {
      return C[459] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59843
      });
    },
    get C460() {
      return C[460] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59844
      });
    },
    get C461() {
      return C[461] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59845
      });
    },
    get C462() {
      return C[462] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59846
      });
    },
    get C463() {
      return C[463] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59847
      });
    },
    get C464() {
      return C[464] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59848
      });
    },
    get C465() {
      return C[465] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59849
      });
    },
    get C466() {
      return C[466] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59850
      });
    },
    get C467() {
      return C[467] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59851
      });
    },
    get C468() {
      return C[468] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59852
      });
    },
    get C469() {
      return C[469] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59853
      });
    },
    get C470() {
      return C[470] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59854
      });
    },
    get C471() {
      return C[471] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59855
      });
    },
    get C472() {
      return C[472] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59856
      });
    },
    get C473() {
      return C[473] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59857
      });
    },
    get C474() {
      return C[474] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59858
      });
    },
    get C475() {
      return C[475] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59859
      });
    },
    get C476() {
      return C[476] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59860
      });
    },
    get C477() {
      return C[477] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59861
      });
    },
    get C478() {
      return C[478] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59862
      });
    },
    get C479() {
      return C[479] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59863
      });
    },
    get C480() {
      return C[480] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59864
      });
    },
    get C481() {
      return C[481] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59865
      });
    },
    get C482() {
      return C[482] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59866
      });
    },
    get C483() {
      return C[483] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59867
      });
    },
    get C484() {
      return C[484] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59868
      });
    },
    get C485() {
      return C[485] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59869
      });
    },
    get C486() {
      return C[486] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59870
      });
    },
    get C487() {
      return C[487] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59871
      });
    },
    get C488() {
      return C[488] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59872
      });
    },
    get C489() {
      return C[489] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59873
      });
    },
    get C490() {
      return C[490] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59874
      });
    },
    get C491() {
      return C[491] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59875
      });
    },
    get C492() {
      return C[492] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59876
      });
    },
    get C493() {
      return C[493] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59877
      });
    },
    get C494() {
      return C[494] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59878
      });
    },
    get C495() {
      return C[495] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59879
      });
    },
    get C496() {
      return C[496] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59880
      });
    },
    get C497() {
      return C[497] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59881
      });
    },
    get C498() {
      return C[498] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59882
      });
    },
    get C499() {
      return C[499] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59883
      });
    },
    get C500() {
      return C[500] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59884
      });
    },
    get C501() {
      return C[501] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59885
      });
    },
    get C502() {
      return C[502] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59886
      });
    },
    get C503() {
      return C[503] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59887
      });
    },
    get C504() {
      return C[504] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59888
      });
    },
    get C505() {
      return C[505] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59889
      });
    },
    get C506() {
      return C[506] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59890
      });
    },
    get C507() {
      return C[507] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59891
      });
    },
    get C508() {
      return C[508] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59892
      });
    },
    get C509() {
      return C[509] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59893
      });
    },
    get C510() {
      return C[510] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59894
      });
    },
    get C511() {
      return C[511] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59895
      });
    },
    get C512() {
      return C[512] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59896
      });
    },
    get C513() {
      return C[513] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59897
      });
    },
    get C514() {
      return C[514] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59898
      });
    },
    get C515() {
      return C[515] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59899
      });
    },
    get C516() {
      return C[516] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59900
      });
    },
    get C517() {
      return C[517] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59901
      });
    },
    get C518() {
      return C[518] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59902
      });
    },
    get C519() {
      return C[519] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59903
      });
    },
    get C520() {
      return C[520] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59904
      });
    },
    get C521() {
      return C[521] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59905
      });
    },
    get C522() {
      return C[522] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59906
      });
    },
    get C523() {
      return C[523] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59907
      });
    },
    get C524() {
      return C[524] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59908
      });
    },
    get C525() {
      return C[525] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59909
      });
    },
    get C526() {
      return C[526] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59910
      });
    },
    get C527() {
      return C[527] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59911
      });
    },
    get C528() {
      return C[528] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59912
      });
    },
    get C529() {
      return C[529] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59913
      });
    },
    get C530() {
      return C[530] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59914
      });
    },
    get C531() {
      return C[531] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59915
      });
    },
    get C532() {
      return C[532] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59916
      });
    },
    get C533() {
      return C[533] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59917
      });
    },
    get C534() {
      return C[534] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59918
      });
    },
    get C535() {
      return C[535] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59919
      });
    },
    get C536() {
      return C[536] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59920
      });
    },
    get C537() {
      return C[537] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59921
      });
    },
    get C538() {
      return C[538] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59922
      });
    },
    get C539() {
      return C[539] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59923
      });
    },
    get C540() {
      return C[540] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59924
      });
    },
    get C541() {
      return C[541] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59925
      });
    },
    get C542() {
      return C[542] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59926
      });
    },
    get C543() {
      return C[543] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59927
      });
    },
    get C544() {
      return C[544] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59928
      });
    },
    get C545() {
      return C[545] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59929
      });
    },
    get C546() {
      return C[546] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59930
      });
    },
    get C547() {
      return C[547] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59931
      });
    },
    get C548() {
      return C[548] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59932
      });
    },
    get C549() {
      return C[549] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59933
      });
    },
    get C550() {
      return C[550] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59934
      });
    },
    get C551() {
      return C[551] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59935
      });
    },
    get C552() {
      return C[552] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59936
      });
    },
    get C553() {
      return C[553] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59937
      });
    },
    get C554() {
      return C[554] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59938
      });
    },
    get C555() {
      return C[555] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59939
      });
    },
    get C556() {
      return C[556] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59940
      });
    },
    get C557() {
      return C[557] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59941
      });
    },
    get C558() {
      return C[558] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59942
      });
    },
    get C559() {
      return C[559] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59943
      });
    },
    get C560() {
      return C[560] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59944
      });
    },
    get C561() {
      return C[561] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59945
      });
    },
    get C562() {
      return C[562] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59946
      });
    },
    get C563() {
      return C[563] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59947
      });
    },
    get C564() {
      return C[564] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59948
      });
    },
    get C565() {
      return C[565] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59949
      });
    },
    get C566() {
      return C[566] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59950
      });
    },
    get C567() {
      return C[567] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59951
      });
    },
    get C568() {
      return C[568] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59952
      });
    },
    get C569() {
      return C[569] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59953
      });
    },
    get C570() {
      return C[570] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59954
      });
    },
    get C571() {
      return C[571] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59955
      });
    },
    get C572() {
      return C[572] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59956
      });
    },
    get C573() {
      return C[573] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59957
      });
    },
    get C574() {
      return C[574] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59958
      });
    },
    get C575() {
      return C[575] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59959
      });
    },
    get C576() {
      return C[576] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59960
      });
    },
    get C577() {
      return C[577] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59961
      });
    },
    get C578() {
      return C[578] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59962
      });
    },
    get C579() {
      return C[579] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59963
      });
    },
    get C580() {
      return C[580] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59964
      });
    },
    get C581() {
      return C[581] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59965
      });
    },
    get C582() {
      return C[582] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59966
      });
    },
    get C583() {
      return C[583] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59967
      });
    },
    get C584() {
      return C[584] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59968
      });
    },
    get C585() {
      return C[585] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59969
      });
    },
    get C586() {
      return C[586] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59970
      });
    },
    get C587() {
      return C[587] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59971
      });
    },
    get C588() {
      return C[588] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59972
      });
    },
    get C589() {
      return C[589] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59973
      });
    },
    get C590() {
      return C[590] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59974
      });
    },
    get C591() {
      return C[591] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59975
      });
    },
    get C592() {
      return C[592] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59976
      });
    },
    get C593() {
      return C[593] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59977
      });
    },
    get C594() {
      return C[594] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59978
      });
    },
    get C595() {
      return C[595] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59979
      });
    },
    get C596() {
      return C[596] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59980
      });
    },
    get C597() {
      return C[597] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59981
      });
    },
    get C598() {
      return C[598] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59982
      });
    },
    get C599() {
      return C[599] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59983
      });
    },
    get C600() {
      return C[600] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59984
      });
    },
    get C601() {
      return C[601] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59985
      });
    },
    get C602() {
      return C[602] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59986
      });
    },
    get C603() {
      return C[603] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59987
      });
    },
    get C604() {
      return C[604] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59988
      });
    },
    get C605() {
      return C[605] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59989
      });
    },
    get C606() {
      return C[606] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59990
      });
    },
    get C607() {
      return C[607] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59991
      });
    },
    get C608() {
      return C[608] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59992
      });
    },
    get C609() {
      return C[609] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59993
      });
    },
    get C610() {
      return C[610] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59994
      });
    },
    get C611() {
      return C[611] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59995
      });
    },
    get C612() {
      return C[612] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59996
      });
    },
    get C613() {
      return C[613] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59997
      });
    },
    get C614() {
      return C[614] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59998
      });
    },
    get C615() {
      return C[615] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 59999
      });
    },
    get C616() {
      return C[616] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60000
      });
    },
    get C617() {
      return C[617] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60001
      });
    },
    get C618() {
      return C[618] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60002
      });
    },
    get C619() {
      return C[619] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60003
      });
    },
    get C620() {
      return C[620] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60004
      });
    },
    get C621() {
      return C[621] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60005
      });
    },
    get C622() {
      return C[622] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60006
      });
    },
    get C623() {
      return C[623] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60007
      });
    },
    get C624() {
      return C[624] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60008
      });
    },
    get C625() {
      return C[625] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60009
      });
    },
    get C626() {
      return C[626] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60010
      });
    },
    get C627() {
      return C[627] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60011
      });
    },
    get C628() {
      return C[628] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60012
      });
    },
    get C629() {
      return C[629] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60013
      });
    },
    get C630() {
      return C[630] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60014
      });
    },
    get C631() {
      return C[631] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60015
      });
    },
    get C632() {
      return C[632] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60016
      });
    },
    get C633() {
      return C[633] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60017
      });
    },
    get C634() {
      return C[634] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60018
      });
    },
    get C635() {
      return C[635] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60019
      });
    },
    get C636() {
      return C[636] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60020
      });
    },
    get C637() {
      return C[637] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60021
      });
    },
    get C638() {
      return C[638] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60022
      });
    },
    get C639() {
      return C[639] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60023
      });
    },
    get C640() {
      return C[640] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60024
      });
    },
    get C641() {
      return C[641] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60025
      });
    },
    get C642() {
      return C[642] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60026
      });
    },
    get C643() {
      return C[643] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60027
      });
    },
    get C644() {
      return C[644] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60028
      });
    },
    get C645() {
      return C[645] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60029
      });
    },
    get C646() {
      return C[646] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60030
      });
    },
    get C647() {
      return C[647] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60031
      });
    },
    get C648() {
      return C[648] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60032
      });
    },
    get C649() {
      return C[649] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60033
      });
    },
    get C650() {
      return C[650] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60034
      });
    },
    get C651() {
      return C[651] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60035
      });
    },
    get C652() {
      return C[652] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60036
      });
    },
    get C653() {
      return C[653] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60037
      });
    },
    get C654() {
      return C[654] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60038
      });
    },
    get C655() {
      return C[655] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60039
      });
    },
    get C656() {
      return C[656] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60040
      });
    },
    get C657() {
      return C[657] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60041
      });
    },
    get C658() {
      return C[658] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60042
      });
    },
    get C659() {
      return C[659] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60043
      });
    },
    get C660() {
      return C[660] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60044
      });
    },
    get C661() {
      return C[661] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60045
      });
    },
    get C662() {
      return C[662] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60046
      });
    },
    get C663() {
      return C[663] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60047
      });
    },
    get C664() {
      return C[664] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60048
      });
    },
    get C665() {
      return C[665] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60049
      });
    },
    get C666() {
      return C[666] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60050
      });
    },
    get C667() {
      return C[667] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60051
      });
    },
    get C668() {
      return C[668] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60052
      });
    },
    get C669() {
      return C[669] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60053
      });
    },
    get C670() {
      return C[670] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60054
      });
    },
    get C671() {
      return C[671] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60055
      });
    },
    get C672() {
      return C[672] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60056
      });
    },
    get C673() {
      return C[673] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60057
      });
    },
    get C674() {
      return C[674] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60058
      });
    },
    get C675() {
      return C[675] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60059
      });
    },
    get C676() {
      return C[676] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60060
      });
    },
    get C677() {
      return C[677] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60061
      });
    },
    get C678() {
      return C[678] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60062
      });
    },
    get C679() {
      return C[679] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60063
      });
    },
    get C680() {
      return C[680] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60064
      });
    },
    get C681() {
      return C[681] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60065
      });
    },
    get C682() {
      return C[682] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60066
      });
    },
    get C683() {
      return C[683] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60067
      });
    },
    get C684() {
      return C[684] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60068
      });
    },
    get C685() {
      return C[685] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60069
      });
    },
    get C686() {
      return C[686] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60070
      });
    },
    get C687() {
      return C[687] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60071
      });
    },
    get C688() {
      return C[688] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60072
      });
    },
    get C689() {
      return C[689] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60073
      });
    },
    get C690() {
      return C[690] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60074
      });
    },
    get C691() {
      return C[691] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60075
      });
    },
    get C692() {
      return C[692] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60076
      });
    },
    get C693() {
      return C[693] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60077
      });
    },
    get C694() {
      return C[694] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60078
      });
    },
    get C695() {
      return C[695] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60079
      });
    },
    get C696() {
      return C[696] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60080
      });
    },
    get C697() {
      return C[697] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60081
      });
    },
    get C698() {
      return C[698] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60082
      });
    },
    get C699() {
      return C[699] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60083
      });
    },
    get C700() {
      return C[700] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60084
      });
    },
    get C701() {
      return C[701] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60085
      });
    },
    get C702() {
      return C[702] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60086
      });
    },
    get C703() {
      return C[703] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60087
      });
    },
    get C704() {
      return C[704] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60088
      });
    },
    get C705() {
      return C[705] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60089
      });
    },
    get C706() {
      return C[706] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60090
      });
    },
    get C707() {
      return C[707] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60091
      });
    },
    get C708() {
      return C[708] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60092
      });
    },
    get C709() {
      return C[709] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60093
      });
    },
    get C710() {
      return C[710] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60094
      });
    },
    get C711() {
      return C[711] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60095
      });
    },
    get C712() {
      return C[712] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60096
      });
    },
    get C713() {
      return C[713] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60097
      });
    },
    get C714() {
      return C[714] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60098
      });
    },
    get C715() {
      return C[715] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60099
      });
    },
    get C716() {
      return C[716] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60100
      });
    },
    get C717() {
      return C[717] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60101
      });
    },
    get C718() {
      return C[718] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60102
      });
    },
    get C719() {
      return C[719] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60103
      });
    },
    get C720() {
      return C[720] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60104
      });
    },
    get C721() {
      return C[721] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60105
      });
    },
    get C722() {
      return C[722] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60106
      });
    },
    get C723() {
      return C[723] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60107
      });
    },
    get C724() {
      return C[724] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60108
      });
    },
    get C725() {
      return C[725] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60109
      });
    },
    get C726() {
      return C[726] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60110
      });
    },
    get C727() {
      return C[727] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60111
      });
    },
    get C728() {
      return C[728] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60112
      });
    },
    get C729() {
      return C[729] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60113
      });
    },
    get C730() {
      return C[730] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60114
      });
    },
    get C731() {
      return C[731] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60115
      });
    },
    get C732() {
      return C[732] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60116
      });
    },
    get C733() {
      return C[733] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60117
      });
    },
    get C734() {
      return C[734] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60118
      });
    },
    get C735() {
      return C[735] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60119
      });
    },
    get C736() {
      return C[736] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60120
      });
    },
    get C737() {
      return C[737] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60121
      });
    },
    get C738() {
      return C[738] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60122
      });
    },
    get C739() {
      return C[739] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60123
      });
    },
    get C740() {
      return C[740] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60124
      });
    },
    get C741() {
      return C[741] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60125
      });
    },
    get C742() {
      return C[742] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60126
      });
    },
    get C743() {
      return C[743] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60127
      });
    },
    get C744() {
      return C[744] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60128
      });
    },
    get C745() {
      return C[745] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60129
      });
    },
    get C746() {
      return C[746] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60130
      });
    },
    get C747() {
      return C[747] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60131
      });
    },
    get C748() {
      return C[748] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60132
      });
    },
    get C749() {
      return C[749] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60133
      });
    },
    get C750() {
      return C[750] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60134
      });
    },
    get C751() {
      return C[751] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60135
      });
    },
    get C752() {
      return C[752] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60136
      });
    },
    get C753() {
      return C[753] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60137
      });
    },
    get C754() {
      return C[754] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60138
      });
    },
    get C755() {
      return C[755] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60139
      });
    },
    get C756() {
      return C[756] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60140
      });
    },
    get C757() {
      return C[757] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60141
      });
    },
    get C758() {
      return C[758] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60142
      });
    },
    get C759() {
      return C[759] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60143
      });
    },
    get C760() {
      return C[760] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60144
      });
    },
    get C761() {
      return C[761] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60145
      });
    },
    get C762() {
      return C[762] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60146
      });
    },
    get C763() {
      return C[763] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60147
      });
    },
    get C764() {
      return C[764] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60148
      });
    },
    get C765() {
      return C[765] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60149
      });
    },
    get C766() {
      return C[766] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60150
      });
    },
    get C767() {
      return C[767] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60151
      });
    },
    get C768() {
      return C[768] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60152
      });
    },
    get C769() {
      return C[769] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60153
      });
    },
    get C770() {
      return C[770] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60154
      });
    },
    get C771() {
      return C[771] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60155
      });
    },
    get C772() {
      return C[772] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60156
      });
    },
    get C773() {
      return C[773] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60157
      });
    },
    get C774() {
      return C[774] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60158
      });
    },
    get C775() {
      return C[775] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60159
      });
    },
    get C776() {
      return C[776] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60160
      });
    },
    get C777() {
      return C[777] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60161
      });
    },
    get C778() {
      return C[778] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60162
      });
    },
    get C779() {
      return C[779] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60163
      });
    },
    get C780() {
      return C[780] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60164
      });
    },
    get C781() {
      return C[781] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60165
      });
    },
    get C782() {
      return C[782] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60166
      });
    },
    get C783() {
      return C[783] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60167
      });
    },
    get C784() {
      return C[784] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60168
      });
    },
    get C785() {
      return C[785] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60169
      });
    },
    get C786() {
      return C[786] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60170
      });
    },
    get C787() {
      return C[787] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60171
      });
    },
    get C788() {
      return C[788] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60172
      });
    },
    get C789() {
      return C[789] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60173
      });
    },
    get C790() {
      return C[790] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60174
      });
    },
    get C791() {
      return C[791] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60175
      });
    },
    get C792() {
      return C[792] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60176
      });
    },
    get C793() {
      return C[793] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60177
      });
    },
    get C794() {
      return C[794] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60178
      });
    },
    get C795() {
      return C[795] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60179
      });
    },
    get C796() {
      return C[796] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60180
      });
    },
    get C797() {
      return C[797] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60181
      });
    },
    get C798() {
      return C[798] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60182
      });
    },
    get C799() {
      return C[799] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60183
      });
    },
    get C800() {
      return C[800] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60184
      });
    },
    get C801() {
      return C[801] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60185
      });
    },
    get C802() {
      return C[802] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60186
      });
    },
    get C803() {
      return C[803] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60187
      });
    },
    get C804() {
      return C[804] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60188
      });
    },
    get C805() {
      return C[805] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60189
      });
    },
    get C806() {
      return C[806] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60190
      });
    },
    get C807() {
      return C[807] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60191
      });
    },
    get C808() {
      return C[808] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60192
      });
    },
    get C809() {
      return C[809] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60193
      });
    },
    get C810() {
      return C[810] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60194
      });
    },
    get C811() {
      return C[811] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60195
      });
    },
    get C812() {
      return C[812] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60196
      });
    },
    get C813() {
      return C[813] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60197
      });
    },
    get C814() {
      return C[814] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60198
      });
    },
    get C815() {
      return C[815] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60199
      });
    },
    get C816() {
      return C[816] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60200
      });
    },
    get C817() {
      return C[817] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60201
      });
    },
    get C818() {
      return C[818] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60202
      });
    },
    get C819() {
      return C[819] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60203
      });
    },
    get C820() {
      return C[820] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60204
      });
    },
    get C821() {
      return C[821] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60205
      });
    },
    get C822() {
      return C[822] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60206
      });
    },
    get C823() {
      return C[823] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60207
      });
    },
    get C824() {
      return C[824] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60208
      });
    },
    get C825() {
      return C[825] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60209
      });
    },
    get C826() {
      return C[826] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60210
      });
    },
    get C827() {
      return C[827] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60211
      });
    },
    get C828() {
      return C[828] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60212
      });
    },
    get C829() {
      return C[829] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60213
      });
    },
    get C830() {
      return C[830] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60214
      });
    },
    get C831() {
      return C[831] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60215
      });
    },
    get C832() {
      return C[832] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60216
      });
    },
    get C833() {
      return C[833] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60217
      });
    },
    get C834() {
      return C[834] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60218
      });
    },
    get C835() {
      return C[835] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60219
      });
    },
    get C836() {
      return C[836] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60220
      });
    },
    get C837() {
      return C[837] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60221
      });
    },
    get C838() {
      return C[838] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60222
      });
    },
    get C839() {
      return C[839] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60223
      });
    },
    get C840() {
      return C[840] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60224
      });
    },
    get C841() {
      return C[841] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60225
      });
    },
    get C842() {
      return C[842] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60226
      });
    },
    get C843() {
      return C[843] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60227
      });
    },
    get C844() {
      return C[844] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60228
      });
    },
    get C845() {
      return C[845] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60229
      });
    },
    get C846() {
      return C[846] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60230
      });
    },
    get C847() {
      return C[847] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60231
      });
    },
    get C848() {
      return C[848] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60232
      });
    },
    get C849() {
      return C[849] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60233
      });
    },
    get C850() {
      return C[850] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60234
      });
    },
    get C851() {
      return C[851] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60235
      });
    },
    get C852() {
      return C[852] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60236
      });
    },
    get C853() {
      return C[853] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60237
      });
    },
    get C854() {
      return C[854] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60238
      });
    },
    get C855() {
      return C[855] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60239
      });
    },
    get C856() {
      return C[856] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60240
      });
    },
    get C857() {
      return C[857] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60241
      });
    },
    get C858() {
      return C[858] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60242
      });
    },
    get C859() {
      return C[859] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60243
      });
    },
    get C860() {
      return C[860] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60244
      });
    },
    get C861() {
      return C[861] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60245
      });
    },
    get C862() {
      return C[862] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60246
      });
    },
    get C863() {
      return C[863] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60247
      });
    },
    get C864() {
      return C[864] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60248
      });
    },
    get C865() {
      return C[865] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60249
      });
    },
    get C866() {
      return C[866] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60250
      });
    },
    get C867() {
      return C[867] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60251
      });
    },
    get C868() {
      return C[868] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60252
      });
    },
    get C869() {
      return C[869] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60253
      });
    },
    get C870() {
      return C[870] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60254
      });
    },
    get C871() {
      return C[871] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60255
      });
    },
    get C872() {
      return C[872] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60256
      });
    },
    get C873() {
      return C[873] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60257
      });
    },
    get C874() {
      return C[874] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60258
      });
    },
    get C875() {
      return C[875] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60259
      });
    },
    get C876() {
      return C[876] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60260
      });
    },
    get C877() {
      return C[877] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60261
      });
    },
    get C878() {
      return C[878] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60262
      });
    },
    get C879() {
      return C[879] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60263
      });
    },
    get C880() {
      return C[880] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60264
      });
    },
    get C881() {
      return C[881] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60265
      });
    },
    get C882() {
      return C[882] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60266
      });
    },
    get C883() {
      return C[883] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60267
      });
    },
    get C884() {
      return C[884] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60268
      });
    },
    get C885() {
      return C[885] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60269
      });
    },
    get C886() {
      return C[886] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60270
      });
    },
    get C887() {
      return C[887] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60271
      });
    },
    get C888() {
      return C[888] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60272
      });
    },
    get C889() {
      return C[889] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60273
      });
    },
    get C890() {
      return C[890] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60274
      });
    },
    get C891() {
      return C[891] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60275
      });
    },
    get C892() {
      return C[892] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60276
      });
    },
    get C893() {
      return C[893] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60277
      });
    },
    get C894() {
      return C[894] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60278
      });
    },
    get C895() {
      return C[895] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60279
      });
    },
    get C896() {
      return C[896] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60280
      });
    },
    get C897() {
      return C[897] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60281
      });
    },
    get C898() {
      return C[898] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60282
      });
    },
    get C899() {
      return C[899] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60283
      });
    },
    get C900() {
      return C[900] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60284
      });
    },
    get C901() {
      return C[901] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60285
      });
    },
    get C902() {
      return C[902] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60286
      });
    },
    get C903() {
      return C[903] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60287
      });
    },
    get C904() {
      return C[904] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60288
      });
    },
    get C905() {
      return C[905] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60289
      });
    },
    get C906() {
      return C[906] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60290
      });
    },
    get C907() {
      return C[907] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60291
      });
    },
    get C908() {
      return C[908] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60292
      });
    },
    get C909() {
      return C[909] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60293
      });
    },
    get C910() {
      return C[910] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60294
      });
    },
    get C911() {
      return C[911] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60295
      });
    },
    get C912() {
      return C[912] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60296
      });
    },
    get C913() {
      return C[913] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60297
      });
    },
    get C914() {
      return C[914] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60298
      });
    },
    get C915() {
      return C[915] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60299
      });
    },
    get C916() {
      return C[916] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60300
      });
    },
    get C917() {
      return C[917] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60301
      });
    },
    get C918() {
      return C[918] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60302
      });
    },
    get C919() {
      return C[919] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60303
      });
    },
    get C920() {
      return C[920] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60304
      });
    },
    get C921() {
      return C[921] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60305
      });
    },
    get C922() {
      return C[922] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60306
      });
    },
    get C923() {
      return C[923] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60307
      });
    },
    get C924() {
      return C[924] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60308
      });
    },
    get C925() {
      return C[925] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60309
      });
    },
    get C926() {
      return C[926] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60310
      });
    },
    get C927() {
      return C[927] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60311
      });
    },
    get C928() {
      return C[928] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60312
      });
    },
    get C929() {
      return C[929] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60313
      });
    },
    get C930() {
      return C[930] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60314
      });
    },
    get C931() {
      return C[931] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60315
      });
    },
    get C932() {
      return C[932] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60316
      });
    },
    get C933() {
      return C[933] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60317
      });
    },
    get C934() {
      return C[934] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60318
      });
    },
    get C935() {
      return C[935] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60319
      });
    },
    get C936() {
      return C[936] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60320
      });
    },
    get C937() {
      return C[937] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60321
      });
    },
    get C938() {
      return C[938] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60322
      });
    },
    get C939() {
      return C[939] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60323
      });
    },
    get C940() {
      return C[940] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60324
      });
    },
    get C941() {
      return C[941] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60325
      });
    },
    get C942() {
      return C[942] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60326
      });
    },
    get C943() {
      return C[943] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60327
      });
    },
    get C944() {
      return C[944] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60328
      });
    },
    get C945() {
      return C[945] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60329
      });
    },
    get C946() {
      return C[946] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60330
      });
    },
    get C947() {
      return C[947] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60331
      });
    },
    get C948() {
      return C[948] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60332
      });
    },
    get C949() {
      return C[949] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60333
      });
    },
    get C950() {
      return C[950] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60334
      });
    },
    get C951() {
      return C[951] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60335
      });
    },
    get C952() {
      return C[952] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60336
      });
    },
    get C953() {
      return C[953] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60337
      });
    },
    get C954() {
      return C[954] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60338
      });
    },
    get C955() {
      return C[955] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60339
      });
    },
    get C956() {
      return C[956] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60340
      });
    },
    get C957() {
      return C[957] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60341
      });
    },
    get C958() {
      return C[958] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60342
      });
    },
    get C959() {
      return C[959] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60343
      });
    },
    get C960() {
      return C[960] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60344
      });
    },
    get C961() {
      return C[961] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60345
      });
    },
    get C962() {
      return C[962] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60346
      });
    },
    get C963() {
      return C[963] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60347
      });
    },
    get C964() {
      return C[964] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60348
      });
    },
    get C965() {
      return C[965] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60349
      });
    },
    get C966() {
      return C[966] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60350
      });
    },
    get C967() {
      return C[967] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60351
      });
    },
    get C968() {
      return C[968] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60352
      });
    },
    get C969() {
      return C[969] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60353
      });
    },
    get C970() {
      return C[970] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60354
      });
    },
    get C971() {
      return C[971] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60355
      });
    },
    get C972() {
      return C[972] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60356
      });
    },
    get C973() {
      return C[973] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60357
      });
    },
    get C974() {
      return C[974] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60358
      });
    },
    get C975() {
      return C[975] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60359
      });
    },
    get C976() {
      return C[976] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60360
      });
    },
    get C977() {
      return C[977] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60361
      });
    },
    get C978() {
      return C[978] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60362
      });
    },
    get C979() {
      return C[979] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60363
      });
    },
    get C980() {
      return C[980] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60364
      });
    },
    get C981() {
      return C[981] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60365
      });
    },
    get C982() {
      return C[982] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60366
      });
    },
    get C983() {
      return C[983] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60367
      });
    },
    get C984() {
      return C[984] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60368
      });
    },
    get C985() {
      return C[985] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60369
      });
    },
    get C986() {
      return C[986] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60370
      });
    },
    get C987() {
      return C[987] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60371
      });
    },
    get C988() {
      return C[988] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60372
      });
    },
    get C989() {
      return C[989] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60373
      });
    },
    get C990() {
      return C[990] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60374
      });
    },
    get C991() {
      return C[991] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60375
      });
    },
    get C992() {
      return C[992] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60376
      });
    },
    get C993() {
      return C[993] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60377
      });
    },
    get C994() {
      return C[994] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60378
      });
    },
    get C995() {
      return C[995] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60379
      });
    },
    get C996() {
      return C[996] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60380
      });
    },
    get C997() {
      return C[997] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60381
      });
    },
    get C998() {
      return C[998] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60382
      });
    },
    get C999() {
      return C[999] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60383
      });
    },
    get C1000() {
      return C[1000] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60384
      });
    },
    get C1001() {
      return C[1001] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60385
      });
    },
    get C1002() {
      return C[1002] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60386
      });
    },
    get C1003() {
      return C[1003] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60387
      });
    },
    get C1004() {
      return C[1004] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60388
      });
    },
    get C1005() {
      return C[1005] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60389
      });
    },
    get C1006() {
      return C[1006] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60390
      });
    },
    get C1007() {
      return C[1007] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60391
      });
    },
    get C1008() {
      return C[1008] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60392
      });
    },
    get C1009() {
      return C[1009] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60393
      });
    },
    get C1010() {
      return C[1010] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60394
      });
    },
    get C1011() {
      return C[1011] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60395
      });
    },
    get C1012() {
      return C[1012] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60396
      });
    },
    get C1013() {
      return C[1013] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60397
      });
    },
    get C1014() {
      return C[1014] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60398
      });
    },
    get C1015() {
      return C[1015] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60399
      });
    },
    get C1016() {
      return C[1016] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60400
      });
    },
    get C1017() {
      return C[1017] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60401
      });
    },
    get C1018() {
      return C[1018] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60402
      });
    },
    get C1019() {
      return C[1019] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60403
      });
    },
    get C1020() {
      return C[1020] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60404
      });
    },
    get C1021() {
      return C[1021] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60405
      });
    },
    get C1022() {
      return C[1022] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60406
      });
    },
    get C1023() {
      return C[1023] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60407
      });
    },
    get C1024() {
      return C[1024] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60408
      });
    },
    get C1025() {
      return C[1025] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60409
      });
    },
    get C1026() {
      return C[1026] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60410
      });
    },
    get C1027() {
      return C[1027] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60411
      });
    },
    get C1028() {
      return C[1028] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60412
      });
    },
    get C1029() {
      return C[1029] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60413
      });
    },
    get C1030() {
      return C[1030] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60414
      });
    },
    get C1031() {
      return C[1031] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60415
      });
    },
    get C1032() {
      return C[1032] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60416
      });
    },
    get C1033() {
      return C[1033] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60417
      });
    },
    get C1034() {
      return C[1034] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60418
      });
    },
    get C1035() {
      return C[1035] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60419
      });
    },
    get C1036() {
      return C[1036] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60420
      });
    },
    get C1037() {
      return C[1037] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60421
      });
    },
    get C1038() {
      return C[1038] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60422
      });
    },
    get C1039() {
      return C[1039] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60423
      });
    },
    get C1040() {
      return C[1040] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60424
      });
    },
    get C1041() {
      return C[1041] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60425
      });
    },
    get C1042() {
      return C[1042] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60426
      });
    },
    get C1043() {
      return C[1043] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60427
      });
    },
    get C1044() {
      return C[1044] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60428
      });
    },
    get C1045() {
      return C[1045] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60429
      });
    },
    get C1046() {
      return C[1046] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60430
      });
    },
    get C1047() {
      return C[1047] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60431
      });
    },
    get C1048() {
      return C[1048] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60432
      });
    },
    get C1049() {
      return C[1049] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60433
      });
    },
    get C1050() {
      return C[1050] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60434
      });
    },
    get C1051() {
      return C[1051] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60435
      });
    },
    get C1052() {
      return C[1052] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60436
      });
    },
    get C1053() {
      return C[1053] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60437
      });
    },
    get C1054() {
      return C[1054] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60438
      });
    },
    get C1055() {
      return C[1055] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60439
      });
    },
    get C1056() {
      return C[1056] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60440
      });
    },
    get C1057() {
      return C[1057] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60441
      });
    },
    get C1058() {
      return C[1058] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60442
      });
    },
    get C1059() {
      return C[1059] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60443
      });
    },
    get C1060() {
      return C[1060] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60444
      });
    },
    get C1061() {
      return C[1061] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60445
      });
    },
    get C1062() {
      return C[1062] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60446
      });
    },
    get C1063() {
      return C[1063] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60447
      });
    },
    get C1064() {
      return C[1064] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60448
      });
    },
    get C1065() {
      return C[1065] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60449
      });
    },
    get C1066() {
      return C[1066] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60450
      });
    },
    get C1067() {
      return C[1067] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60451
      });
    },
    get C1068() {
      return C[1068] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60452
      });
    },
    get C1069() {
      return C[1069] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60453
      });
    },
    get C1070() {
      return C[1070] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60454
      });
    },
    get C1071() {
      return C[1071] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60455
      });
    },
    get C1072() {
      return C[1072] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60456
      });
    },
    get C1073() {
      return C[1073] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60457
      });
    },
    get C1074() {
      return C[1074] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60458
      });
    },
    get C1075() {
      return C[1075] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60459
      });
    },
    get C1076() {
      return C[1076] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60460
      });
    },
    get C1077() {
      return C[1077] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60461
      });
    },
    get C1078() {
      return C[1078] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60462
      });
    },
    get C1079() {
      return C[1079] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60463
      });
    },
    get C1080() {
      return C[1080] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60464
      });
    },
    get C1081() {
      return C[1081] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60465
      });
    },
    get C1082() {
      return C[1082] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60466
      });
    },
    get C1083() {
      return C[1083] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60467
      });
    },
    get C1084() {
      return C[1084] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60468
      });
    },
    get C1085() {
      return C[1085] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60469
      });
    },
    get C1086() {
      return C[1086] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60470
      });
    },
    get C1087() {
      return C[1087] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60471
      });
    },
    get C1088() {
      return C[1088] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60472
      });
    },
    get C1089() {
      return C[1089] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60473
      });
    },
    get C1090() {
      return C[1090] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60474
      });
    },
    get C1091() {
      return C[1091] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60475
      });
    },
    get C1092() {
      return C[1092] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60476
      });
    },
    get C1093() {
      return C[1093] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60477
      });
    },
    get C1094() {
      return C[1094] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60478
      });
    },
    get C1095() {
      return C[1095] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60479
      });
    },
    get C1096() {
      return C[1096] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60480
      });
    },
    get C1097() {
      return C[1097] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60481
      });
    },
    get C1098() {
      return C[1098] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60482
      });
    },
    get C1099() {
      return C[1099] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60483
      });
    },
    get C1100() {
      return C[1100] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60484
      });
    },
    get C1101() {
      return C[1101] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60485
      });
    },
    get C1102() {
      return C[1102] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60486
      });
    },
    get C1103() {
      return C[1103] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60487
      });
    },
    get C1104() {
      return C[1104] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60488
      });
    },
    get C1105() {
      return C[1105] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60489
      });
    },
    get C1106() {
      return C[1106] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60490
      });
    },
    get C1107() {
      return C[1107] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60491
      });
    },
    get C1108() {
      return C[1108] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60492
      });
    },
    get C1109() {
      return C[1109] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60493
      });
    },
    get C1110() {
      return C[1110] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60494
      });
    },
    get C1111() {
      return C[1111] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60495
      });
    },
    get C1112() {
      return C[1112] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60496
      });
    },
    get C1113() {
      return C[1113] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60497
      });
    },
    get C1114() {
      return C[1114] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60498
      });
    },
    get C1115() {
      return C[1115] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60499
      });
    },
    get C1116() {
      return C[1116] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60500
      });
    },
    get C1117() {
      return C[1117] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60501
      });
    },
    get C1118() {
      return C[1118] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60502
      });
    },
    get C1119() {
      return C[1119] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60503
      });
    },
    get C1120() {
      return C[1120] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60504
      });
    },
    get C1121() {
      return C[1121] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60505
      });
    },
    get C1122() {
      return C[1122] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60506
      });
    },
    get C1123() {
      return C[1123] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60507
      });
    },
    get C1124() {
      return C[1124] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60508
      });
    },
    get C1125() {
      return C[1125] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60509
      });
    },
    get C1126() {
      return C[1126] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60510
      });
    },
    get C1127() {
      return C[1127] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60511
      });
    },
    get C1128() {
      return C[1128] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60512
      });
    },
    get C1129() {
      return C[1129] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60513
      });
    },
    get C1130() {
      return C[1130] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60514
      });
    },
    get C1131() {
      return C[1131] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60515
      });
    },
    get C1132() {
      return C[1132] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60516
      });
    },
    get C1133() {
      return C[1133] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60517
      });
    },
    get C1134() {
      return C[1134] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60518
      });
    },
    get C1135() {
      return C[1135] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60519
      });
    },
    get C1136() {
      return C[1136] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60520
      });
    },
    get C1137() {
      return C[1137] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60521
      });
    },
    get C1138() {
      return C[1138] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60522
      });
    },
    get C1139() {
      return C[1139] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60523
      });
    },
    get C1140() {
      return C[1140] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60524
      });
    },
    get C1141() {
      return C[1141] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60525
      });
    },
    get C1142() {
      return C[1142] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60526
      });
    },
    get C1143() {
      return C[1143] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60527
      });
    },
    get C1144() {
      return C[1144] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60528
      });
    },
    get C1145() {
      return C[1145] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60529
      });
    },
    get C1146() {
      return C[1146] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60530
      });
    },
    get C1147() {
      return C[1147] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60531
      });
    },
    get C1148() {
      return C[1148] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60532
      });
    },
    get C1149() {
      return C[1149] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60533
      });
    },
    get C1150() {
      return C[1150] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60534
      });
    },
    get C1151() {
      return C[1151] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60535
      });
    },
    get C1152() {
      return C[1152] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60536
      });
    },
    get C1153() {
      return C[1153] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60537
      });
    },
    get C1154() {
      return C[1154] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60538
      });
    },
    get C1155() {
      return C[1155] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60539
      });
    },
    get C1156() {
      return C[1156] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60540
      });
    },
    get C1157() {
      return C[1157] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60541
      });
    },
    get C1158() {
      return C[1158] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60542
      });
    },
    get C1159() {
      return C[1159] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60543
      });
    },
    get C1160() {
      return C[1160] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60544
      });
    },
    get C1161() {
      return C[1161] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60545
      });
    },
    get C1162() {
      return C[1162] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60546
      });
    },
    get C1163() {
      return C[1163] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60547
      });
    },
    get C1164() {
      return C[1164] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60548
      });
    },
    get C1165() {
      return C[1165] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60549
      });
    },
    get C1166() {
      return C[1166] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60550
      });
    },
    get C1167() {
      return C[1167] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60551
      });
    },
    get C1168() {
      return C[1168] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60552
      });
    },
    get C1169() {
      return C[1169] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60553
      });
    },
    get C1170() {
      return C[1170] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60554
      });
    },
    get C1171() {
      return C[1171] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60555
      });
    },
    get C1172() {
      return C[1172] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60556
      });
    },
    get C1173() {
      return C[1173] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60557
      });
    },
    get C1174() {
      return C[1174] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60558
      });
    },
    get C1175() {
      return C[1175] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60559
      });
    },
    get C1176() {
      return C[1176] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60560
      });
    },
    get C1177() {
      return C[1177] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60561
      });
    },
    get C1178() {
      return C[1178] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60562
      });
    },
    get C1179() {
      return C[1179] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60563
      });
    },
    get C1180() {
      return C[1180] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60564
      });
    },
    get C1181() {
      return C[1181] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60565
      });
    },
    get C1182() {
      return C[1182] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60566
      });
    },
    get C1183() {
      return C[1183] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60567
      });
    },
    get C1184() {
      return C[1184] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60568
      });
    },
    get C1185() {
      return C[1185] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60569
      });
    },
    get C1186() {
      return C[1186] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60570
      });
    },
    get C1187() {
      return C[1187] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60571
      });
    },
    get C1188() {
      return C[1188] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60572
      });
    },
    get C1189() {
      return C[1189] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60573
      });
    },
    get C1190() {
      return C[1190] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60574
      });
    },
    get C1191() {
      return C[1191] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60575
      });
    },
    get C1192() {
      return C[1192] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60576
      });
    },
    get C1193() {
      return C[1193] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60577
      });
    },
    get C1194() {
      return C[1194] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60578
      });
    },
    get C1195() {
      return C[1195] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60579
      });
    },
    get C1196() {
      return C[1196] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60580
      });
    },
    get C1197() {
      return C[1197] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60581
      });
    },
    get C1198() {
      return C[1198] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60582
      });
    },
    get C1199() {
      return C[1199] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60583
      });
    },
    get C1200() {
      return C[1200] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60584
      });
    },
    get C1201() {
      return C[1201] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60585
      });
    },
    get C1202() {
      return C[1202] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60586
      });
    },
    get C1203() {
      return C[1203] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60587
      });
    },
    get C1204() {
      return C[1204] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60588
      });
    },
    get C1205() {
      return C[1205] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60589
      });
    },
    get C1206() {
      return C[1206] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60590
      });
    },
    get C1207() {
      return C[1207] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60591
      });
    },
    get C1208() {
      return C[1208] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60592
      });
    },
    get C1209() {
      return C[1209] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60593
      });
    },
    get C1210() {
      return C[1210] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60594
      });
    },
    get C1211() {
      return C[1211] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60595
      });
    },
    get C1212() {
      return C[1212] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60596
      });
    },
    get C1213() {
      return C[1213] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60597
      });
    },
    get C1214() {
      return C[1214] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60598
      });
    },
    get C1215() {
      return C[1215] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60599
      });
    },
    get C1216() {
      return C[1216] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60600
      });
    },
    get C1217() {
      return C[1217] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60601
      });
    },
    get C1218() {
      return C[1218] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60602
      });
    },
    get C1219() {
      return C[1219] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60603
      });
    },
    get C1220() {
      return C[1220] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60604
      });
    },
    get C1221() {
      return C[1221] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60605
      });
    },
    get C1222() {
      return C[1222] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60606
      });
    },
    get C1223() {
      return C[1223] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60607
      });
    },
    get C1224() {
      return C[1224] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60608
      });
    },
    get C1225() {
      return C[1225] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60609
      });
    },
    get C1226() {
      return C[1226] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60610
      });
    },
    get C1227() {
      return C[1227] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60611
      });
    },
    get C1228() {
      return C[1228] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60612
      });
    },
    get C1229() {
      return C[1229] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60613
      });
    },
    get C1230() {
      return C[1230] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60614
      });
    },
    get C1231() {
      return C[1231] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60615
      });
    },
    get C1232() {
      return C[1232] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60616
      });
    },
    get C1233() {
      return C[1233] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60617
      });
    },
    get C1234() {
      return C[1234] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60618
      });
    },
    get C1235() {
      return C[1235] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60619
      });
    },
    get C1236() {
      return C[1236] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60620
      });
    },
    get C1237() {
      return C[1237] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60621
      });
    },
    get C1238() {
      return C[1238] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60622
      });
    },
    get C1239() {
      return C[1239] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60623
      });
    },
    get C1240() {
      return C[1240] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60624
      });
    },
    get C1241() {
      return C[1241] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60625
      });
    },
    get C1242() {
      return C[1242] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60626
      });
    },
    get C1243() {
      return C[1243] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60627
      });
    },
    get C1244() {
      return C[1244] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60628
      });
    },
    get C1245() {
      return C[1245] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60629
      });
    },
    get C1246() {
      return C[1246] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60630
      });
    },
    get C1247() {
      return C[1247] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60631
      });
    },
    get C1248() {
      return C[1248] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60632
      });
    },
    get C1249() {
      return C[1249] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60633
      });
    },
    get C1250() {
      return C[1250] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60634
      });
    },
    get C1251() {
      return C[1251] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60635
      });
    },
    get C1252() {
      return C[1252] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60636
      });
    },
    get C1253() {
      return C[1253] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60637
      });
    },
    get C1254() {
      return C[1254] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60638
      });
    },
    get C1255() {
      return C[1255] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60639
      });
    },
    get C1256() {
      return C[1256] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60640
      });
    },
    get C1257() {
      return C[1257] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60641
      });
    },
    get C1258() {
      return C[1258] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60642
      });
    },
    get C1259() {
      return C[1259] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60643
      });
    },
    get C1260() {
      return C[1260] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60644
      });
    },
    get C1261() {
      return C[1261] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60645
      });
    },
    get C1262() {
      return C[1262] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60646
      });
    },
    get C1263() {
      return C[1263] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60647
      });
    },
    get C1264() {
      return C[1264] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60648
      });
    },
    get C1265() {
      return C[1265] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60649
      });
    },
    get C1266() {
      return C[1266] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60650
      });
    },
    get C1267() {
      return C[1267] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60651
      });
    },
    get C1268() {
      return C[1268] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60652
      });
    },
    get C1269() {
      return C[1269] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60653
      });
    },
    get C1270() {
      return C[1270] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60654
      });
    },
    get C1271() {
      return C[1271] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60655
      });
    },
    get C1272() {
      return C[1272] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60656
      });
    },
    get C1273() {
      return C[1273] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60657
      });
    },
    get C1274() {
      return C[1274] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60658
      });
    },
    get C1275() {
      return C[1275] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60659
      });
    },
    get C1276() {
      return C[1276] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60660
      });
    },
    get C1277() {
      return C[1277] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60661
      });
    },
    get C1278() {
      return C[1278] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60662
      });
    },
    get C1279() {
      return C[1279] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60663
      });
    },
    get C1280() {
      return C[1280] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60664
      });
    },
    get C1281() {
      return C[1281] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60665
      });
    },
    get C1282() {
      return C[1282] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60666
      });
    },
    get C1283() {
      return C[1283] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60667
      });
    },
    get C1284() {
      return C[1284] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60668
      });
    },
    get C1285() {
      return C[1285] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60669
      });
    },
    get C1286() {
      return C[1286] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60670
      });
    },
    get C1287() {
      return C[1287] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60671
      });
    },
    get C1288() {
      return C[1288] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60672
      });
    },
    get C1289() {
      return C[1289] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60673
      });
    },
    get C1290() {
      return C[1290] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60674
      });
    },
    get C1291() {
      return C[1291] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60675
      });
    },
    get C1292() {
      return C[1292] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60676
      });
    },
    get C1293() {
      return C[1293] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60677
      });
    },
    get C1294() {
      return C[1294] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60678
      });
    },
    get C1295() {
      return C[1295] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60679
      });
    },
    get C1296() {
      return C[1296] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60680
      });
    },
    get C1297() {
      return C[1297] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60681
      });
    },
    get C1298() {
      return C[1298] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60682
      });
    },
    get C1299() {
      return C[1299] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60683
      });
    },
    get C1300() {
      return C[1300] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60684
      });
    },
    get C1301() {
      return C[1301] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60685
      });
    },
    get C1302() {
      return C[1302] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60686
      });
    },
    get C1303() {
      return C[1303] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60687
      });
    },
    get C1304() {
      return C[1304] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60688
      });
    },
    get C1305() {
      return C[1305] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60689
      });
    },
    get C1306() {
      return C[1306] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60690
      });
    },
    get C1307() {
      return C[1307] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60691
      });
    },
    get C1308() {
      return C[1308] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60692
      });
    },
    get C1309() {
      return C[1309] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60693
      });
    },
    get C1310() {
      return C[1310] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60694
      });
    },
    get C1311() {
      return C[1311] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60695
      });
    },
    get C1312() {
      return C[1312] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60696
      });
    },
    get C1313() {
      return C[1313] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60697
      });
    },
    get C1314() {
      return C[1314] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60698
      });
    },
    get C1315() {
      return C[1315] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60699
      });
    },
    get C1316() {
      return C[1316] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60700
      });
    },
    get C1317() {
      return C[1317] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60701
      });
    },
    get C1318() {
      return C[1318] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60702
      });
    },
    get C1319() {
      return C[1319] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60703
      });
    },
    get C1320() {
      return C[1320] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60704
      });
    },
    get C1321() {
      return C[1321] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60705
      });
    },
    get C1322() {
      return C[1322] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60706
      });
    },
    get C1323() {
      return C[1323] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60707
      });
    },
    get C1324() {
      return C[1324] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60708
      });
    },
    get C1325() {
      return C[1325] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60709
      });
    },
    get C1326() {
      return C[1326] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60710
      });
    },
    get C1327() {
      return C[1327] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60711
      });
    },
    get C1328() {
      return C[1328] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60712
      });
    },
    get C1329() {
      return C[1329] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60713
      });
    },
    get C1330() {
      return C[1330] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60714
      });
    },
    get C1331() {
      return C[1331] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60715
      });
    },
    get C1332() {
      return C[1332] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60716
      });
    },
    get C1333() {
      return C[1333] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60717
      });
    },
    get C1334() {
      return C[1334] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60718
      });
    },
    get C1335() {
      return C[1335] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60719
      });
    },
    get C1336() {
      return C[1336] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60720
      });
    },
    get C1337() {
      return C[1337] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60721
      });
    },
    get C1338() {
      return C[1338] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60722
      });
    },
    get C1339() {
      return C[1339] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60723
      });
    },
    get C1340() {
      return C[1340] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60724
      });
    },
    get C1341() {
      return C[1341] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60725
      });
    },
    get C1342() {
      return C[1342] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60726
      });
    },
    get C1343() {
      return C[1343] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60727
      });
    },
    get C1344() {
      return C[1344] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60728
      });
    },
    get C1345() {
      return C[1345] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60729
      });
    },
    get C1346() {
      return C[1346] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60730
      });
    },
    get C1347() {
      return C[1347] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60731
      });
    },
    get C1348() {
      return C[1348] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60732
      });
    },
    get C1349() {
      return C[1349] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60733
      });
    },
    get C1350() {
      return C[1350] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60734
      });
    },
    get C1351() {
      return C[1351] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60735
      });
    },
    get C1352() {
      return C[1352] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60736
      });
    },
    get C1353() {
      return C[1353] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60737
      });
    },
    get C1354() {
      return C[1354] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60738
      });
    },
    get C1355() {
      return C[1355] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60739
      });
    },
    get C1356() {
      return C[1356] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60740
      });
    },
    get C1357() {
      return C[1357] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60741
      });
    },
    get C1358() {
      return C[1358] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60742
      });
    },
    get C1359() {
      return C[1359] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60743
      });
    },
    get C1360() {
      return C[1360] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60744
      });
    },
    get C1361() {
      return C[1361] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60745
      });
    },
    get C1362() {
      return C[1362] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60746
      });
    },
    get C1363() {
      return C[1363] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60747
      });
    },
    get C1364() {
      return C[1364] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60748
      });
    },
    get C1365() {
      return C[1365] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60749
      });
    },
    get C1366() {
      return C[1366] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60750
      });
    },
    get C1367() {
      return C[1367] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60751
      });
    },
    get C1368() {
      return C[1368] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60752
      });
    },
    get C1369() {
      return C[1369] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60753
      });
    },
    get C1370() {
      return C[1370] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60754
      });
    },
    get C1371() {
      return C[1371] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60755
      });
    },
    get C1372() {
      return C[1372] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60756
      });
    },
    get C1373() {
      return C[1373] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60757
      });
    },
    get C1374() {
      return C[1374] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60758
      });
    },
    get C1375() {
      return C[1375] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60759
      });
    },
    get C1376() {
      return C[1376] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60760
      });
    },
    get C1377() {
      return C[1377] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60761
      });
    },
    get C1378() {
      return C[1378] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60762
      });
    },
    get C1379() {
      return C[1379] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60763
      });
    },
    get C1380() {
      return C[1380] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60764
      });
    },
    get C1381() {
      return C[1381] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60765
      });
    },
    get C1382() {
      return C[1382] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60766
      });
    },
    get C1383() {
      return C[1383] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60767
      });
    },
    get C1384() {
      return C[1384] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60768
      });
    },
    get C1385() {
      return C[1385] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60769
      });
    },
    get C1386() {
      return C[1386] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60770
      });
    },
    get C1387() {
      return C[1387] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60771
      });
    },
    get C1388() {
      return C[1388] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60772
      });
    },
    get C1389() {
      return C[1389] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60773
      });
    },
    get C1390() {
      return C[1390] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60774
      });
    },
    get C1391() {
      return C[1391] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60775
      });
    },
    get C1392() {
      return C[1392] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60776
      });
    },
    get C1393() {
      return C[1393] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60777
      });
    },
    get C1394() {
      return C[1394] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60778
      });
    },
    get C1395() {
      return C[1395] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60779
      });
    },
    get C1396() {
      return C[1396] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60780
      });
    },
    get C1397() {
      return C[1397] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60781
      });
    },
    get C1398() {
      return C[1398] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60782
      });
    },
    get C1399() {
      return C[1399] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60783
      });
    },
    get C1400() {
      return C[1400] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60784
      });
    },
    get C1401() {
      return C[1401] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60785
      });
    },
    get C1402() {
      return C[1402] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60786
      });
    },
    get C1403() {
      return C[1403] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60787
      });
    },
    get C1404() {
      return C[1404] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60788
      });
    },
    get C1405() {
      return C[1405] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60789
      });
    },
    get C1406() {
      return C[1406] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60790
      });
    },
    get C1407() {
      return C[1407] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60791
      });
    },
    get C1408() {
      return C[1408] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60792
      });
    },
    get C1409() {
      return C[1409] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60793
      });
    },
    get C1410() {
      return C[1410] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60794
      });
    },
    get C1411() {
      return C[1411] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60795
      });
    },
    get C1412() {
      return C[1412] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60796
      });
    },
    get C1413() {
      return C[1413] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60797
      });
    },
    get C1414() {
      return C[1414] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60798
      });
    },
    get C1415() {
      return C[1415] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60799
      });
    },
    get C1416() {
      return C[1416] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60800
      });
    },
    get C1417() {
      return C[1417] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60801
      });
    },
    get C1418() {
      return C[1418] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60802
      });
    },
    get C1419() {
      return C[1419] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60803
      });
    },
    get C1420() {
      return C[1420] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60804
      });
    },
    get C1421() {
      return C[1421] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60805
      });
    },
    get C1422() {
      return C[1422] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60806
      });
    },
    get C1423() {
      return C[1423] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60807
      });
    },
    get C1424() {
      return C[1424] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60808
      });
    },
    get C1425() {
      return C[1425] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60809
      });
    },
    get C1426() {
      return C[1426] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60810
      });
    },
    get C1427() {
      return C[1427] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60811
      });
    },
    get C1428() {
      return C[1428] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60812
      });
    },
    get C1429() {
      return C[1429] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60813
      });
    },
    get C1430() {
      return C[1430] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60814
      });
    },
    get C1431() {
      return C[1431] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60815
      });
    },
    get C1432() {
      return C[1432] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60816
      });
    },
    get C1433() {
      return C[1433] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60817
      });
    },
    get C1434() {
      return C[1434] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60818
      });
    },
    get C1435() {
      return C[1435] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60819
      });
    },
    get C1436() {
      return C[1436] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60820
      });
    },
    get C1437() {
      return C[1437] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60821
      });
    },
    get C1438() {
      return C[1438] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60822
      });
    },
    get C1439() {
      return C[1439] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60823
      });
    },
    get C1440() {
      return C[1440] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60824
      });
    },
    get C1441() {
      return C[1441] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60825
      });
    },
    get C1442() {
      return C[1442] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60826
      });
    },
    get C1443() {
      return C[1443] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60827
      });
    },
    get C1444() {
      return C[1444] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60828
      });
    },
    get C1445() {
      return C[1445] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60829
      });
    },
    get C1446() {
      return C[1446] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60830
      });
    },
    get C1447() {
      return C[1447] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60831
      });
    },
    get C1448() {
      return C[1448] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60832
      });
    },
    get C1449() {
      return C[1449] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60833
      });
    },
    get C1450() {
      return C[1450] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60834
      });
    },
    get C1451() {
      return C[1451] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60835
      });
    },
    get C1452() {
      return C[1452] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60836
      });
    },
    get C1453() {
      return C[1453] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60837
      });
    },
    get C1454() {
      return C[1454] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60838
      });
    },
    get C1455() {
      return C[1455] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60839
      });
    },
    get C1456() {
      return C[1456] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60840
      });
    },
    get C1457() {
      return C[1457] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60841
      });
    },
    get C1458() {
      return C[1458] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60842
      });
    },
    get C1459() {
      return C[1459] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60843
      });
    },
    get C1460() {
      return C[1460] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60844
      });
    },
    get C1461() {
      return C[1461] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60845
      });
    },
    get C1462() {
      return C[1462] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60846
      });
    },
    get C1463() {
      return C[1463] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60847
      });
    },
    get C1464() {
      return C[1464] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60848
      });
    },
    get C1465() {
      return C[1465] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60849
      });
    },
    get C1466() {
      return C[1466] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60850
      });
    },
    get C1467() {
      return C[1467] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60851
      });
    },
    get C1468() {
      return C[1468] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60852
      });
    },
    get C1469() {
      return C[1469] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60853
      });
    },
    get C1470() {
      return C[1470] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60854
      });
    },
    get C1471() {
      return C[1471] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60855
      });
    },
    get C1472() {
      return C[1472] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60856
      });
    },
    get C1473() {
      return C[1473] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60857
      });
    },
    get C1474() {
      return C[1474] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60858
      });
    },
    get C1475() {
      return C[1475] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60859
      });
    },
    get C1476() {
      return C[1476] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60860
      });
    },
    get C1477() {
      return C[1477] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60861
      });
    },
    get C1478() {
      return C[1478] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60862
      });
    },
    get C1479() {
      return C[1479] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60863
      });
    },
    get C1480() {
      return C[1480] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60864
      });
    },
    get C1481() {
      return C[1481] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60865
      });
    },
    get C1482() {
      return C[1482] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60866
      });
    },
    get C1483() {
      return C[1483] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60867
      });
    },
    get C1484() {
      return C[1484] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60868
      });
    },
    get C1485() {
      return C[1485] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60869
      });
    },
    get C1486() {
      return C[1486] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60870
      });
    },
    get C1487() {
      return C[1487] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60871
      });
    },
    get C1488() {
      return C[1488] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60872
      });
    },
    get C1489() {
      return C[1489] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60873
      });
    },
    get C1490() {
      return C[1490] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60874
      });
    },
    get C1491() {
      return C[1491] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60875
      });
    },
    get C1492() {
      return C[1492] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60876
      });
    },
    get C1493() {
      return C[1493] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60877
      });
    },
    get C1494() {
      return C[1494] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60878
      });
    },
    get C1495() {
      return C[1495] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60879
      });
    },
    get C1496() {
      return C[1496] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60880
      });
    },
    get C1497() {
      return C[1497] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60881
      });
    },
    get C1498() {
      return C[1498] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60882
      });
    },
    get C1499() {
      return C[1499] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60883
      });
    },
    get C1500() {
      return C[1500] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60884
      });
    },
    get C1501() {
      return C[1501] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60885
      });
    },
    get C1502() {
      return C[1502] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60886
      });
    },
    get C1503() {
      return C[1503] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60887
      });
    },
    get C1504() {
      return C[1504] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60888
      });
    },
    get C1505() {
      return C[1505] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60889
      });
    },
    get C1506() {
      return C[1506] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60890
      });
    },
    get C1507() {
      return C[1507] = dart.const({
        __proto__: icon_data.IconData.prototype,
        [IconData_matchTextDirection]: false,
        [IconData_fontPackage]: "flutter_boxicons",
        [IconData_fontFamily]: "Boxicons",
        [IconData_codePoint]: 60891
      });
    },
    get C1508() {
      return C[1508] = dart.const({
        __proto__: text$.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Username"
      });
    },
    get C1509() {
      return C[1509] = dart.const({
        __proto__: ViewProf.ProfilePage.prototype,
        [Widget_key]: null
      });
    },
    get C1510() {
      return C[1510] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4283842536
      });
    },
    get C1511() {
      return C[1511] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4289305599
      });
    },
    get C1512() {
      return C[1512] = dart.const({
        __proto__: text$.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Premium Membership"
      });
    },
    get C1513() {
      return C[1513] = dart.const({
        __proto__: text$.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "You are not a premium member."
      });
    },
    get C1514() {
      return C[1514] = dart.const({
        __proto__: text$.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "OK"
      });
    },
    get C1515() {
      return C[1515] = dart.const({
        __proto__: text$.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Get Premium"
      });
    },
    get C1516() {
      return C[1516] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 16,
        [EdgeInsets_right]: 16,
        [EdgeInsets_top]: 16,
        [EdgeInsets_left]: 16
      });
    },
    get C1517() {
      return C[1517] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4293848310
      });
    },
    get C1518() {
      return C[1518] = dart.const({
        __proto__: ViewProf.ProfileHeader.prototype,
        [Widget_key]: null
      });
    },
    get C1521() {
      return C[1521] = dart.const({
        __proto__: ui.Offset.prototype,
        [OffsetBase__dy]: 0,
        [OffsetBase__dx]: 0
      });
    },
    get C1522() {
      return C[1522] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 1711276032
      });
    },
    get C1523() {
      return C[1523] = dart.const({
        __proto__: ui.BlurStyle.prototype,
        [_Enum__name]: "normal",
        [_Enum_index]: 0
      });
    },
    get C1520() {
      return C[1520] = dart.const({
        __proto__: box_shadow.BoxShadow.prototype,
        [Shadow_blurRadius]: 4,
        [Shadow_offset]: C[1521] || CT.C1521,
        [Shadow_color]: C[1522] || CT.C1522,
        [BoxShadow_blurStyle]: C[1523] || CT.C1523,
        [BoxShadow_spreadRadius]: 0
      });
    },
    get C1519() {
      return C[1519] = dart.constList([C[1520] || CT.C1520], box_shadow.BoxShadow);
    },
    get C1525() {
      return C[1525] = dart.const({
        __proto__: ViewProf.ProfileInfo.prototype,
        [Widget_key]: null
      });
    },
    get C1524() {
      return C[1524] = dart.const({
        __proto__: basic.Padding.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[1525] || CT.C1525,
        [Padding_padding]: C[1516] || CT.C1516
      });
    },
    get C1526() {
      return C[1526] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: null,
        [SizedBox_width]: 16
      });
    },
    get C1527() {
      return C[1527] = dart.const({
        __proto__: text$.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Premium"
      });
    },
    get C1529() {
      return C[1529] = dart.const({
        __proto__: ui.Clip.prototype,
        [_Enum__name]: "hardEdge",
        [_Enum_index]: 1
      });
    },
    get C1530() {
      return C[1530] = dart.const({
        __proto__: dismissible.DismissDirection.prototype,
        [_Enum__name]: "down",
        [_Enum_index]: 5
      });
    },
    get C1531() {
      return C[1531] = dart.const({
        __proto__: core.Duration.prototype,
        [Duration__duration]: 4000000
      });
    },
    get C1532() {
      return C[1532] = dart.const({
        __proto__: text$.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Message functionality not implemented yet."
      });
    },
    get C1528() {
      return C[1528] = dart.const({
        __proto__: snack_bar.SnackBar.prototype,
        [Widget_key]: null,
        [SnackBar_clipBehavior]: C[1529] || CT.C1529,
        [SnackBar_dismissDirection]: C[1530] || CT.C1530,
        [SnackBar_onVisible]: null,
        [SnackBar_animation]: null,
        [SnackBar_duration]: C[1531] || CT.C1531,
        [SnackBar_closeIconColor]: null,
        [SnackBar_showCloseIcon]: null,
        [SnackBar_action]: null,
        [SnackBar_behavior]: null,
        [SnackBar_shape]: null,
        [SnackBar_width]: null,
        [SnackBar_padding]: null,
        [SnackBar_margin]: null,
        [SnackBar_elevation]: null,
        [SnackBar_backgroundColor]: null,
        [SnackBar_content]: C[1532] || CT.C1532
      });
    },
    get C1534() {
      return C[1534] = dart.const({
        __proto__: ui.TextAlign.prototype,
        [_Enum__name]: "center",
        [_Enum_index]: 2
      });
    },
    get C1536() {
      return C[1536] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 600,
        [FontWeight_index]: 5
      });
    },
    get C1537() {
      return C[1537] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4281545523
      });
    },
    get C1535() {
      return C[1535] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[1536] || CT.C1536,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[1537] || CT.C1537,
        [TextStyle_inherit]: true
      });
    },
    get C1533() {
      return C[1533] = dart.const({
        __proto__: text$.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: C[1534] || CT.C1534,
        [Text_strutStyle]: null,
        [Text_style]: C[1535] || CT.C1535,
        [Text_textSpan]: null,
        [Text_data]: "Name PlaceHolder"
      });
    },
    get C1538() {
      return C[1538] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 8,
        [SizedBox_width]: null
      });
    },
    get C1543() {
      return C[1543] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4294967295
      });
    },
    get C1542() {
      return C[1542] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: null,
        [TextStyle_fontSize]: 24,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[1543] || CT.C1543,
        [TextStyle_inherit]: true
      });
    },
    get C1541() {
      return C[1541] = dart.const({
        __proto__: text$.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: C[1542] || CT.C1542,
        [Text_textSpan]: null,
        [Text_data]: "@"
      });
    },
    get C1544() {
      return C[1544] = dart.const({
        __proto__: alignment.Alignment.prototype,
        [Alignment_y]: 0,
        [Alignment_x]: 0
      });
    },
    get C1540() {
      return C[1540] = dart.const({
        __proto__: basic.Center.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: C[1541] || CT.C1541,
        [Align_heightFactor]: null,
        [Align_widthFactor]: null,
        [Align_alignment]: C[1544] || CT.C1544
      });
    },
    get C1539() {
      return C[1539] = dart.const({
        __proto__: circle_avatar.CircleAvatar.prototype,
        [Widget_key]: null,
        [CircleAvatar_maxRadius]: null,
        [CircleAvatar_minRadius]: null,
        [CircleAvatar_radius]: 31.5,
        [CircleAvatar_onForegroundImageError]: null,
        [CircleAvatar_onBackgroundImageError]: null,
        [CircleAvatar_foregroundImage]: null,
        [CircleAvatar_backgroundImage]: null,
        [CircleAvatar_foregroundColor]: null,
        [CircleAvatar_backgroundColor]: C[1511] || CT.C1511,
        [CircleAvatar_child]: C[1540] || CT.C1540
      });
    },
    get C1545() {
      return C[1545] = dart.const({
        __proto__: basic.SizedBox.prototype,
        [Widget_key]: null,
        [SingleChildRenderObjectWidget_child]: null,
        [SizedBox_height]: 16,
        [SizedBox_width]: null
      });
    },
    get C1548() {
      return C[1548] = dart.const({
        __proto__: ui.FontWeight.prototype,
        [FontWeight_value]: 300,
        [FontWeight_index]: 2
      });
    },
    get C1547() {
      return C[1547] = dart.const({
        __proto__: text_style.TextStyle.prototype,
        [TextStyle_overflow]: null,
        [TextStyle_fontVariations]: null,
        [TextStyle_fontFeatures]: null,
        [TextStyle_shadows]: null,
        [TextStyle_debugLabel]: null,
        [TextStyle_decorationThickness]: null,
        [TextStyle_decorationStyle]: null,
        [TextStyle_decorationColor]: null,
        [TextStyle_decoration]: null,
        [TextStyle_background]: null,
        [TextStyle_foreground]: null,
        [TextStyle_locale]: null,
        [TextStyle_leadingDistribution]: null,
        [TextStyle_height]: null,
        [TextStyle_textBaseline]: null,
        [TextStyle_wordSpacing]: null,
        [TextStyle_letterSpacing]: null,
        [TextStyle_fontStyle]: null,
        [TextStyle_fontWeight]: C[1548] || CT.C1548,
        [TextStyle_fontSize]: 16,
        [TextStyle__package]: null,
        [TextStyle__fontFamilyFallback]: null,
        [TextStyle_fontFamily]: null,
        [TextStyle_backgroundColor]: null,
        [TextStyle_color]: C[1537] || CT.C1537,
        [TextStyle_inherit]: true
      });
    },
    get C1546() {
      return C[1546] = dart.const({
        __proto__: text$.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: C[1534] || CT.C1534,
        [Text_strutStyle]: null,
        [Text_style]: C[1547] || CT.C1547,
        [Text_textSpan]: null,
        [Text_data]: "@Name PlaceHolder"
      });
    },
    get C1549() {
      return C[1549] = dart.const({
        __proto__: text$.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Message"
      });
    },
    get C1550() {
      return C[1550] = dart.const({
        __proto__: text$.Text.prototype,
        [Widget_key]: null,
        [Text_selectionColor]: null,
        [Text_textHeightBehavior]: null,
        [Text_textWidthBasis]: null,
        [Text_semanticsLabel]: null,
        [Text_maxLines]: null,
        [Text_textScaleFactor]: null,
        [Text_overflow]: null,
        [Text_softWrap]: null,
        [Text_locale]: null,
        [Text_textDirection]: null,
        [Text_textAlign]: null,
        [Text_strutStyle]: null,
        [Text_style]: null,
        [Text_textSpan]: null,
        [Text_data]: "Profile Page"
      });
    },
    get C1551() {
      return C[1551] = dart.const({
        __proto__: ui.Color.prototype,
        [Color_value]: 4280750015
      });
    },
    get C1552() {
      return C[1552] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 8,
        [EdgeInsets_right]: 8,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 8
      });
    },
    get C1553() {
      return C[1553] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 0,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 8,
        [EdgeInsets_left]: 0
      });
    },
    get C1555() {
      return C[1555] = dart.const({
        __proto__: camera_options.VideoConstraints.prototype,
        [VideoConstraints_deviceId]: null,
        [VideoConstraints_height]: null,
        [VideoConstraints_width]: null,
        [VideoConstraints_facingMode]: null
      });
    },
    get C1556() {
      return C[1556] = dart.const({
        __proto__: camera_options.AudioConstraints.prototype,
        [AudioConstraints_enabled]: false
      });
    },
    get C1554() {
      return C[1554] = dart.const({
        __proto__: camera_options.CameraOptions.prototype,
        [CameraOptions_video]: C[1555] || CT.C1555,
        [CameraOptions_audio]: C[1556] || CT.C1556
      });
    },
    get C1557() {
      return C[1557] = dart.const({
        __proto__: image_format_group.ImageFormatGroup.prototype,
        [_Enum__name]: "unknown",
        [_Enum_index]: 0
      });
    },
    get C1558() {
      return C[1558] = dart.const({
        __proto__: T$._EmptyStreamOfCameraResolutionChangedEvent().prototype
      });
    },
    get C1559() {
      return C[1559] = dart.const({
        __proto__: T$._EmptyStreamOfDeviceOrientationChangedEvent().prototype
      });
    },
    get C1560() {
      return C[1560] = dart.const({
        __proto__: edge_insets.EdgeInsets.prototype,
        [EdgeInsets_bottom]: 10,
        [EdgeInsets_right]: 0,
        [EdgeInsets_top]: 10,
        [EdgeInsets_left]: 0
      });
    },
    get C1561() {
      return C[1561] = dart.fn(dart.global.MediaRecorder.isTypeSupported, T$.StringTobool());
    },
    get C1562() {
      return C[1562] = dart.constList(["video/mp4", "video/webm"], core.String);
    },
    get C1563() {
      return C[1563] = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 2160,
        [OffsetBase__dx]: 4096
      });
    },
    get C1564() {
      return C[1564] = dart.const({
        __proto__: resolution_preset.ResolutionPreset.prototype,
        [_Enum__name]: "max",
        [_Enum_index]: 5
      });
    },
    get C1565() {
      return C[1565] = dart.const({
        __proto__: resolution_preset.ResolutionPreset.prototype,
        [_Enum__name]: "ultraHigh",
        [_Enum_index]: 4
      });
    },
    get C1566() {
      return C[1566] = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 1080,
        [OffsetBase__dx]: 1920
      });
    },
    get C1567() {
      return C[1567] = dart.const({
        __proto__: resolution_preset.ResolutionPreset.prototype,
        [_Enum__name]: "veryHigh",
        [_Enum_index]: 3
      });
    },
    get C1568() {
      return C[1568] = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 720,
        [OffsetBase__dx]: 1280
      });
    },
    get C1569() {
      return C[1569] = dart.const({
        __proto__: resolution_preset.ResolutionPreset.prototype,
        [_Enum__name]: "high",
        [_Enum_index]: 2
      });
    },
    get C1570() {
      return C[1570] = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 480,
        [OffsetBase__dx]: 720
      });
    },
    get C1571() {
      return C[1571] = dart.const({
        __proto__: resolution_preset.ResolutionPreset.prototype,
        [_Enum__name]: "medium",
        [_Enum_index]: 1
      });
    },
    get C1572() {
      return C[1572] = dart.const({
        __proto__: ui.Size.prototype,
        [OffsetBase__dy]: 240,
        [OffsetBase__dx]: 320
      });
    },
    get C1573() {
      return C[1573] = dart.const({
        __proto__: resolution_preset.ResolutionPreset.prototype,
        [_Enum__name]: "low",
        [_Enum_index]: 0
      });
    },
    get C1574() {
      return C[1574] = dart.const({
        __proto__: system_chrome.DeviceOrientation.prototype,
        [_Enum__name]: "portraitUp",
        [_Enum_index]: 0
      });
    },
    get C1575() {
      return C[1575] = dart.const({
        __proto__: system_chrome.DeviceOrientation.prototype,
        [_Enum__name]: "landscapeLeft",
        [_Enum_index]: 1
      });
    },
    get C1576() {
      return C[1576] = dart.const({
        __proto__: system_chrome.DeviceOrientation.prototype,
        [_Enum__name]: "portraitDown",
        [_Enum_index]: 2
      });
    },
    get C1577() {
      return C[1577] = dart.const({
        __proto__: system_chrome.DeviceOrientation.prototype,
        [_Enum__name]: "landscapeRight",
        [_Enum_index]: 3
      });
    },
    get C1578() {
      return C[1578] = dart.fn(async_map._dropPrevious, T$.TAnddynamicToT());
    },
    get C1580() {
      return C[1580] = dart.fn(async_map._ignore, T$.SinkOfTTovoid());
    },
    get C1579() {
      return C[1579] = dart.const(dart.gbind(C[1580] || CT.C1580, dart.dynamic));
    },
    get C1581() {
      return C[1581] = dart.fn(rate_limit._dropPrevious, T$.TAnddynamicToT$1());
    },
    get C1582() {
      return C[1582] = dart.fn(rate_limit._collect, T$.TAndListNOfTToListOfT());
    },
    get C1583() {
      return C[1583] = dart.fn(rate_limit._empty, T$.SinkOfListOfTTovoid());
    },
    get C1584() {
      return C[1584] = dart.fn(rate_limit._ignore, T$.SinkOfTTovoid$1());
    },
    get C1585() {
      return C[1585] = dart.fn($switch._ignore, T$.dynamicAnddynamicTovoid());
    },
    get C1586() {
      return C[1586] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "mediaErrorAborted"
      });
    },
    get C1587() {
      return C[1587] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "mediaErrorNetwork"
      });
    },
    get C1588() {
      return C[1588] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "mediaErrorDecode"
      });
    },
    get C1589() {
      return C[1589] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "mediaErrorSourceNotSupported"
      });
    },
    get C1590() {
      return C[1590] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "mediaErrorUnknown"
      });
    },
    get C1591() {
      return C[1591] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "cameraNotSupported"
      });
    },
    get C1592() {
      return C[1592] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "cameraNotFound"
      });
    },
    get C1593() {
      return C[1593] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "cameraNotReadable"
      });
    },
    get C1594() {
      return C[1594] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "cameraOverconstrained"
      });
    },
    get C1595() {
      return C[1595] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "CameraAccessDenied"
      });
    },
    get C1596() {
      return C[1596] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "cameraType"
      });
    },
    get C1597() {
      return C[1597] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "cameraAbort"
      });
    },
    get C1598() {
      return C[1598] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "cameraSecurity"
      });
    },
    get C1599() {
      return C[1599] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "cameraMissingMetadata"
      });
    },
    get C1600() {
      return C[1600] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "orientationNotSupported"
      });
    },
    get C1601() {
      return C[1601] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "torchModeNotSupported"
      });
    },
    get C1602() {
      return C[1602] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "zoomLevelNotSupported"
      });
    },
    get C1603() {
      return C[1603] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "zoomLevelInvalid"
      });
    },
    get C1604() {
      return C[1604] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "cameraNotStarted"
      });
    },
    get C1605() {
      return C[1605] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "videoRecordingNotStarted"
      });
    },
    get C1606() {
      return C[1606] = dart.const({
        __proto__: camera_error_code.CameraErrorCode.prototype,
        [_type$]: "cameraUnknown"
      });
    },
    get C1607() {
      return C[1607] = dart.const({
        __proto__: camera_options.CameraType.prototype,
        [_type$0]: "environment"
      });
    },
    get C1608() {
      return C[1608] = dart.const({
        __proto__: camera_options.CameraType.prototype,
        [_type$0]: "user"
      });
    },
    get C1611() {
      return C[1611] = dart.const({
        __proto__: message_codecs.StandardMessageCodec.prototype
      });
    },
    get C1610() {
      return C[1610] = dart.const({
        __proto__: message_codecs.StandardMethodCodec.prototype,
        [StandardMethodCodec_messageCodec]: C[1611] || CT.C1611
      });
    },
    get C1609() {
      return C[1609] = dart.const({
        __proto__: platform_channel.MethodChannel.prototype,
        [MethodChannel__binaryMessenger]: null,
        [MethodChannel_codec]: C[1610] || CT.C1610,
        [MethodChannel_name]: "flutter.io/cameraPlugin/device"
      });
    },
    get C1612() {
      return C[1612] = dart.const({
        __proto__: platform_channel.EventChannel.prototype,
        [EventChannel__binaryMessenger]: null,
        [EventChannel_codec]: C[1610] || CT.C1610,
        [EventChannel_name]: "plugins.flutter.io/camera/imageStream"
      });
    },
    get C1613() {
      return C[1613] = dart.const({
        __proto__: flash_mode.FlashMode.prototype,
        [_Enum__name]: "off",
        [_Enum_index]: 0
      });
    },
    get C1614() {
      return C[1614] = dart.const({
        __proto__: flash_mode.FlashMode.prototype,
        [_Enum__name]: "auto",
        [_Enum_index]: 1
      });
    },
    get C1615() {
      return C[1615] = dart.const({
        __proto__: flash_mode.FlashMode.prototype,
        [_Enum__name]: "always",
        [_Enum_index]: 2
      });
    },
    get C1616() {
      return C[1616] = dart.const({
        __proto__: flash_mode.FlashMode.prototype,
        [_Enum__name]: "torch",
        [_Enum_index]: 3
      });
    },
    get C1617() {
      return C[1617] = dart.const({
        __proto__: platform_channel.MethodChannel.prototype,
        [MethodChannel__binaryMessenger]: null,
        [MethodChannel_codec]: C[1610] || CT.C1610,
        [MethodChannel_name]: "plugins.flutter.io/camera"
      });
    },
    get C1618() {
      return C[1618] = dart.constList([C[1573] || CT.C1573, C[1571] || CT.C1571, C[1569] || CT.C1569, C[1567] || CT.C1567, C[1565] || CT.C1565, C[1564] || CT.C1564], resolution_preset.ResolutionPreset);
    },
    get C1620() {
      return C[1620] = dart.const({
        __proto__: camera_description.CameraLensDirection.prototype,
        [_Enum__name]: "front",
        [_Enum_index]: 0
      });
    },
    get C1621() {
      return C[1621] = dart.const({
        __proto__: camera_description.CameraLensDirection.prototype,
        [_Enum__name]: "back",
        [_Enum_index]: 1
      });
    },
    get C1622() {
      return C[1622] = dart.const({
        __proto__: camera_description.CameraLensDirection.prototype,
        [_Enum__name]: "external",
        [_Enum_index]: 2
      });
    },
    get C1619() {
      return C[1619] = dart.constList([C[1620] || CT.C1620, C[1621] || CT.C1621, C[1622] || CT.C1622], camera_description.CameraLensDirection);
    },
    get C1624() {
      return C[1624] = dart.const({
        __proto__: exposure_mode.ExposureMode.prototype,
        [_Enum__name]: "auto",
        [_Enum_index]: 0
      });
    },
    get C1625() {
      return C[1625] = dart.const({
        __proto__: exposure_mode.ExposureMode.prototype,
        [_Enum__name]: "locked",
        [_Enum_index]: 1
      });
    },
    get C1623() {
      return C[1623] = dart.constList([C[1624] || CT.C1624, C[1625] || CT.C1625], exposure_mode.ExposureMode);
    },
    get C1626() {
      return C[1626] = dart.constList([C[1613] || CT.C1613, C[1614] || CT.C1614, C[1615] || CT.C1615, C[1616] || CT.C1616], flash_mode.FlashMode);
    },
    get C1628() {
      return C[1628] = dart.const({
        __proto__: focus_mode.FocusMode.prototype,
        [_Enum__name]: "auto",
        [_Enum_index]: 0
      });
    },
    get C1629() {
      return C[1629] = dart.const({
        __proto__: focus_mode.FocusMode.prototype,
        [_Enum__name]: "locked",
        [_Enum_index]: 1
      });
    },
    get C1627() {
      return C[1627] = dart.constList([C[1628] || CT.C1628, C[1629] || CT.C1629], focus_mode.FocusMode);
    },
    get C1631() {
      return C[1631] = dart.const({
        __proto__: image_format_group.ImageFormatGroup.prototype,
        [_Enum__name]: "yuv420",
        [_Enum_index]: 1
      });
    },
    get C1632() {
      return C[1632] = dart.const({
        __proto__: image_format_group.ImageFormatGroup.prototype,
        [_Enum__name]: "bgra8888",
        [_Enum_index]: 2
      });
    },
    get C1633() {
      return C[1633] = dart.const({
        __proto__: image_format_group.ImageFormatGroup.prototype,
        [_Enum__name]: "jpeg",
        [_Enum_index]: 3
      });
    },
    get C1634() {
      return C[1634] = dart.const({
        __proto__: image_format_group.ImageFormatGroup.prototype,
        [_Enum__name]: "nv21",
        [_Enum_index]: 4
      });
    },
    get C1630() {
      return C[1630] = dart.constList([C[1557] || CT.C1557, C[1631] || CT.C1631, C[1632] || CT.C1632, C[1633] || CT.C1633, C[1634] || CT.C1634], image_format_group.ImageFormatGroup);
    },
    get C1635() {
      return C[1635] = dart.fn(from_handlers['TransformByHandlers|_defaultHandleData'], T$.SAndEventSinkOfTTovoid());
    },
    get C1636() {
      return C[1636] = dart.fn(from_handlers['TransformByHandlers|_defaultHandleError'], T$.ObjectAndStackTraceAndEventSinkOfTTovoid());
    },
    get C1637() {
      return C[1637] = dart.fn(from_handlers['TransformByHandlers|_defaultHandleDone'], T$.EventSinkOfTTovoid());
    },
    get C1638() {
      return C[1638] = dart.const({
        __proto__: convert.Utf8Codec.prototype,
        [Utf8Codec__allowMalformed]: false
      });
    }
  }, false);
  var C = Array(1639).fill(void 0);
  var I = [
    "file:///zapp/project/lib/testpage.dart",
    "package:flutter_app/providers/video_provider.dart",
    "file:///zapp/project/lib/pages/feed.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/inherited_provider.dart",
    "package:nested/nested.dart",
    "package:provider/src/provider.dart",
    "package:provider/src/async_provider.dart",
    "package:provider/src/listenable_provider.dart",
    "package:provider/src/change_notifier_provider.dart",
    "package:provider/src/consumer.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/nested-1.0.0/lib/nested.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/provider.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/deferred_inherited_provider.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/devtool.dart",
    "package:provider/src/proxy_provider.dart",
    "package:provider/src/reassemble_handler.dart",
    "package:provider/src/selector.dart",
    "package:provider/src/value_listenable_provider.dart",
    "package:flutter_app/providers/video.dart",
    "package:flutter_boxicons/flutter_boxicons.dart",
    "package:flutter_app/pages/ViewProf.dart",
    "package:flutter_app/pages/search.dart",
    "package:flutter_app/widgets/botnav.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/plugin_platform_interface-2.1.6/lib/plugin_platform_interface.dart",
    "package:plugin_platform_interface/plugin_platform_interface.dart",
    "package:camera_platform_interface/src/platform_interface/camera_platform.dart",
    "package:camera_web/src/camera_web.dart",
    "package:flutter_app/pages/transaction.dart",
    "package:flutter_app/pages/under_cons.dart",
    "package:flutter_app/pages/courses.dart",
    "package:flutter_app/pages/feed.dart",
    "package:camera_web/src/camera.dart",
    "package:camera_web/src/camera_service.dart",
    "package:flutter_app/widgets/action_button.dart",
    "package:camera_platform_interface/src/events/camera_event.dart",
    "package:camera_platform_interface/src/events/device_event.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/camera_platform_interface-2.6.0/lib/src/types/media_settings.dart",
    "package:camera_platform_interface/src/types/media_settings.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/stream_transform-2.1.0/lib/src/combine_latest.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/stream_transform-2.1.0/lib/src/concatenate.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/stream_transform-2.1.0/lib/src/switch.dart",
    "package:camera_web/src/shims/dart_js_util.dart",
    "package:camera_web/src/types/camera_error_code.dart",
    "package:camera_web/src/types/camera_metadata.dart",
    "package:camera_web/src/types/camera_options.dart",
    "package:camera_web/src/types/camera_web_exception.dart",
    "package:camera_web/src/types/media_device_kind.dart",
    "package:camera_web/src/types/orientation_type.dart",
    "package:camera_web/src/types/zoom_level_capability.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/camera_platform_interface-2.6.0/lib/src/method_channel/method_channel_camera.dart",
    "package:camera_platform_interface/src/method_channel/method_channel_camera.dart",
    "package:camera_platform_interface/src/types/resolution_preset.dart",
    "package:camera_platform_interface/src/types/camera_description.dart",
    "package:camera_platform_interface/src/types/camera_exception.dart",
    "package:camera_platform_interface/src/types/camera_image_data.dart",
    "package:camera_platform_interface/src/types/exposure_mode.dart",
    "package:camera_platform_interface/src/types/flash_mode.dart",
    "package:camera_platform_interface/src/types/focus_mode.dart",
    "package:camera_platform_interface/src/types/image_format_group.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/camera_platform_interface-2.6.0/lib/src/types/video_capture_options.dart",
    "package:camera_platform_interface/src/types/video_capture_options.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/stream_transform-2.1.0/lib/src/aggregate_sample.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/stream_transform-2.1.0/lib/src/from_handlers.dart",
    "file:///zapp/pub/.pub_cache/hosted/pub.dev/cross_file-0.3.3+6/lib/src/types/html.dart",
    "package:cross_file/src/types/base.dart",
    "package:cross_file/src/types/html.dart"
  ];
  $46zapp_entry.runAppGuarded = function runAppGuarded() {
    async.runZonedGuarded(core.Null, dart.fn(() => {
      if (T$.ListOfStringTodynamic().is(C[0] || CT.C0)) {
        T$.ListOfStringTodynamic().as(C[0] || CT.C0)(T$.JSArrayOfString().of([]));
      } else {
        (C[0] || CT.C0)();
      }
      if (js.context.hasProperty("__notifyFlutterRendered")) {
        async.Future.delayed(new core.Duration.new({milliseconds: 250})).then(core.Null, dart.fn(_ => {
          js.context.callMethod("__notifyFlutterRendered", [false]);
        }, T$.dynamicToNull()));
      }
    }, T$.VoidToNull()), dart.fn((e, stackTrace) => {
      if (js.context.hasProperty("zappHandlerUserError")) {
        js.context.callMethod("zappHandlerUserError", [e[$toString](), stackTrace.toString()]);
      }
    }, T$.ObjectAndStackTraceTovoid()), {zoneSpecification: new async._ZoneSpecification.new({print: dart.fn((self, parent, zone, line) => {
          if (js.context.hasProperty("zappHandlerUserPrint")) {
            js.context.callMethod("zappHandlerUserPrint", [line]);
          }
        }, T$.ZoneAndZoneDelegateAndZone__Tovoid())})});
  };
  $46zapp_entry.main = function main() {
    return async.async(dart.void, function* main() {
      yield ui.webOnlyWarmupEngine({runApp: dart.fn(() => {
          $46zapp_entry.runAppGuarded();
        }, T$.VoidToNull()), registerPlugins: dart.fn(() => {
          web_plugin_registrant.registerPlugins();
        }, T$.VoidToNull())});
    });
  };
  testpage.MyApp = class MyApp extends framework.StatelessWidget {
    build(context) {
      return new app.MaterialApp.new({title: "Flutter App", theme: theme_data.ThemeData.new({primarySwatch: colors.Colors.blue}), home: new feed.FeedPage.new(), debugShowCheckedModeBanner: false});
    }
    static ['_#new#tearOff']() {
      return new testpage.MyApp.new();
    }
  };
  (testpage.MyApp.new = function() {
    testpage.MyApp.__proto__.new.call(this);
    ;
  }).prototype = testpage.MyApp.prototype;
  dart.addTypeTests(testpage.MyApp);
  dart.addTypeCaches(testpage.MyApp);
  dart.setMethodSignature(testpage.MyApp, () => ({
    __proto__: dart.getMethods(testpage.MyApp.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(testpage.MyApp, I[0]);
  testpage.main = function main$() {
    binding.runApp(new provider$.MultiProvider.new({providers: T$.JSArrayOfSingleChildWidget().of([new (T$.ChangeNotifierProviderOfVideoProvider()).new({create: dart.fn(context => new video_provider.VideoProvider.new(), T$.BuildContextToVideoProvider())})]), child: new testpage.MyApp.new()}));
  };
  web_plugin_registrant.registerPlugins = function registerPlugins(pluginRegistrar = null) {
    let t0;
    let registrar = (t0 = pluginRegistrar, t0 == null ? plugin_registry.webPluginRegistrar : t0);
    camera_web$.CameraPlugin.registerWith(registrar);
    registrar.registerMessageHandler();
  };
  var _videoData = dart.privateName(video_provider, "_videoData");
  const Object_ChangeNotifier$36 = class Object_ChangeNotifier extends core.Object {};
  (Object_ChangeNotifier$36.new = function() {
    change_notifier.ChangeNotifier.new.call(this);
  }).prototype = Object_ChangeNotifier$36.prototype;
  dart.applyMixin(Object_ChangeNotifier$36, change_notifier.ChangeNotifier);
  video_provider.VideoProvider = class VideoProvider extends Object_ChangeNotifier$36 {
    get videoData() {
      return this[_videoData];
    }
    loadJsonData() {
      return async.async(dart.void, (function* loadJsonData() {
        let response = (yield asset_bundle.rootBundle.loadString("assets/data.json"));
        let jsonData = T$.MapOfString$dynamic().as(convert.json.decode(response));
        this[_videoData] = video.ApiResponse.fromJson(jsonData);
        this.notifyListeners();
      }).bind(this));
    }
    static ['_#new#tearOff']() {
      return new video_provider.VideoProvider.new();
    }
  };
  (video_provider.VideoProvider.new = function() {
    this[_videoData] = null;
    video_provider.VideoProvider.__proto__.new.call(this);
    ;
  }).prototype = video_provider.VideoProvider.prototype;
  dart.addTypeTests(video_provider.VideoProvider);
  dart.addTypeCaches(video_provider.VideoProvider);
  dart.setMethodSignature(video_provider.VideoProvider, () => ({
    __proto__: dart.getMethods(video_provider.VideoProvider.__proto__),
    loadJsonData: dart.fnType(async.Future$(dart.void), [])
  }));
  dart.setGetterSignature(video_provider.VideoProvider, () => ({
    __proto__: dart.getGetters(video_provider.VideoProvider.__proto__),
    videoData: dart.nullable(video.ApiResponse)
  }));
  dart.setLibraryUri(video_provider.VideoProvider, I[1]);
  dart.setFieldSignature(video_provider.VideoProvider, () => ({
    __proto__: dart.getFields(video_provider.VideoProvider.__proto__),
    [_videoData]: dart.fieldType(dart.nullable(video.ApiResponse))
  }));
  feed.FeedPage = class FeedPage extends framework.StatefulWidget {
    createState() {
      return new feed._FeedWidgetState.new();
    }
    static ['_#new#tearOff']() {
      return new feed.FeedPage.new();
    }
  };
  (feed.FeedPage.new = function() {
    feed.FeedPage.__proto__.new.call(this);
    ;
  }).prototype = feed.FeedPage.prototype;
  dart.addTypeTests(feed.FeedPage);
  dart.addTypeCaches(feed.FeedPage);
  dart.setMethodSignature(feed.FeedPage, () => ({
    __proto__: dart.getMethods(feed.FeedPage.__proto__),
    createState: dart.fnType(feed._FeedWidgetState, [])
  }));
  dart.setLibraryUri(feed.FeedPage, I[2]);
  var _searchController = dart.privateName(feed, "_searchController");
  var _buildUserInfo = dart.privateName(feed, "_buildUserInfo");
  var _buildStats = dart.privateName(feed, "_buildStats");
  var _buildSearchBar = dart.privateName(feed, "_buildSearchBar");
  var _buildUserProfile = dart.privateName(feed, "_buildUserProfile");
  var _buildOriginalSoundText = dart.privateName(feed, "_buildOriginalSoundText");
  var _buildUsername = dart.privateName(feed, "_buildUsername");
  var _buildFollowButton = dart.privateName(feed, "_buildFollowButton");
  var _buildStatIcon = dart.privateName(feed, "_buildStatIcon");
  var _navigateToSearchResults = dart.privateName(feed, "_navigateToSearchResults");
  feed._FeedWidgetState = class _FeedWidgetState extends framework.State$(feed.FeedPage) {
    initState() {
      super.initState();
      T$.FutureOfvoid().microtask(dart.fn(() => provider$.Provider.of(video_provider.VideoProvider, this.context, {listen: false}).loadJsonData(), T$.VoidToFutureOfvoid()));
    }
    build(context) {
      let videoData = provider$.Provider.of(video_provider.VideoProvider, context).videoData;
      return new scaffold.Scaffold.new({body: videoData == null ? new basic.Center.new({child: new progress_indicator.CircularProgressIndicator.new()}) : new container.Container.new({decoration: new box_decoration.BoxDecoration.new({color: new ui.Color.fromRGBO(51, 51, 51, 1)}), child: new basic.Stack.new({children: T$.JSArrayOfWidget().of([new basic.Positioned.new({top: media_query.MediaQuery.of(context).size.height * 0.8, left: media_query.MediaQuery.of(context).size.width * 0.05, child: this[_buildUserInfo](videoData.data.uploader)}), new basic.Positioned.new({bottom: media_query.MediaQuery.of(context).size.height * 0.1, right: media_query.MediaQuery.of(context).size.width * 0.05, child: this[_buildStats](videoData.data)}), new basic.Positioned.new({bottom: 0, left: 0, child: new botnav.BottomNav.new()}), new basic.Positioned.new({top: 3, left: 0, right: 0, child: this[_buildSearchBar]()})])})})});
    }
    [_buildUserInfo](username) {
      return new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([this[_buildUserProfile](username), new basic.SizedBox.new({height: 10}), this[_buildOriginalSoundText]()])});
    }
    [_buildUserProfile](username) {
      return new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([this[_buildUsername](username), new basic.SizedBox.new({width: 15}), this[_buildFollowButton]()])});
    }
    [_buildUsername](username) {
      return new gesture_detector.GestureDetector.new({onTap: dart.fn(() => {
          navigator.Navigator.push(dart.dynamic, this.context, new page$.MaterialPageRoute.new({builder: dart.fn(context => new ViewProf.ViewProfPage.new(), T$.BuildContextToViewProfPage())}));
        }, T$.VoidTovoid()), child: new basic.Row.new({children: T$.JSArrayOfWidget().of([new container.Container.new({width: 22, height: 22, decoration: new box_decoration.BoxDecoration.new({color: new ui.Color.fromRGBO(217, 217, 217, 1), borderRadius: new border_radius.BorderRadius.circular(22)})}), new basic.SizedBox.new({width: 5}), new text$.Text.new(username, {style: new text_style.TextStyle.new({color: colors.Colors.white, fontFamily: "Inter", fontSize: 10, height: 1.6})})])})});
    }
    [_buildFollowButton]() {
      return new container.Container.new({padding: new edge_insets.EdgeInsets.symmetric({horizontal: 10}), decoration: new box_decoration.BoxDecoration.new({borderRadius: new border_radius.BorderRadius.circular(12), border: box_border.Border.all({color: colors.Colors.white, width: 0.5})}), child: new basic.Center.new({child: new text$.Text.new("Follow", {textAlign: ui.TextAlign.center, style: new text_style.TextStyle.new({color: colors.Colors.white, fontFamily: "Inter", fontSize: 8, height: 2})})})});
    }
    [_buildOriginalSoundText]() {
      return new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.start, children: T$.JSArrayOfWidget().of([new icon$.Icon.new(flutter_boxicons.Boxicons.bx_music, {color: colors.Colors.white, size: 16}), new basic.SizedBox.new({width: 10}), new text$.Text.new("Original Sound", {textAlign: ui.TextAlign.left, style: new text_style.TextStyle.new({color: colors.Colors.white, fontFamily: "Inter", fontSize: 10})})])});
    }
    formatCount(count) {
      if (count >= 1000) {
        return (count / 1000)[$toStringAsFixed](1) + "K";
      }
      return count[$toString]();
    }
    [_buildStats](videoData) {
      return new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([this[_buildStatIcon](flutter_boxicons.Boxicons.bx_heart, this.formatCount(videoData.likeCount)), new basic.SizedBox.new({height: 20}), this[_buildStatIcon](flutter_boxicons.Boxicons.bx_message_rounded_dots, this.formatCount(videoData.commentCount)), new basic.SizedBox.new({height: 20}), this[_buildStatIcon](flutter_boxicons.Boxicons.bx_bookmark, this.formatCount(videoData.bookmarkCount)), new basic.SizedBox.new({height: 20}), this[_buildStatIcon](flutter_boxicons.Boxicons.bx_share, this.formatCount(videoData.shareCount))])});
    }
    [_buildStatIcon](icon, text) {
      return new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([new icon$.Icon.new(icon, {color: colors.Colors.white}), new basic.SizedBox.new({width: 7}), new text$.Text.new(text, {style: new text_style.TextStyle.new({color: colors.Colors.white, fontFamily: "Inter", fontSize: 11})})])});
    }
    [_buildSearchBar]() {
      return new container.Container.new({padding: new edge_insets.EdgeInsets.symmetric({horizontal: 16}), child: new basic.Row.new({children: T$.JSArrayOfWidget().of([new container.Container.new({height: 50, child: new single_child_scroll_view.SingleChildScrollView.new({scrollDirection: basic_types.Axis.horizontal, child: new basic.Row.new({children: T$.ListOfWidget().generate(3, dart.fn(index => new container.Container.new({margin: new edge_insets.EdgeInsets.symmetric({horizontal: 4}), padding: new edge_insets.EdgeInsets.symmetric({horizontal: 10, vertical: 10}), decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.grey._get(200), borderRadius: new border_radius.BorderRadius.circular(20)}), child: new text$.Text.new("Item " + dart.str(index + 1), {style: new text_style.TextStyle.new({color: colors.Colors.black})})}), T$.intToContainer()))})})}), new basic.SizedBox.new({width: 15}), new basic.Expanded.new({child: new text_field.TextField.new({controller: this[_searchController], onSubmitted: dart.fn(value => {
                  if (value[$isNotEmpty]) {
                    this[_navigateToSearchResults](value);
                  }
                }, T$.StringTovoid()), decoration: new input_decorator.InputDecoration.new({filled: true, fillColor: colors.Colors.white, hintText: this.hintText, border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(30), borderSide: borders.BorderSide.none}), prefixIcon: new icon$.Icon.new(icons.Icons.search, {color: colors.Colors.grey}), contentPadding: new edge_insets.EdgeInsets.symmetric({vertical: 6})})})})])})});
    }
    [_navigateToSearchResults](query) {
      navigator.Navigator.push(dart.dynamic, this.context, new page$.MaterialPageRoute.new({builder: dart.fn(context => new search.SearchPage.new({query: query}), T$.BuildContextToSearchPage())}));
    }
    static ['_#new#tearOff']() {
      return new feed._FeedWidgetState.new();
    }
  };
  (feed._FeedWidgetState.new = function() {
    this[_searchController] = new editable_text.TextEditingController.new();
    this.hintText = "Search...";
    feed._FeedWidgetState.__proto__.new.call(this);
    ;
  }).prototype = feed._FeedWidgetState.prototype;
  dart.addTypeTests(feed._FeedWidgetState);
  dart.addTypeCaches(feed._FeedWidgetState);
  dart.setMethodSignature(feed._FeedWidgetState, () => ({
    __proto__: dart.getMethods(feed._FeedWidgetState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_buildUserInfo]: dart.fnType(framework.Widget, [core.String]),
    [_buildUserProfile]: dart.fnType(framework.Widget, [core.String]),
    [_buildUsername]: dart.fnType(framework.Widget, [core.String]),
    [_buildFollowButton]: dart.fnType(framework.Widget, []),
    [_buildOriginalSoundText]: dart.fnType(framework.Widget, []),
    formatCount: dart.fnType(core.String, [core.int]),
    [_buildStats]: dart.fnType(framework.Widget, [video.VideoData]),
    [_buildStatIcon]: dart.fnType(framework.Widget, [icon_data.IconData, core.String]),
    [_buildSearchBar]: dart.fnType(framework.Widget, []),
    [_navigateToSearchResults]: dart.fnType(dart.void, [core.String])
  }));
  dart.setLibraryUri(feed._FeedWidgetState, I[2]);
  dart.setFieldSignature(feed._FeedWidgetState, () => ({
    __proto__: dart.getFields(feed._FeedWidgetState.__proto__),
    [_searchController]: dart.finalFieldType(editable_text.TextEditingController),
    hintText: dart.finalFieldType(core.String)
  }));
  var builder$ = dart.privateName(provider$, "InheritedProvider.builder");
  var _lazy = dart.privateName(provider$, "_lazy");
  var _delegate = dart.privateName(provider$, "_delegate");
  var _child = dart.privateName(nested, "SingleChildStatelessWidget._child");
  var _child$ = dart.privateName(nested, "_child");
  nested.SingleChildStatelessWidget = class SingleChildStatelessWidget extends framework.StatelessWidget {
    get [_child$]() {
      return this[_child];
    }
    set [_child$](value) {
      super[_child$] = value;
    }
    build(context) {
      return this.buildWithChild(context, this[_child$]);
    }
    createElement() {
      return new nested.SingleChildStatelessElement.new(this);
    }
  };
  (nested.SingleChildStatelessWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[_child] = child;
    nested.SingleChildStatelessWidget.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.SingleChildStatelessWidget.prototype;
  dart.addTypeTests(nested.SingleChildStatelessWidget);
  dart.addTypeCaches(nested.SingleChildStatelessWidget);
  nested.SingleChildStatelessWidget[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.SingleChildStatelessWidget, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatelessWidget.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    createElement: dart.fnType(nested.SingleChildStatelessElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatelessWidget, I[4]);
  dart.setFieldSignature(nested.SingleChildStatelessWidget, () => ({
    __proto__: dart.getFields(nested.SingleChildStatelessWidget.__proto__),
    [_child$]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const _is_InheritedProvider_default = Symbol('_is_InheritedProvider_default');
  provider$.InheritedProvider$ = dart.generic(T => {
    var __t$_CreateInheritedProviderOfT = () => (__t$_CreateInheritedProviderOfT = dart.constFn(provider$._CreateInheritedProvider$(T)))();
    var __t$_ValueInheritedProviderOfT = () => (__t$_ValueInheritedProviderOfT = dart.constFn(provider$._ValueInheritedProvider$(T)))();
    var __t$_InheritedProviderElementOfT = () => (__t$_InheritedProviderElementOfT = dart.constFn(provider$._InheritedProviderElement$(T)))();
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$_InheritedProviderScopeOfTN = () => (__t$_InheritedProviderScopeOfTN = dart.constFn(provider$._InheritedProviderScope$(__t$TN())))();
    class InheritedProvider extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose, builder: builder, lazy: lazy, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, startListening: startListening, lazy: lazy, builder: builder, child: child});
      }
      static ['_#_constructor#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let delegate = opts && 'delegate' in opts ? opts.delegate : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.InheritedProvider$(T))._constructor({key: key, delegate: delegate, lazy: lazy, builder: builder, child: child});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this[_delegate].debugFillProperties(properties);
      }
      createElement() {
        return new (__t$_InheritedProviderElementOfT()).new(this);
      }
      buildWithChild(context, child) {
        if (!(this.builder != null || child != null)) dart.assertFailed(dart.str(this[$runtimeType]) + " used outside of MultiProvider must specify a child", I[3], 158, 7, "builder != null || child != null");
        return new (__t$_InheritedProviderScopeOfTN()).new({owner: this, debugType: dart.str(this[$runtimeType]), child: this.builder != null ? new basic.Builder.new({builder: dart.fn(context => dart.nullCheck(this.builder)(context, child), T$.BuildContextToWidget())}) : dart.nullCheck(child)});
      }
    }
    (InheritedProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$] = builder;
      this[_lazy] = lazy;
      this[_delegate] = new (__t$_CreateInheritedProviderOfT()).new({create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose});
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    (InheritedProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$] = builder;
      this[_lazy] = lazy;
      this[_delegate] = new (__t$_ValueInheritedProviderOfT()).new({value: value, updateShouldNotify: updateShouldNotify, startListening: startListening});
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    (InheritedProvider._constructor = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let delegate = opts && 'delegate' in opts ? opts.delegate : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$] = builder;
      this[_lazy] = lazy;
      this[_delegate] = delegate;
      InheritedProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = InheritedProvider.prototype;
    dart.addTypeTests(InheritedProvider);
    InheritedProvider.prototype[_is_InheritedProvider_default] = true;
    dart.addTypeCaches(InheritedProvider);
    dart.setMethodSignature(InheritedProvider, () => ({
      __proto__: dart.getMethods(InheritedProvider.__proto__),
      createElement: dart.fnType(provider$._InheritedProviderElement$(T), []),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(InheritedProvider, I[5]);
    dart.setFieldSignature(InheritedProvider, () => ({
      __proto__: dart.getFields(InheritedProvider.__proto__),
      [_delegate]: dart.finalFieldType(provider$._Delegate$(T)),
      [_lazy]: dart.finalFieldType(dart.nullable(core.bool)),
      builder: dart.finalFieldType(dart.nullable(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])))
    }));
    return InheritedProvider;
  });
  provider$.InheritedProvider = provider$.InheritedProvider$();
  dart.addTypeTests(provider$.InheritedProvider, _is_InheritedProvider_default);
  const _is_DeferredInheritedProvider_default = Symbol('_is_DeferredInheritedProvider_default');
  provider$.DeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_CreateDeferredInheritedProviderOfT$R = () => (__t$_CreateDeferredInheritedProviderOfT$R = dart.constFn(provider$._CreateDeferredInheritedProvider$(T, R)))();
    var __t$_ValueDeferredInheritedProviderOfT$R = () => (__t$_ValueDeferredInheritedProviderOfT$R = dart.constFn(provider$._ValueDeferredInheritedProvider$(T, R)))();
    class DeferredInheritedProvider extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.DeferredInheritedProvider$(T, R)).new({key: key, create: create, dispose: dispose, startListening: startListening, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.DeferredInheritedProvider$(T, R)).value({key: key, value: value, startListening: startListening, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (DeferredInheritedProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      DeferredInheritedProvider.__proto__._constructor.call(this, {key: key, child: child, lazy: lazy, builder: builder, delegate: new (__t$_CreateDeferredInheritedProviderOfT$R()).new({create: create, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: startListening})});
      ;
    }).prototype = DeferredInheritedProvider.prototype;
    (DeferredInheritedProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      DeferredInheritedProvider.__proto__._constructor.call(this, {key: key, lazy: lazy, builder: builder, delegate: new (__t$_ValueDeferredInheritedProviderOfT$R()).new(value, updateShouldNotify, startListening), child: child});
      ;
    }).prototype = DeferredInheritedProvider.prototype;
    dart.addTypeTests(DeferredInheritedProvider);
    DeferredInheritedProvider.prototype[_is_DeferredInheritedProvider_default] = true;
    dart.addTypeCaches(DeferredInheritedProvider);
    dart.setLibraryUri(DeferredInheritedProvider, I[5]);
    return DeferredInheritedProvider;
  });
  provider$.DeferredInheritedProvider = provider$.DeferredInheritedProvider$();
  dart.addTypeTests(provider$.DeferredInheritedProvider, _is_DeferredInheritedProvider_default);
  const _is_StreamProvider_default = Symbol('_is_StreamProvider_default');
  async_provider.StreamProvider$ = dart.generic(T => {
    class StreamProvider extends provider$.DeferredInheritedProvider$(dart.nullable(async.Stream$(T)), T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.StreamProvider$(T)).new({key: key, create: create, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.StreamProvider$(T)).value({key: key, value: value, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (StreamProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      StreamProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, updateShouldNotify: updateShouldNotify, startListening: async_provider._streamStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = StreamProvider.prototype;
    (StreamProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      StreamProvider.__proto__.value.call(this, {key: key, lazy: lazy, builder: builder, value: value, updateShouldNotify: updateShouldNotify, startListening: async_provider._streamStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = StreamProvider.prototype;
    dart.addTypeTests(StreamProvider);
    StreamProvider.prototype[_is_StreamProvider_default] = true;
    dart.addTypeCaches(StreamProvider);
    dart.setLibraryUri(StreamProvider, I[6]);
    return StreamProvider;
  });
  async_provider.StreamProvider = async_provider.StreamProvider$();
  dart.addTypeTests(async_provider.StreamProvider, _is_StreamProvider_default);
  const _is_FutureProvider_default = Symbol('_is_FutureProvider_default');
  async_provider.FutureProvider$ = dart.generic(T => {
    class FutureProvider extends provider$.DeferredInheritedProvider$(dart.nullable(async.Future$(T)), T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.FutureProvider$(T)).new({key: key, create: create, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let initialData = opts && 'initialData' in opts ? opts.initialData : null;
        let catchError = opts && 'catchError' in opts ? opts.catchError : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (async_provider.FutureProvider$(T)).value({key: key, value: value, initialData: initialData, catchError: catchError, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
    }
    (FutureProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      FutureProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, updateShouldNotify: updateShouldNotify, startListening: async_provider._futureStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = FutureProvider.prototype;
    (FutureProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let initialData = opts && 'initialData' in opts ? opts.initialData : null;
      let catchError = opts && 'catchError' in opts ? opts.catchError : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      FutureProvider.__proto__.value.call(this, {key: key, builder: builder, lazy: false, value: value, updateShouldNotify: updateShouldNotify, startListening: async_provider._futureStartListening(T, {catchError: catchError, initialData: initialData}), child: child});
      ;
    }).prototype = FutureProvider.prototype;
    dart.addTypeTests(FutureProvider);
    FutureProvider.prototype[_is_FutureProvider_default] = true;
    dart.addTypeCaches(FutureProvider);
    dart.setLibraryUri(FutureProvider, I[6]);
    return FutureProvider;
  });
  async_provider.FutureProvider = async_provider.FutureProvider$();
  dart.addTypeTests(async_provider.FutureProvider, _is_FutureProvider_default);
  async_provider._streamStartListening = function _streamStartListening(T, opts) {
    let initialData = opts && 'initialData' in opts ? opts.initialData : null;
    let catchError = opts && 'catchError' in opts ? opts.catchError : null;
    return dart.fn((e, setState, controller, __) => {
      if (!e.hasValue) {
        setState(initialData);
      }
      if (controller == null) {
        return dart.fn(() => {
        }, T$.VoidTovoid());
      }
      let sub = controller.listen(setState, {onError: dart.fn(error => {
          if (catchError != null) {
            setState(catchError(e, error));
          } else {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({library: "provider", exception: assertions.FlutterError.new("An exception was throw by " + dart.str(dart.runtimeType(controller)) + " listened by\nStreamProvider<" + dart.str(dart.wrapType(T)) + ">, but no `catchError` was provided.\n\nException:\n" + dart.str(error) + "\n")}));
          }
        }, T$.ObjectNToNull())});
      return dart.bind(sub, 'cancel');
    }, dart.fnType(T$.VoidTovoid(), [provider$.InheritedContext$(dart.nullable(T)), dart.fnType(dart.void, [T]), dart.nullable(async.Stream$(T)), dart.nullable(T)]));
  };
  async_provider._futureStartListening = function _futureStartListening(T, opts) {
    let initialData = opts && 'initialData' in opts ? opts.initialData : null;
    let catchError = opts && 'catchError' in opts ? opts.catchError : null;
    return dart.fn((e, setState, controller, __) => {
      let t0;
      if (!e.hasValue) {
        setState(initialData);
      }
      let canceled = false;
      t0 = controller;
      t0 == null ? null : t0.then(core.Null, dart.fn(value => {
        if (canceled) {
          return;
        }
        setState(value);
      }, dart.fnType(core.Null, [T])), {onError: dart.fn(error => {
          if (canceled) {
            return;
          }
          if (catchError != null) {
            setState(catchError(e, error));
          } else {
            assertions.FlutterError.reportError(new assertions.FlutterErrorDetails.new({library: "provider", exception: assertions.FlutterError.new("An exception was throw by " + dart.str(dart.runtimeType(controller)) + " listened by\nFutureProvider<" + dart.str(dart.wrapType(T)) + ">, but no `catchError` was provided.\n\nException:\n" + dart.str(error) + "\n")}));
          }
        }, T$.ObjectNToNull())});
      return dart.fn(() => canceled = true, T$.VoidTovoid());
    }, dart.fnType(T$.VoidTovoid(), [provider$.InheritedContext$(dart.nullable(T)), dart.fnType(dart.void, [T]), dart.nullable(async.Future$(T)), dart.nullable(T)]));
  };
  const _is_ListenableProvider_default = Symbol('_is_ListenableProvider_default');
  listenable_provider.ListenableProvider$ = dart.generic(T => {
    class ListenableProvider extends provider$.InheritedProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProvider$(T)).new({key: key, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
      static _startListening(e, value) {
        let t0;
        t0 = value;
        t0 == null ? null : t0.addListener(dart.bind(e, 'markNeedsNotifyDependents'));
        return dart.fn(() => {
          let t0;
          t0 = value;
          return t0 == null ? null : t0.removeListener(dart.bind(e, 'markNeedsNotifyDependents'));
        }, T$.VoidTovoid());
      }
    }
    (ListenableProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProvider.__proto__.new.call(this, {key: key, startListening: C[2] || CT.C2, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ListenableProvider.prototype;
    (ListenableProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProvider.__proto__.value.call(this, {key: key, builder: builder, value: value, updateShouldNotify: updateShouldNotify, startListening: C[2] || CT.C2, child: child});
      ;
    }).prototype = ListenableProvider.prototype;
    dart.addTypeTests(ListenableProvider);
    ListenableProvider.prototype[_is_ListenableProvider_default] = true;
    dart.addTypeCaches(ListenableProvider);
    dart.setStaticMethodSignature(ListenableProvider, () => ['_startListening']);
    dart.setLibraryUri(ListenableProvider, I[7]);
    return ListenableProvider;
  });
  listenable_provider.ListenableProvider = listenable_provider.ListenableProvider$();
  dart.addTypeTests(listenable_provider.ListenableProvider, _is_ListenableProvider_default);
  const _is_ChangeNotifierProvider_default = Symbol('_is_ChangeNotifierProvider_default');
  change_notifier_provider.ChangeNotifierProvider$ = dart.generic(T => {
    class ChangeNotifierProvider extends listenable_provider.ListenableProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProvider$(T)).new({key: key, create: create, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProvider$(T)).value({key: key, value: value, builder: builder, child: child});
      }
      static _dispose(context, notifier) {
        let t0;
        t0 = notifier;
        t0 == null ? null : t0.dispose();
      }
    }
    (ChangeNotifierProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProvider.__proto__.new.call(this, {key: key, create: create, dispose: C[1] || CT.C1, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProvider.prototype;
    (ChangeNotifierProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProvider.__proto__.value.call(this, {key: key, builder: builder, value: value, child: child});
      ;
    }).prototype = ChangeNotifierProvider.prototype;
    dart.addTypeTests(ChangeNotifierProvider);
    ChangeNotifierProvider.prototype[_is_ChangeNotifierProvider_default] = true;
    dart.addTypeCaches(ChangeNotifierProvider);
    dart.setStaticMethodSignature(ChangeNotifierProvider, () => ['_dispose']);
    dart.setLibraryUri(ChangeNotifierProvider, I[8]);
    return ChangeNotifierProvider;
  });
  change_notifier_provider.ChangeNotifierProvider = change_notifier_provider.ChangeNotifierProvider$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProvider, _is_ChangeNotifierProvider_default);
  const _is_ListenableProxyProvider0_default = Symbol('_is_ListenableProxyProvider0_default');
  listenable_provider.ListenableProxyProvider0$ = dart.generic(R => {
    class ListenableProxyProvider0 extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider0$(R)).new({key: key, create: create, update: update, dispose: dispose, updateShouldNotify: updateShouldNotify, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider0.__proto__.new.call(this, {key: key, create: create, update: update, lazy: lazy, builder: builder, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: C[2] || CT.C2, child: child});
      ;
    }).prototype = ListenableProxyProvider0.prototype;
    dart.addTypeTests(ListenableProxyProvider0);
    ListenableProxyProvider0.prototype[_is_ListenableProxyProvider0_default] = true;
    dart.addTypeCaches(ListenableProxyProvider0);
    dart.setLibraryUri(ListenableProxyProvider0, I[7]);
    return ListenableProxyProvider0;
  });
  listenable_provider.ListenableProxyProvider0 = listenable_provider.ListenableProxyProvider0$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider0, _is_ListenableProxyProvider0_default);
  const _is_ListenableProxyProvider_default = Symbol('_is_ListenableProxyProvider_default');
  listenable_provider.ListenableProxyProvider$ = dart.generic((T, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider$(T, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider.prototype;
    dart.addTypeTests(ListenableProxyProvider);
    ListenableProxyProvider.prototype[_is_ListenableProxyProvider_default] = true;
    dart.addTypeCaches(ListenableProxyProvider);
    dart.setLibraryUri(ListenableProxyProvider, I[7]);
    return ListenableProxyProvider;
  });
  listenable_provider.ListenableProxyProvider = listenable_provider.ListenableProxyProvider$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider, _is_ListenableProxyProvider_default);
  const _is_ChangeNotifierProxyProvider_default = Symbol('_is_ChangeNotifierProxyProvider_default');
  change_notifier_provider.ChangeNotifierProxyProvider$ = dart.generic((T, R) => {
    class ChangeNotifierProxyProvider extends listenable_provider.ListenableProxyProvider$(T, R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider$(T, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[1] || CT.C1, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider);
    ChangeNotifierProxyProvider.prototype[_is_ChangeNotifierProxyProvider_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider);
    dart.setLibraryUri(ChangeNotifierProxyProvider, I[8]);
    return ChangeNotifierProxyProvider;
  });
  change_notifier_provider.ChangeNotifierProxyProvider = change_notifier_provider.ChangeNotifierProxyProvider$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider, _is_ChangeNotifierProxyProvider_default);
  const _is_ChangeNotifierProxyProvider0_default = Symbol('_is_ChangeNotifierProxyProvider0_default');
  change_notifier_provider.ChangeNotifierProxyProvider0$ = dart.generic(R => {
    class ChangeNotifierProxyProvider0 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider0$(R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider0.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[1] || CT.C1, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider0.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider0);
    ChangeNotifierProxyProvider0.prototype[_is_ChangeNotifierProxyProvider0_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider0);
    dart.setLibraryUri(ChangeNotifierProxyProvider0, I[8]);
    return ChangeNotifierProxyProvider0;
  });
  change_notifier_provider.ChangeNotifierProxyProvider0 = change_notifier_provider.ChangeNotifierProxyProvider0$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider0, _is_ChangeNotifierProxyProvider0_default);
  const _is_ListenableProxyProvider2_default = Symbol('_is_ListenableProxyProvider2_default');
  listenable_provider.ListenableProxyProvider2$ = dart.generic((T, T2, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider2 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider2.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider2.prototype;
    dart.addTypeTests(ListenableProxyProvider2);
    ListenableProxyProvider2.prototype[_is_ListenableProxyProvider2_default] = true;
    dart.addTypeCaches(ListenableProxyProvider2);
    dart.setLibraryUri(ListenableProxyProvider2, I[7]);
    return ListenableProxyProvider2;
  });
  listenable_provider.ListenableProxyProvider2 = listenable_provider.ListenableProxyProvider2$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider2, _is_ListenableProxyProvider2_default);
  const _is_ChangeNotifierProxyProvider2_default = Symbol('_is_ChangeNotifierProxyProvider2_default');
  change_notifier_provider.ChangeNotifierProxyProvider2$ = dart.generic((T, T2, R) => {
    class ChangeNotifierProxyProvider2 extends listenable_provider.ListenableProxyProvider2$(T, T2, R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider2.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[1] || CT.C1, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider2.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider2);
    ChangeNotifierProxyProvider2.prototype[_is_ChangeNotifierProxyProvider2_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider2);
    dart.setLibraryUri(ChangeNotifierProxyProvider2, I[8]);
    return ChangeNotifierProxyProvider2;
  });
  change_notifier_provider.ChangeNotifierProxyProvider2 = change_notifier_provider.ChangeNotifierProxyProvider2$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider2, _is_ChangeNotifierProxyProvider2_default);
  const _is_ListenableProxyProvider3_default = Symbol('_is_ListenableProxyProvider3_default');
  listenable_provider.ListenableProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider3 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider3.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider3.prototype;
    dart.addTypeTests(ListenableProxyProvider3);
    ListenableProxyProvider3.prototype[_is_ListenableProxyProvider3_default] = true;
    dart.addTypeCaches(ListenableProxyProvider3);
    dart.setLibraryUri(ListenableProxyProvider3, I[7]);
    return ListenableProxyProvider3;
  });
  listenable_provider.ListenableProxyProvider3 = listenable_provider.ListenableProxyProvider3$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider3, _is_ListenableProxyProvider3_default);
  const _is_ChangeNotifierProxyProvider3_default = Symbol('_is_ChangeNotifierProxyProvider3_default');
  change_notifier_provider.ChangeNotifierProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    class ChangeNotifierProxyProvider3 extends listenable_provider.ListenableProxyProvider3$(T, T2, T3, R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider3.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[1] || CT.C1, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider3.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider3);
    ChangeNotifierProxyProvider3.prototype[_is_ChangeNotifierProxyProvider3_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider3);
    dart.setLibraryUri(ChangeNotifierProxyProvider3, I[8]);
    return ChangeNotifierProxyProvider3;
  });
  change_notifier_provider.ChangeNotifierProxyProvider3 = change_notifier_provider.ChangeNotifierProxyProvider3$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider3, _is_ChangeNotifierProxyProvider3_default);
  const _is_ListenableProxyProvider4_default = Symbol('_is_ListenableProxyProvider4_default');
  listenable_provider.ListenableProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider4 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider4.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider4.prototype;
    dart.addTypeTests(ListenableProxyProvider4);
    ListenableProxyProvider4.prototype[_is_ListenableProxyProvider4_default] = true;
    dart.addTypeCaches(ListenableProxyProvider4);
    dart.setLibraryUri(ListenableProxyProvider4, I[7]);
    return ListenableProxyProvider4;
  });
  listenable_provider.ListenableProxyProvider4 = listenable_provider.ListenableProxyProvider4$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider4, _is_ListenableProxyProvider4_default);
  const _is_ChangeNotifierProxyProvider4_default = Symbol('_is_ChangeNotifierProxyProvider4_default');
  change_notifier_provider.ChangeNotifierProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    class ChangeNotifierProxyProvider4 extends listenable_provider.ListenableProxyProvider4$(T, T2, T3, T4, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider4.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[1] || CT.C1, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider4.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider4);
    ChangeNotifierProxyProvider4.prototype[_is_ChangeNotifierProxyProvider4_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider4);
    dart.setLibraryUri(ChangeNotifierProxyProvider4, I[8]);
    return ChangeNotifierProxyProvider4;
  });
  change_notifier_provider.ChangeNotifierProxyProvider4 = change_notifier_provider.ChangeNotifierProxyProvider4$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider4, _is_ChangeNotifierProxyProvider4_default);
  const _is_ListenableProxyProvider5_default = Symbol('_is_ListenableProxyProvider5_default');
  listenable_provider.ListenableProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider5 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider5.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider5.prototype;
    dart.addTypeTests(ListenableProxyProvider5);
    ListenableProxyProvider5.prototype[_is_ListenableProxyProvider5_default] = true;
    dart.addTypeCaches(ListenableProxyProvider5);
    dart.setLibraryUri(ListenableProxyProvider5, I[7]);
    return ListenableProxyProvider5;
  });
  listenable_provider.ListenableProxyProvider5 = listenable_provider.ListenableProxyProvider5$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider5, _is_ListenableProxyProvider5_default);
  const _is_ChangeNotifierProxyProvider5_default = Symbol('_is_ChangeNotifierProxyProvider5_default');
  change_notifier_provider.ChangeNotifierProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    class ChangeNotifierProxyProvider5 extends listenable_provider.ListenableProxyProvider5$(T, T2, T3, T4, T5, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider5.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[1] || CT.C1, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider5.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider5);
    ChangeNotifierProxyProvider5.prototype[_is_ChangeNotifierProxyProvider5_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider5);
    dart.setLibraryUri(ChangeNotifierProxyProvider5, I[8]);
    return ChangeNotifierProxyProvider5;
  });
  change_notifier_provider.ChangeNotifierProxyProvider5 = change_notifier_provider.ChangeNotifierProxyProvider5$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider5, _is_ChangeNotifierProxyProvider5_default);
  const _is_ListenableProxyProvider6_default = Symbol('_is_ListenableProxyProvider6_default');
  listenable_provider.ListenableProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ListenableProxyProvider6 extends listenable_provider.ListenableProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (listenable_provider.ListenableProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ListenableProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ListenableProxyProvider6.__proto__.new.call(this, {key: key, create: create, lazy: lazy, builder: builder, update: dart.fn((context, previous) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), provider$.Provider.of(T6, context), previous), __t$BuildContextAndRNToR()), dispose: dispose, child: child});
      ;
    }).prototype = ListenableProxyProvider6.prototype;
    dart.addTypeTests(ListenableProxyProvider6);
    ListenableProxyProvider6.prototype[_is_ListenableProxyProvider6_default] = true;
    dart.addTypeCaches(ListenableProxyProvider6);
    dart.setLibraryUri(ListenableProxyProvider6, I[7]);
    return ListenableProxyProvider6;
  });
  listenable_provider.ListenableProxyProvider6 = listenable_provider.ListenableProxyProvider6$();
  dart.addTypeTests(listenable_provider.ListenableProxyProvider6, _is_ListenableProxyProvider6_default);
  const _is_ChangeNotifierProxyProvider6_default = Symbol('_is_ChangeNotifierProxyProvider6_default');
  change_notifier_provider.ChangeNotifierProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    class ChangeNotifierProxyProvider6 extends listenable_provider.ListenableProxyProvider6$(T, T2, T3, T4, T5, T6, R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (change_notifier_provider.ChangeNotifierProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, lazy: lazy, builder: builder, child: child});
      }
    }
    (ChangeNotifierProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ChangeNotifierProxyProvider6.__proto__.new.call(this, {key: key, create: create, update: update, dispose: C[1] || CT.C1, lazy: lazy, builder: builder, child: child});
      ;
    }).prototype = ChangeNotifierProxyProvider6.prototype;
    dart.addTypeTests(ChangeNotifierProxyProvider6);
    ChangeNotifierProxyProvider6.prototype[_is_ChangeNotifierProxyProvider6_default] = true;
    dart.addTypeCaches(ChangeNotifierProxyProvider6);
    dart.setLibraryUri(ChangeNotifierProxyProvider6, I[8]);
    return ChangeNotifierProxyProvider6;
  });
  change_notifier_provider.ChangeNotifierProxyProvider6 = change_notifier_provider.ChangeNotifierProxyProvider6$();
  dart.addTypeTests(change_notifier_provider.ChangeNotifierProxyProvider6, _is_ChangeNotifierProxyProvider6_default);
  var builder$0 = dart.privateName(consumer, "Consumer.builder");
  const _is_Consumer_default = Symbol('_is_Consumer_default');
  consumer.Consumer$ = dart.generic(T => {
    class Consumer extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$0];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer$(T)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t2, t1, t0;
        t0 = context;
        t1 = provider$.Provider.of(T, context);
        t2 = child;
        return this.builder(t0, t1, t2);
      }
    }
    (Consumer.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$0] = builder;
      Consumer.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer.prototype;
    dart.addTypeTests(Consumer);
    Consumer.prototype[_is_Consumer_default] = true;
    dart.addTypeCaches(Consumer);
    dart.setMethodSignature(Consumer, () => ({
      __proto__: dart.getMethods(Consumer.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer, I[9]);
    dart.setFieldSignature(Consumer, () => ({
      __proto__: dart.getFields(Consumer.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, T, dart.nullable(framework.Widget)]))
    }));
    return Consumer;
  });
  consumer.Consumer = consumer.Consumer$();
  dart.addTypeTests(consumer.Consumer, _is_Consumer_default);
  var builder$1 = dart.privateName(consumer, "Consumer2.builder");
  const _is_Consumer2_default = Symbol('_is_Consumer2_default');
  consumer.Consumer2$ = dart.generic((A, B) => {
    class Consumer2 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$1];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer2$(A, B)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t3, t2, t1, t0;
        t0 = context;
        t1 = provider$.Provider.of(A, context);
        t2 = provider$.Provider.of(B, context);
        t3 = child;
        return this.builder(t0, t1, t2, t3);
      }
    }
    (Consumer2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$1] = builder;
      Consumer2.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer2.prototype;
    dart.addTypeTests(Consumer2);
    Consumer2.prototype[_is_Consumer2_default] = true;
    dart.addTypeCaches(Consumer2);
    dart.setMethodSignature(Consumer2, () => ({
      __proto__: dart.getMethods(Consumer2.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer2, I[9]);
    dart.setFieldSignature(Consumer2, () => ({
      __proto__: dart.getFields(Consumer2.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, dart.nullable(framework.Widget)]))
    }));
    return Consumer2;
  });
  consumer.Consumer2 = consumer.Consumer2$();
  dart.addTypeTests(consumer.Consumer2, _is_Consumer2_default);
  var builder$2 = dart.privateName(consumer, "Consumer3.builder");
  const _is_Consumer3_default = Symbol('_is_Consumer3_default');
  consumer.Consumer3$ = dart.generic((A, B, C) => {
    class Consumer3 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$2];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer3$(A, B, C)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t4, t3, t2, t1, t0;
        t0 = context;
        t1 = provider$.Provider.of(A, context);
        t2 = provider$.Provider.of(B, context);
        t3 = provider$.Provider.of(C, context);
        t4 = child;
        return this.builder(t0, t1, t2, t3, t4);
      }
    }
    (Consumer3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$2] = builder;
      Consumer3.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer3.prototype;
    dart.addTypeTests(Consumer3);
    Consumer3.prototype[_is_Consumer3_default] = true;
    dart.addTypeCaches(Consumer3);
    dart.setMethodSignature(Consumer3, () => ({
      __proto__: dart.getMethods(Consumer3.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer3, I[9]);
    dart.setFieldSignature(Consumer3, () => ({
      __proto__: dart.getFields(Consumer3.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, dart.nullable(framework.Widget)]))
    }));
    return Consumer3;
  });
  consumer.Consumer3 = consumer.Consumer3$();
  dart.addTypeTests(consumer.Consumer3, _is_Consumer3_default);
  var builder$3 = dart.privateName(consumer, "Consumer4.builder");
  const _is_Consumer4_default = Symbol('_is_Consumer4_default');
  consumer.Consumer4$ = dart.generic((A, B, C, D) => {
    class Consumer4 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$3];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer4$(A, B, C, D)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t5, t4, t3, t2, t1, t0;
        t0 = context;
        t1 = provider$.Provider.of(A, context);
        t2 = provider$.Provider.of(B, context);
        t3 = provider$.Provider.of(C, context);
        t4 = provider$.Provider.of(D, context);
        t5 = child;
        return this.builder(t0, t1, t2, t3, t4, t5);
      }
    }
    (Consumer4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$3] = builder;
      Consumer4.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer4.prototype;
    dart.addTypeTests(Consumer4);
    Consumer4.prototype[_is_Consumer4_default] = true;
    dart.addTypeCaches(Consumer4);
    dart.setMethodSignature(Consumer4, () => ({
      __proto__: dart.getMethods(Consumer4.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer4, I[9]);
    dart.setFieldSignature(Consumer4, () => ({
      __proto__: dart.getFields(Consumer4.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, dart.nullable(framework.Widget)]))
    }));
    return Consumer4;
  });
  consumer.Consumer4 = consumer.Consumer4$();
  dart.addTypeTests(consumer.Consumer4, _is_Consumer4_default);
  var builder$4 = dart.privateName(consumer, "Consumer5.builder");
  const _is_Consumer5_default = Symbol('_is_Consumer5_default');
  consumer.Consumer5$ = dart.generic((A, B, C, D, E) => {
    class Consumer5 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$4];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, E, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer5$(A, B, C, D, E)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t6, t5, t4, t3, t2, t1, t0;
        t0 = context;
        t1 = provider$.Provider.of(A, context);
        t2 = provider$.Provider.of(B, context);
        t3 = provider$.Provider.of(C, context);
        t4 = provider$.Provider.of(D, context);
        t5 = provider$.Provider.of(E, context);
        t6 = child;
        return this.builder(t0, t1, t2, t3, t4, t5, t6);
      }
    }
    (Consumer5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$4] = builder;
      Consumer5.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer5.prototype;
    dart.addTypeTests(Consumer5);
    Consumer5.prototype[_is_Consumer5_default] = true;
    dart.addTypeCaches(Consumer5);
    dart.setMethodSignature(Consumer5, () => ({
      __proto__: dart.getMethods(Consumer5.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer5, I[9]);
    dart.setFieldSignature(Consumer5, () => ({
      __proto__: dart.getFields(Consumer5.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, E, dart.nullable(framework.Widget)]))
    }));
    return Consumer5;
  });
  consumer.Consumer5 = consumer.Consumer5$();
  dart.addTypeTests(consumer.Consumer5, _is_Consumer5_default);
  var builder$5 = dart.privateName(consumer, "Consumer6.builder");
  const _is_Consumer6_default = Symbol('_is_Consumer6_default');
  consumer.Consumer6$ = dart.generic((A, B, C, D, E, F) => {
    class Consumer6 extends nested.SingleChildStatelessWidget {
      get builder() {
        return this[builder$5];
      }
      set builder(value) {
        super.builder = value;
      }
      static ['_#new#tearOff'](A, B, C, D, E, F, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (consumer.Consumer6$(A, B, C, D, E, F)).new({key: key, builder: builder, child: child});
      }
      buildWithChild(context, child) {
        let t7, t6, t5, t4, t3, t2, t1, t0;
        t0 = context;
        t1 = provider$.Provider.of(A, context);
        t2 = provider$.Provider.of(B, context);
        t3 = provider$.Provider.of(C, context);
        t4 = provider$.Provider.of(D, context);
        t5 = provider$.Provider.of(E, context);
        t6 = provider$.Provider.of(F, context);
        t7 = child;
        return this.builder(t0, t1, t2, t3, t4, t5, t6, t7);
      }
    }
    (Consumer6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$5] = builder;
      Consumer6.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Consumer6.prototype;
    dart.addTypeTests(Consumer6);
    Consumer6.prototype[_is_Consumer6_default] = true;
    dart.addTypeCaches(Consumer6);
    dart.setMethodSignature(Consumer6, () => ({
      __proto__: dart.getMethods(Consumer6.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(Consumer6, I[9]);
    dart.setFieldSignature(Consumer6, () => ({
      __proto__: dart.getFields(Consumer6.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, A, B, C, D, E, F, dart.nullable(framework.Widget)]))
    }));
    return Consumer6;
  });
  consumer.Consumer6 = consumer.Consumer6$();
  dart.addTypeTests(consumer.Consumer6, _is_Consumer6_default);
  var _children = dart.privateName(nested, "_children");
  nested.Nested = class Nested extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let children = opts && 'children' in opts ? opts.children : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new nested.Nested.new({key: key, children: children, child: child});
    }
    build(context) {
      dart.throw(new core.StateError.new("implemented internally"));
    }
    createElement() {
      return new nested._NestedElement.new(this);
    }
  };
  (nested.Nested.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let children = opts && 'children' in opts ? opts.children : null;
    let child = opts && 'child' in opts ? opts.child : null;
    if (!children[$isNotEmpty]) dart.assertFailed(null, I[10], 71, 16, "children.isNotEmpty");
    this[_children] = children;
    this[_child$] = child;
    nested.Nested.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.Nested.prototype;
  dart.addTypeTests(nested.Nested);
  dart.addTypeCaches(nested.Nested);
  nested.Nested[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.Nested, () => ({
    __proto__: dart.getMethods(nested.Nested.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    createElement: dart.fnType(nested._NestedElement, [])
  }));
  dart.setLibraryUri(nested.Nested, I[4]);
  dart.setFieldSignature(nested.Nested, () => ({
    __proto__: dart.getFields(nested.Nested.__proto__),
    [_children]: dart.finalFieldType(core.List$(nested.SingleChildWidget)),
    [_child$]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  provider$.MultiProvider = class MultiProvider extends nested.Nested {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let providers = opts && 'providers' in opts ? opts.providers : null;
      let child = opts && 'child' in opts ? opts.child : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      return new provider$.MultiProvider.new({key: key, providers: providers, child: child, builder: builder});
    }
  };
  (provider$.MultiProvider.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let providers = opts && 'providers' in opts ? opts.providers : null;
    let child = opts && 'child' in opts ? opts.child : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    provider$.MultiProvider.__proto__.new.call(this, {key: key, children: providers, child: builder != null ? new basic.Builder.new({builder: dart.fn(context => builder(context, child), T$.BuildContextToWidget())}) : child});
    ;
  }).prototype = provider$.MultiProvider.prototype;
  dart.addTypeTests(provider$.MultiProvider);
  dart.addTypeCaches(provider$.MultiProvider);
  dart.setLibraryUri(provider$.MultiProvider, I[5]);
  const _is_Provider_default = Symbol('_is_Provider_default');
  provider$.Provider$ = dart.generic(T => {
    var __t$TTovoid = () => (__t$TTovoid = dart.constFn(dart.fnType(dart.void, [T])))();
    class Provider extends provider$.InheritedProvider$(T) {
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.Provider$(T)).new({key: key, create: create, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$.Provider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, builder: builder, child: child});
      }
      static of(T, context, opts) {
        let t0;
        let listen = opts && 'listen' in opts ? opts.listen : true;
        if (!(dart.nullCheck(context.owner).debugBuilding || listen === false || provider$.debugIsInInheritedProviderUpdate)) dart.assertFailed("Tried to listen to a value exposed with provider, from outside of the widget tree.\n\nThis is likely caused by an event handler (like a button's onPressed) that called\nProvider.of without passing `listen: false`.\n\nTo fix, write:\nProvider.of<" + dart.str(dart.wrapType(T)) + ">(context, listen: false);\n\nIt is unsupported because may pointlessly rebuild the widget associated to the\nevent handler, when the widget tree doesn't care about the value.\n\nThe context used was: " + dart.str(context) + "\n", I[11], 274, 7, "context.owner!.debugBuilding ||\n          listen == false ||\n          debugIsInInheritedProviderUpdate");
        let inheritedElement = provider$.Provider._inheritedElementOf(T, context);
        if (listen) {
          context.dependOnInheritedWidgetOfExactType(provider$._InheritedProviderScope$(dart.nullable(T)));
        }
        let value = (t0 = inheritedElement, t0 == null ? null : t0.value);
        if (provider$._isSoundMode) {
          if (!T.is(value)) {
            dart.throw(new provider$.ProviderNullException.new(dart.wrapType(T), context.widget[$runtimeType]));
          }
          return value;
        }
        return T.as(value);
      }
      static _inheritedElementOf(T, context) {
        if (!(context !== null)) dart.assertFailed("Tried to call context.read/watch/select or similar on a `context` that is null.\n\nThis can happen if you used the context of a StatefulWidget and that\nStatefulWidget was disposed.\n", I[11], 319, 12, "context != null");
        if (!(provider$._debugIsSelecting === false)) dart.assertFailed("Cannot call context.read/watch/select inside the callback of a context.select", I[11], 326, 7, "_debugIsSelecting == false");
        if (!!dart.wrapType(T)._equals(dart.wrapType(dart.dynamic))) dart.assertFailed("Tried to call Provider.of<dynamic>. This is likely a mistake and is therefore\nunsupported.\n\nIf you want to expose a variable that can be anything, consider changing\n`dynamic` to `Object` instead.\n", I[11], 330, 7, "T != dynamic");
        let inheritedElement = dart.nullable(provider$._InheritedProviderScopeElement$(dart.nullable(T))).as(context.getElementForInheritedWidgetOfExactType(provider$._InheritedProviderScope$(dart.nullable(T))));
        if (inheritedElement == null && !T.is(null)) {
          dart.throw(new provider$.ProviderNotFoundException.new(dart.wrapType(T), context.widget[$runtimeType]));
        }
        return inheritedElement;
      }
    }
    (Provider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Provider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, dispose: dispose, debugCheckInvalidValueType: dart.fn(value => {
          let t0;
          t0 = provider$.Provider.debugCheckInvalidValueType;
          return t0 == null ? null : t0(T, value);
        }, __t$TTovoid()), child: child});
      ;
    }).prototype = Provider.prototype;
    (Provider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      if (!dart.fn(() => {
        let t0;
        t0 = provider$.Provider.debugCheckInvalidValueType;
        t0 == null ? null : t0(T, value);
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[11], 243, 16, "() {\n          Provider.debugCheckInvalidValueType?.call<T>(value);\n          return true;\n        }()");
      Provider.__proto__.value.call(this, {key: key, builder: builder, value: value, updateShouldNotify: updateShouldNotify, child: child});
      ;
    }).prototype = Provider.prototype;
    dart.addTypeTests(Provider);
    Provider.prototype[_is_Provider_default] = true;
    dart.addTypeCaches(Provider);
    dart.setStaticMethodSignature(Provider, () => ['of', '_inheritedElementOf']);
    dart.setLibraryUri(Provider, I[5]);
    dart.setStaticFieldSignature(Provider, () => ['debugCheckInvalidValueType']);
    return Provider;
  });
  provider$.Provider = provider$.Provider$();
  dart.defineLazy(provider$.Provider, {
    /*provider$.Provider.debugCheckInvalidValueType*/get debugCheckInvalidValueType() {
      return dart.fn((T, value) => {
        if (!dart.fn(() => {
          if (change_notifier.Listenable.is(value) || async.Stream.is(value)) {
            dart.throw(assertions.FlutterError.new("Tried to use Provider with a subtype of Listenable/Stream (" + dart.str(dart.wrapType(T)) + ").\n\nThis is likely a mistake, as Provider will not automatically update dependents\nwhen " + dart.str(dart.wrapType(T)) + " is updated. Instead, consider changing Provider for more specific\nimplementation that handles the update mechanism, such as:\n\n- ListenableProvider\n- ChangeNotifierProvider\n- ValueListenableProvider\n- StreamProvider\n\nAlternatively, if you are making your own provider, consider using InheritedProvider.\n\nIf you think that this is not an error, you can disable this check by setting\nProvider.debugCheckInvalidValueType to `null` in your main file:\n\n```\nvoid main() {\n  Provider.debugCheckInvalidValueType = null;\n\n  runApp(MyApp());\n}\n```\n"));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[11], 385, 12, "() {\n      if (value is Listenable || value is Stream) {\n        throw FlutterError('''\nTried to use Provider with a subtype of Listenable/Stream ($T).\n\nThis is likely a mistake, as Provider will not automatically update dependents\nwhen $T is updated. Instead, consider changing Provider for more specific\nimplementation that handles the update mechanism, such as:\n\n- ListenableProvider\n- ChangeNotifierProvider\n- ValueListenableProvider\n- StreamProvider\n\nAlternatively, if you are making your own provider, consider using InheritedProvider.\n\nIf you think that this is not an error, you can disable this check by setting\nProvider.debugCheckInvalidValueType to `null` in your main file:\n\n```\nvoid main() {\n  Provider.debugCheckInvalidValueType = null;\n\n  runApp(MyApp());\n}\n```\n''');\n      }\n      return true;\n    }()");
      }, T$.TTovoid$1());
    },
    set debugCheckInvalidValueType(value) {}
  }, false);
  dart.addTypeTests(provider$.Provider, _is_Provider_default);
  var valueType$ = dart.privateName(provider$, "ProviderNullException.valueType");
  var widgetType$ = dart.privateName(provider$, "ProviderNullException.widgetType");
  provider$.ProviderNullException = class ProviderNullException extends core.Object {
    get valueType() {
      return this[valueType$];
    }
    set valueType(value) {
      super.valueType = value;
    }
    get widgetType() {
      return this[widgetType$];
    }
    set widgetType(value) {
      super.widgetType = value;
    }
    static ['_#new#tearOff'](valueType, widgetType) {
      return new provider$.ProviderNullException.new(valueType, widgetType);
    }
    toString() {
      ;
      return "Error: The widget " + dart.str(this.widgetType) + " tried to read Provider<" + dart.str(this.valueType) + "> but the matching\nprovider returned null.\n\nTo fix the error, consider changing Provider<" + dart.str(this.valueType) + "> to Provider<" + dart.str(this.valueType) + "?>.\n";
    }
  };
  (provider$.ProviderNullException.new = function(valueType, widgetType) {
    this[valueType$] = valueType;
    this[widgetType$] = widgetType;
    ;
  }).prototype = provider$.ProviderNullException.prototype;
  dart.addTypeTests(provider$.ProviderNullException);
  dart.addTypeCaches(provider$.ProviderNullException);
  provider$.ProviderNullException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(provider$.ProviderNullException, I[5]);
  dart.setFieldSignature(provider$.ProviderNullException, () => ({
    __proto__: dart.getFields(provider$.ProviderNullException.__proto__),
    valueType: dart.finalFieldType(core.Type),
    widgetType: dart.finalFieldType(core.Type)
  }));
  dart.defineExtensionMethods(provider$.ProviderNullException, ['toString']);
  var valueType$0 = dart.privateName(provider$, "ProviderNotFoundException.valueType");
  var widgetType$0 = dart.privateName(provider$, "ProviderNotFoundException.widgetType");
  provider$.ProviderNotFoundException = class ProviderNotFoundException extends core.Object {
    get valueType() {
      return this[valueType$0];
    }
    set valueType(value) {
      super.valueType = value;
    }
    get widgetType() {
      return this[widgetType$0];
    }
    set widgetType(value) {
      super.widgetType = value;
    }
    static ['_#new#tearOff'](valueType, widgetType) {
      return new provider$.ProviderNotFoundException.new(valueType, widgetType);
    }
    toString() {
      ;
      return "Error: Could not find the correct Provider<" + dart.str(this.valueType) + "> above this " + dart.str(this.widgetType) + " Widget\n\nThis happens because you used a `BuildContext` that does not include the provider\nof your choice. There are a few common scenarios:\n\n- You added a new provider in your `main.dart` and performed a hot-reload.\n  To fix, perform a hot-restart.\n\n- The provider you are trying to read is in a different route.\n\n  Providers are \"scoped\". So if you insert of provider inside a route, then\n  other routes will not be able to access that provider.\n\n- You used a `BuildContext` that is an ancestor of the provider you are trying to read.\n\n  Make sure that " + dart.str(this.widgetType) + " is under your MultiProvider/Provider<" + dart.str(this.valueType) + ">.\n  This usually happens when you are creating a provider and trying to read it immediately.\n\n  For example, instead of:\n\n  ```\n  Widget build(BuildContext context) {\n    return Provider<Example>(\n      create: (_) => Example(),\n      // Will throw a ProviderNotFoundError, because `context` is associated\n      // to the widget that is the parent of `Provider<Example>`\n      child: Text(context.watch<Example>().toString()),\n    );\n  }\n  ```\n\n  consider using `builder` like so:\n\n  ```\n  Widget build(BuildContext context) {\n    return Provider<Example>(\n      create: (_) => Example(),\n      // we use `builder` to obtain a new `BuildContext` that has access to the provider\n      builder: (context, child) {\n        // No longer throws\n        return Text(context.watch<Example>().toString());\n      }\n    );\n  }\n  ```\n\nIf none of these solutions work, consider asking for help on StackOverflow:\nhttps://stackoverflow.com/questions/tagged/flutter\n";
    }
  };
  (provider$.ProviderNotFoundException.new = function(valueType, widgetType) {
    this[valueType$0] = valueType;
    this[widgetType$0] = widgetType;
    ;
  }).prototype = provider$.ProviderNotFoundException.prototype;
  dart.addTypeTests(provider$.ProviderNotFoundException);
  dart.addTypeCaches(provider$.ProviderNotFoundException);
  provider$.ProviderNotFoundException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(provider$.ProviderNotFoundException, I[5]);
  dart.setFieldSignature(provider$.ProviderNotFoundException, () => ({
    __proto__: dart.getFields(provider$.ProviderNotFoundException.__proto__),
    valueType: dart.finalFieldType(core.Type),
    widgetType: dart.finalFieldType(core.Type)
  }));
  dart.defineExtensionMethods(provider$.ProviderNotFoundException, ['toString']);
  const _is__Delegate_default = Symbol('_is__Delegate_default');
  provider$._Delegate$ = dart.generic(T => {
    class _Delegate extends core.Object {
      debugFillProperties(properties) {
      }
    }
    (_Delegate.new = function() {
      ;
    }).prototype = _Delegate.prototype;
    dart.addTypeTests(_Delegate);
    _Delegate.prototype[_is__Delegate_default] = true;
    dart.addTypeCaches(_Delegate);
    dart.setMethodSignature(_Delegate, () => ({
      __proto__: dart.getMethods(_Delegate.__proto__),
      debugFillProperties: dart.fnType(dart.void, [diagnostics.DiagnosticPropertiesBuilder])
    }));
    dart.setLibraryUri(_Delegate, I[5]);
    return _Delegate;
  });
  provider$._Delegate = provider$._Delegate$();
  dart.addTypeTests(provider$._Delegate, _is__Delegate_default);
  const _is__DeferredDelegate_default = Symbol('_is__DeferredDelegate_default');
  provider$._DeferredDelegate$ = dart.generic((T, R) => {
    class _DeferredDelegate extends provider$._Delegate$(R) {}
    (_DeferredDelegate.new = function(updateShouldNotify, startListening) {
      this.updateShouldNotify = updateShouldNotify;
      this.startListening = startListening;
      ;
    }).prototype = _DeferredDelegate.prototype;
    dart.addTypeTests(_DeferredDelegate);
    _DeferredDelegate.prototype[_is__DeferredDelegate_default] = true;
    dart.addTypeCaches(_DeferredDelegate);
    dart.setLibraryUri(_DeferredDelegate, I[5]);
    dart.setFieldSignature(_DeferredDelegate, () => ({
      __proto__: dart.getFields(_DeferredDelegate.__proto__),
      updateShouldNotify: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [R, R]))),
      startListening: dart.finalFieldType(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(dart.nullable(R)), dart.fnType(dart.void, [R]), T, dart.nullable(R)]))
    }));
    return _DeferredDelegate;
  });
  provider$._DeferredDelegate = provider$._DeferredDelegate$();
  dart.addTypeTests(provider$._DeferredDelegate, _is__DeferredDelegate_default);
  var _removeListener = dart.privateName(provider$, "_removeListener");
  var _value = dart.privateName(provider$, "_value");
  var _hasValue = dart.privateName(provider$, "_hasValue");
  var _isNotifyDependentsEnabled = dart.privateName(provider$, "_isNotifyDependentsEnabled");
  var element = dart.privateName(provider$, "_DelegateState.element");
  var _debugSetInheritedLock = dart.privateName(provider$, "_debugSetInheritedLock");
  const _is__DelegateState_default = Symbol('_is__DelegateState_default');
  provider$._DelegateState$ = dart.generic((T, D) => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$_InheritedProviderScopeElementOfTN = () => (__t$_InheritedProviderScopeElementOfTN = dart.constFn(provider$._InheritedProviderScopeElement$(__t$TN())))();
    var __t$_InheritedProviderScopeElementNOfTN = () => (__t$_InheritedProviderScopeElementNOfTN = dart.constFn(dart.nullable(__t$_InheritedProviderScopeElementOfTN())))();
    class _DelegateState extends core.Object {
      get element() {
        return this[element];
      }
      set element(value) {
        this[element] = __t$_InheritedProviderScopeElementNOfTN().as(value);
      }
      get delegate() {
        return D.as(dart.nullCheck(this.element).widget.owner[_delegate]);
      }
      debugSetInheritedLock(value) {
        return dart.nullCheck(this.element)[_debugSetInheritedLock](value);
      }
      willUpdateDelegate(newDelegate) {
        D.as(newDelegate);
        return false;
      }
      dispose() {
      }
      debugFillProperties(properties) {
      }
      build(opts) {
        let isBuildFromExternalSources = opts && 'isBuildFromExternalSources' in opts ? opts.isBuildFromExternalSources : null;
      }
    }
    (_DelegateState.new = function() {
      this[element] = null;
      ;
    }).prototype = _DelegateState.prototype;
    dart.addTypeTests(_DelegateState);
    _DelegateState.prototype[_is__DelegateState_default] = true;
    dart.addTypeCaches(_DelegateState);
    dart.setMethodSignature(_DelegateState, () => ({
      __proto__: dart.getMethods(_DelegateState.__proto__),
      debugSetInheritedLock: dart.fnType(core.bool, [core.bool]),
      willUpdateDelegate: dart.fnType(core.bool, [dart.nullable(core.Object)]),
      dispose: dart.fnType(dart.void, []),
      debugFillProperties: dart.fnType(dart.void, [diagnostics.DiagnosticPropertiesBuilder]),
      build: dart.fnType(dart.void, [], {}, {isBuildFromExternalSources: core.bool})
    }));
    dart.setGetterSignature(_DelegateState, () => ({
      __proto__: dart.getGetters(_DelegateState.__proto__),
      delegate: D
    }));
    dart.setLibraryUri(_DelegateState, I[5]);
    dart.setFieldSignature(_DelegateState, () => ({
      __proto__: dart.getFields(_DelegateState.__proto__),
      element: dart.fieldType(dart.nullable(provider$._InheritedProviderScopeElement$(dart.nullable(T))))
    }));
    return _DelegateState;
  });
  provider$._DelegateState = provider$._DelegateState$();
  dart.addTypeTests(provider$._DelegateState, _is__DelegateState_default);
  const _is__DeferredDelegateState_default = Symbol('_is__DeferredDelegateState_default');
  provider$._DeferredDelegateState$ = dart.generic((T, R, W) => {
    var __t$InheritedContextOfRNAndFnAndT__ToFn = () => (__t$InheritedContextOfRNAndFnAndT__ToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfRN(), __t$RTovoid(), T, __t$RN()])))();
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$InheritedContextOfRN = () => (__t$InheritedContextOfRN = dart.constFn(provider$.InheritedContext$(__t$RN())))();
    var __t$RTovoid = () => (__t$RTovoid = dart.constFn(dart.fnType(dart.void, [R])))();
    var __t$RAndRTobool = () => (__t$RAndRTobool = dart.constFn(dart.fnType(core.bool, [R, R])))();
    var __t$RAndRToNbool = () => (__t$RAndRToNbool = dart.constFn(dart.nullable(__t$RAndRTobool())))();
    class _DeferredDelegateState extends provider$._DelegateState$(R, W) {
      get value() {
        let t4, t3, t2, t1, t0;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = false;
        this[_removeListener] == null ? this[_removeListener] = (t0 = this.delegate, t1 = dart.nullCheck(this.element), t2 = dart.bind(this, 'setState'), t3 = this.controller, t4 = this[_value], __t$InheritedContextOfRNAndFnAndT__ToFn().as(t0.startListening)(t1, t2, t3, t4)) : null;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = true;
        if (!dart.nullCheck(this.element).hasValue) dart.assertFailed("The callback \"startListening\" was called, but it left DeferredInhertitedProviderElement<" + dart.str(dart.wrapType(T)) + ", " + dart.str(dart.wrapType(R)) + ">\nin an uninitialized state.\n\nIt is necessary for \"startListening\" to call \"setState\" at least once the very\nfirst time \"value\" is requested.\n\nTo fix, consider:\n\nDeferredInheritedProvider(\n  ...,\n  startListening: (element, setState, controller, value) {\n    if (!element.hasValue) {\n      setState(myInitialValue); // TODO replace myInitialValue with your own\n    }\n    ...\n  }\n)\n    ", I[12], 109, 12, "element!.hasValue");
        if (!(this[_removeListener] != null)) dart.assertFailed(null, I[12], 128, 12, "_removeListener != null");
        return R.as(this[_value]);
      }
      dispose() {
        let t0;
        super.dispose();
        t0 = this[_removeListener];
        t0 == null ? null : t0();
      }
      get isLoaded() {
        return this[_removeListener] != null;
      }
      get hasValue() {
        return this[_hasValue];
      }
      setState(value) {
        R.as(value);
        if (this[_hasValue]) {
          let shouldNotify = __t$RAndRToNbool().as(this.delegate.updateShouldNotify) != null ? dart.nullCheck(__t$RAndRToNbool().as(this.delegate.updateShouldNotify))(R.as(this[_value]), value) : !dart.equals(this[_value], value);
          if (shouldNotify) {
            dart.nullCheck(this.element).markNeedsNotifyDependents();
          }
        }
        this[_hasValue] = true;
        this[_value] = value;
      }
    }
    (_DeferredDelegateState.new = function() {
      this[_removeListener] = null;
      this[_value] = null;
      this[_hasValue] = false;
      _DeferredDelegateState.__proto__.new.call(this);
      ;
    }).prototype = _DeferredDelegateState.prototype;
    dart.addTypeTests(_DeferredDelegateState);
    _DeferredDelegateState.prototype[_is__DeferredDelegateState_default] = true;
    dart.addTypeCaches(_DeferredDelegateState);
    dart.setMethodSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getMethods(_DeferredDelegateState.__proto__),
      setState: dart.fnType(dart.void, [dart.nullable(core.Object)])
    }));
    dart.setGetterSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getGetters(_DeferredDelegateState.__proto__),
      value: R,
      isLoaded: core.bool,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_DeferredDelegateState, I[5]);
    dart.setFieldSignature(_DeferredDelegateState, () => ({
      __proto__: dart.getFields(_DeferredDelegateState.__proto__),
      [_removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
      [_value]: dart.fieldType(dart.nullable(R)),
      [_hasValue]: dart.fieldType(core.bool)
    }));
    return _DeferredDelegateState;
  });
  provider$._DeferredDelegateState = provider$._DeferredDelegateState$();
  dart.addTypeTests(provider$._DeferredDelegateState, _is__DeferredDelegateState_default);
  const _is__CreateDeferredInheritedProvider_default = Symbol('_is__CreateDeferredInheritedProvider_default');
  provider$._CreateDeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_CreateDeferredInheritedProviderElementOfT$R = () => (__t$_CreateDeferredInheritedProviderElementOfT$R = dart.constFn(provider$._CreateDeferredInheritedProviderElement$(T, R)))();
    class _CreateDeferredInheritedProvider extends provider$._DeferredDelegate$(T, R) {
      static ['_#new#tearOff'](T, R, opts) {
        let create = opts && 'create' in opts ? opts.create : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        return new (provider$._CreateDeferredInheritedProvider$(T, R)).new({create: create, dispose: dispose, updateShouldNotify: updateShouldNotify, startListening: startListening});
      }
      createState() {
        return new (__t$_CreateDeferredInheritedProviderElementOfT$R()).new();
      }
    }
    (_CreateDeferredInheritedProvider.new = function(opts) {
      let create = opts && 'create' in opts ? opts.create : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      this.create = create;
      this.dispose = dispose;
      _CreateDeferredInheritedProvider.__proto__.new.call(this, updateShouldNotify, startListening);
      ;
    }).prototype = _CreateDeferredInheritedProvider.prototype;
    dart.addTypeTests(_CreateDeferredInheritedProvider);
    _CreateDeferredInheritedProvider.prototype[_is__CreateDeferredInheritedProvider_default] = true;
    dart.addTypeCaches(_CreateDeferredInheritedProvider);
    dart.setMethodSignature(_CreateDeferredInheritedProvider, () => ({
      __proto__: dart.getMethods(_CreateDeferredInheritedProvider.__proto__),
      createState: dart.fnType(provider$._CreateDeferredInheritedProviderElement$(T, R), [])
    }));
    dart.setLibraryUri(_CreateDeferredInheritedProvider, I[5]);
    dart.setFieldSignature(_CreateDeferredInheritedProvider, () => ({
      __proto__: dart.getFields(_CreateDeferredInheritedProvider.__proto__),
      create: dart.finalFieldType(dart.fnType(T, [framework.BuildContext])),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.BuildContext, T])))
    }));
    return _CreateDeferredInheritedProvider;
  });
  provider$._CreateDeferredInheritedProvider = provider$._CreateDeferredInheritedProvider$();
  dart.addTypeTests(provider$._CreateDeferredInheritedProvider, _is__CreateDeferredInheritedProvider_default);
  var _didBuild = dart.privateName(provider$, "_didBuild");
  var _controller = dart.privateName(provider$, "_controller");
  const _is__CreateDeferredInheritedProviderElement_default = Symbol('_is__CreateDeferredInheritedProviderElement_default');
  provider$._CreateDeferredInheritedProviderElement$ = dart.generic((T, R) => {
    var __t$BuildContextAndTTovoid = () => (__t$BuildContextAndTTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T])))();
    var __t$BuildContextAndTToNvoid = () => (__t$BuildContextAndTToNvoid = dart.constFn(dart.nullable(__t$BuildContextAndTTovoid())))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$DiagnosticsPropertyOfR = () => (__t$DiagnosticsPropertyOfR = dart.constFn(diagnostics.DiagnosticsProperty$(R)))();
    class _CreateDeferredInheritedProviderElement extends provider$._DeferredDelegateState$(T, R, provider$._CreateDeferredInheritedProvider$(T, R)) {
      get controller() {
        let t1, t0;
        if (!this[_didBuild]) {
          if (!this.debugSetInheritedLock(true)) dart.assertFailed(null, I[12], 186, 14, "debugSetInheritedLock(true)");
          let _debugPreviousIsInInheritedProviderCreate = null;
          let _debugPreviousIsInInheritedProviderUpdate = null;
          if (!dart.fn(() => {
            _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
            _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
            return true;
          }, T$.VoidTobool())()) dart.assertFailed(null, I[12], 190, 14, "() {\n        _debugPreviousIsInInheritedProviderCreate =\n            debugIsInInheritedProviderCreate;\n        _debugPreviousIsInInheritedProviderUpdate =\n            debugIsInInheritedProviderUpdate;\n        return true;\n      }()");
          try {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = true;
              provider$.debugIsInInheritedProviderUpdate = false;
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[12], 199, 16, "() {\n          debugIsInInheritedProviderCreate = true;\n          debugIsInInheritedProviderUpdate = false;\n          return true;\n        }()");
            this[_controller] = (t0 = this.delegate, t1 = dart.nullCheck(this.element), t0.create(t1));
          } finally {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
              provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[12], 206, 16, "() {\n          debugIsInInheritedProviderCreate =\n              _debugPreviousIsInInheritedProviderCreate!;\n          debugIsInInheritedProviderUpdate =\n              _debugPreviousIsInInheritedProviderUpdate!;\n          return true;\n        }()");
          }
          this[_didBuild] = true;
        }
        return T.as(this[_controller]);
      }
      dispose() {
        let t0;
        super.dispose();
        if (this[_didBuild]) {
          t0 = __t$BuildContextAndTToNvoid().as(this.delegate.dispose);
          t0 == null ? null : t0(dart.nullCheck(this.element), T.as(this[_controller]));
        }
      }
      debugFillProperties(properties) {
        let t0, t0$;
        super.debugFillProperties(properties);
        if (this.isLoaded) {
          t0 = properties;
          (() => {
            t0.add(new (__t$DiagnosticsPropertyOfT()).new("controller", this.controller));
            t0.add(new (__t$DiagnosticsPropertyOfR()).new("value", this.value));
            return t0;
          })();
        } else {
          t0$ = properties;
          (() => {
            t0$.add(new diagnostics.FlagProperty.new("controller", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
            t0$.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
            return t0$;
          })();
        }
      }
      static ['_#new#tearOff'](T, R) {
        return new (provider$._CreateDeferredInheritedProviderElement$(T, R)).new();
      }
    }
    (_CreateDeferredInheritedProviderElement.new = function() {
      this[_didBuild] = false;
      this[_controller] = null;
      _CreateDeferredInheritedProviderElement.__proto__.new.call(this);
      ;
    }).prototype = _CreateDeferredInheritedProviderElement.prototype;
    dart.addTypeTests(_CreateDeferredInheritedProviderElement);
    _CreateDeferredInheritedProviderElement.prototype[_is__CreateDeferredInheritedProviderElement_default] = true;
    dart.addTypeCaches(_CreateDeferredInheritedProviderElement);
    dart.setGetterSignature(_CreateDeferredInheritedProviderElement, () => ({
      __proto__: dart.getGetters(_CreateDeferredInheritedProviderElement.__proto__),
      controller: T
    }));
    dart.setLibraryUri(_CreateDeferredInheritedProviderElement, I[5]);
    dart.setFieldSignature(_CreateDeferredInheritedProviderElement, () => ({
      __proto__: dart.getFields(_CreateDeferredInheritedProviderElement.__proto__),
      [_didBuild]: dart.fieldType(core.bool),
      [_controller]: dart.fieldType(dart.nullable(T))
    }));
    return _CreateDeferredInheritedProviderElement;
  });
  provider$._CreateDeferredInheritedProviderElement = provider$._CreateDeferredInheritedProviderElement$();
  dart.addTypeTests(provider$._CreateDeferredInheritedProviderElement, _is__CreateDeferredInheritedProviderElement_default);
  const _is__ValueDeferredInheritedProvider_default = Symbol('_is__ValueDeferredInheritedProvider_default');
  provider$._ValueDeferredInheritedProvider$ = dart.generic((T, R) => {
    var __t$_ValueDeferredInheritedProviderStateOfT$R = () => (__t$_ValueDeferredInheritedProviderStateOfT$R = dart.constFn(provider$._ValueDeferredInheritedProviderState$(T, R)))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class _ValueDeferredInheritedProvider extends provider$._DeferredDelegate$(T, R) {
      static ['_#new#tearOff'](T, R, value, updateShouldNotify, startListening) {
        return new (provider$._ValueDeferredInheritedProvider$(T, R)).new(value, updateShouldNotify, startListening);
      }
      createState() {
        return new (__t$_ValueDeferredInheritedProviderStateOfT$R()).new();
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("controller", this.value));
      }
    }
    (_ValueDeferredInheritedProvider.new = function(value, updateShouldNotify, startListening) {
      this.value = value;
      _ValueDeferredInheritedProvider.__proto__.new.call(this, updateShouldNotify, startListening);
      ;
    }).prototype = _ValueDeferredInheritedProvider.prototype;
    dart.addTypeTests(_ValueDeferredInheritedProvider);
    _ValueDeferredInheritedProvider.prototype[_is__ValueDeferredInheritedProvider_default] = true;
    dart.addTypeCaches(_ValueDeferredInheritedProvider);
    dart.setMethodSignature(_ValueDeferredInheritedProvider, () => ({
      __proto__: dart.getMethods(_ValueDeferredInheritedProvider.__proto__),
      createState: dart.fnType(provider$._ValueDeferredInheritedProviderState$(T, R), [])
    }));
    dart.setLibraryUri(_ValueDeferredInheritedProvider, I[5]);
    dart.setFieldSignature(_ValueDeferredInheritedProvider, () => ({
      __proto__: dart.getFields(_ValueDeferredInheritedProvider.__proto__),
      value: dart.finalFieldType(T)
    }));
    return _ValueDeferredInheritedProvider;
  });
  provider$._ValueDeferredInheritedProvider = provider$._ValueDeferredInheritedProvider$();
  dart.addTypeTests(provider$._ValueDeferredInheritedProvider, _is__ValueDeferredInheritedProvider_default);
  const _is__ValueDeferredInheritedProviderState_default = Symbol('_is__ValueDeferredInheritedProviderState_default');
  provider$._ValueDeferredInheritedProviderState$ = dart.generic((T, R) => {
    var __t$_ValueDeferredInheritedProviderOfT$R = () => (__t$_ValueDeferredInheritedProviderOfT$R = dart.constFn(provider$._ValueDeferredInheritedProvider$(T, R)))();
    var __t$DiagnosticsPropertyOfR = () => (__t$DiagnosticsPropertyOfR = dart.constFn(diagnostics.DiagnosticsProperty$(R)))();
    class _ValueDeferredInheritedProviderState extends provider$._DeferredDelegateState$(T, R, provider$._ValueDeferredInheritedProvider$(T, R)) {
      willUpdateDelegate(oldDelegate) {
        __t$_ValueDeferredInheritedProviderOfT$R().as(oldDelegate);
        if (!dart.equals(this.delegate.value, oldDelegate.value)) {
          if (this[_removeListener] != null) {
            dart.nullCheck(this[_removeListener])();
            this[_removeListener] = null;
          }
          return true;
        }
        return false;
      }
      get controller() {
        return this.delegate.value;
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        if (this[_removeListener] != null) {
          properties.add(new (__t$DiagnosticsPropertyOfR()).new("value", this.value));
        } else {
          properties.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
        }
      }
      static ['_#new#tearOff'](T, R) {
        return new (provider$._ValueDeferredInheritedProviderState$(T, R)).new();
      }
    }
    (_ValueDeferredInheritedProviderState.new = function() {
      _ValueDeferredInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _ValueDeferredInheritedProviderState.prototype;
    dart.addTypeTests(_ValueDeferredInheritedProviderState);
    _ValueDeferredInheritedProviderState.prototype[_is__ValueDeferredInheritedProviderState_default] = true;
    dart.addTypeCaches(_ValueDeferredInheritedProviderState);
    dart.setGetterSignature(_ValueDeferredInheritedProviderState, () => ({
      __proto__: dart.getGetters(_ValueDeferredInheritedProviderState.__proto__),
      controller: T
    }));
    dart.setLibraryUri(_ValueDeferredInheritedProviderState, I[5]);
    return _ValueDeferredInheritedProviderState;
  });
  provider$._ValueDeferredInheritedProviderState = provider$._ValueDeferredInheritedProviderState$();
  dart.addTypeTests(provider$._ValueDeferredInheritedProviderState, _is__ValueDeferredInheritedProviderState_default);
  var eventKind$ = dart.privateName(provider$, "PostEventCall.eventKind");
  var event$ = dart.privateName(provider$, "PostEventCall.event");
  provider$.PostEventCall = class PostEventCall extends core.Object {
    get eventKind() {
      return this[eventKind$];
    }
    set eventKind(value) {
      super.eventKind = value;
    }
    get event() {
      return this[event$];
    }
    set event(value) {
      super.event = value;
    }
    static ['_#_#tearOff'](eventKind, event) {
      return new provider$.PostEventCall.__(eventKind, event);
    }
  };
  (provider$.PostEventCall.__ = function(eventKind, event) {
    this[eventKind$] = eventKind;
    this[event$] = event;
    ;
  }).prototype = provider$.PostEventCall.prototype;
  dart.addTypeTests(provider$.PostEventCall);
  dart.addTypeCaches(provider$.PostEventCall);
  dart.setLibraryUri(provider$.PostEventCall, I[5]);
  dart.setFieldSignature(provider$.PostEventCall, () => ({
    __proto__: dart.getFields(provider$.PostEventCall.__proto__),
    eventKind: dart.finalFieldType(core.String),
    event: dart.finalFieldType(core.Map$(dart.nullable(core.Object), dart.nullable(core.Object)))
  }));
  var logs = dart.privateName(provider$, "PostEventSpy.logs");
  var _postEvent = dart.privateName(provider$, "_postEvent");
  provider$.PostEventSpy = class PostEventSpy extends core.Object {
    get logs() {
      return this[logs];
    }
    set logs(value) {
      super.logs = value;
    }
    static ['_#_#tearOff']() {
      return new provider$.PostEventSpy.__();
    }
    dispose() {
      if (!dart.equals(provider$._debugPostEventOverride, dart.bind(this, _postEvent))) dart.assertFailed("disposed a spy different from the current spy", I[13], 43, 7, "_debugPostEventOverride == _postEvent");
      provider$._debugPostEventOverride = null;
    }
    [_postEvent](eventKind, event) {
      this.logs[$add](new provider$.PostEventCall.__(eventKind, event));
    }
  };
  (provider$.PostEventSpy.__ = function() {
    this[logs] = T$.JSArrayOfPostEventCall().of([]);
    ;
  }).prototype = provider$.PostEventSpy.prototype;
  dart.addTypeTests(provider$.PostEventSpy);
  dart.addTypeCaches(provider$.PostEventSpy);
  dart.setMethodSignature(provider$.PostEventSpy, () => ({
    __proto__: dart.getMethods(provider$.PostEventSpy.__proto__),
    dispose: dart.fnType(dart.void, []),
    [_postEvent]: dart.fnType(dart.void, [core.String, core.Map$(dart.nullable(core.Object), dart.nullable(core.Object))])
  }));
  dart.setLibraryUri(provider$.PostEventSpy, I[5]);
  dart.setFieldSignature(provider$.PostEventSpy, () => ({
    __proto__: dart.getFields(provider$.PostEventSpy.__proto__),
    logs: dart.finalFieldType(core.List$(provider$.PostEventCall))
  }));
  var id$ = dart.privateName(provider$, "ProviderNode.id");
  var type$ = dart.privateName(provider$, "ProviderNode.type");
  var childrenNodeIds$ = dart.privateName(provider$, "ProviderNode.childrenNodeIds");
  var _element = dart.privateName(provider$, "ProviderNode._element");
  var _element$ = dart.privateName(provider$, "_element");
  var _delegateState = dart.privateName(provider$, "_delegateState");
  provider$.ProviderNode = class ProviderNode extends core.Object {
    get id() {
      return this[id$];
    }
    set id(value) {
      super.id = value;
    }
    get type() {
      return this[type$];
    }
    set type(value) {
      super.type = value;
    }
    get childrenNodeIds() {
      return this[childrenNodeIds$];
    }
    set childrenNodeIds(value) {
      super.childrenNodeIds = value;
    }
    get [_element$]() {
      return this[_element];
    }
    set [_element$](value) {
      super[_element$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let childrenNodeIds = opts && 'childrenNodeIds' in opts ? opts.childrenNodeIds : null;
      let type = opts && 'type' in opts ? opts.type : null;
      let element = opts && 'element' in opts ? opts.element : null;
      return new provider$.ProviderNode.new({id: id, childrenNodeIds: childrenNodeIds, type: type, element: element});
    }
    get value() {
      return this[_element$][_delegateState].value;
    }
  };
  (provider$.ProviderNode.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let childrenNodeIds = opts && 'childrenNodeIds' in opts ? opts.childrenNodeIds : null;
    let type = opts && 'type' in opts ? opts.type : null;
    let element = opts && 'element' in opts ? opts.element : null;
    this[id$] = id;
    this[childrenNodeIds$] = childrenNodeIds;
    this[type$] = type;
    this[_element] = element;
    ;
  }).prototype = provider$.ProviderNode.prototype;
  dart.addTypeTests(provider$.ProviderNode);
  dart.addTypeCaches(provider$.ProviderNode);
  dart.setGetterSignature(provider$.ProviderNode, () => ({
    __proto__: dart.getGetters(provider$.ProviderNode.__proto__),
    value: dart.nullable(core.Object)
  }));
  dart.setLibraryUri(provider$.ProviderNode, I[5]);
  dart.setFieldSignature(provider$.ProviderNode, () => ({
    __proto__: dart.getFields(provider$.ProviderNode.__proto__),
    id: dart.finalFieldType(core.String),
    type: dart.finalFieldType(core.String),
    childrenNodeIds: dart.finalFieldType(core.List$(core.String)),
    [_element$]: dart.finalFieldType(provider$._InheritedProviderScopeElement$(dart.nullable(core.Object)))
  }));
  var _providerDetails = dart.privateName(provider$, "_providerDetails");
  provider$.ProviderBinding = class ProviderBinding extends core.Object {
    static ['_#_#tearOff']() {
      return new provider$.ProviderBinding.__();
    }
    get providerDetails() {
      return this[_providerDetails];
    }
    set providerDetails(value) {
      provider$.debugPostEvent("provider:provider_list_changed", new _js_helper.LinkedMap.new());
      this[_providerDetails] = value;
    }
    providerDidChange(providerId) {
      provider$.debugPostEvent("provider:provider_changed", new _js_helper.LinkedMap.from(["id", providerId]));
    }
  };
  (provider$.ProviderBinding.__ = function() {
    this[_providerDetails] = new (T$.IdentityMapOfString$ProviderNode()).new();
    ;
  }).prototype = provider$.ProviderBinding.prototype;
  dart.addTypeTests(provider$.ProviderBinding);
  dart.addTypeCaches(provider$.ProviderBinding);
  dart.setMethodSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getMethods(provider$.ProviderBinding.__proto__),
    providerDidChange: dart.fnType(dart.void, [core.String])
  }));
  dart.setGetterSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getGetters(provider$.ProviderBinding.__proto__),
    providerDetails: core.Map$(core.String, provider$.ProviderNode)
  }));
  dart.setSetterSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getSetters(provider$.ProviderBinding.__proto__),
    providerDetails: core.Map$(core.String, provider$.ProviderNode)
  }));
  dart.setLibraryUri(provider$.ProviderBinding, I[5]);
  dart.setFieldSignature(provider$.ProviderBinding, () => ({
    __proto__: dart.getFields(provider$.ProviderBinding.__proto__),
    [_providerDetails]: dart.fieldType(core.Map$(core.String, provider$.ProviderNode))
  }));
  dart.setStaticFieldSignature(provider$.ProviderBinding, () => ['debugInstance']);
  dart.defineLazy(provider$.ProviderBinding, {
    /*provider$.ProviderBinding.debugInstance*/get debugInstance() {
      return new provider$.ProviderBinding.__();
    }
  }, false);
  var _parent = dart.privateName(nested, "_parent");
  var _parent$ = dart.privateName(nested, "SingleChildWidgetElementMixin._parent");
  nested.SingleChildWidgetElementMixin = class SingleChildWidgetElementMixin extends framework.Element {};
  nested.SingleChildWidgetElementMixin[dart.mixinOn] = Element => class SingleChildWidgetElementMixin extends Element {
    get [_parent]() {
      return this[_parent$];
    }
    set [_parent](value) {
      this[_parent$] = value;
    }
    mount(parent, newSlot) {
      if (T$._NestedHookElementN().is(parent)) {
        this[_parent] = parent;
      }
      super.mount(parent, newSlot);
    }
    activate() {
      super.activate();
      this.visitAncestorElements(dart.fn(parent => {
        if (nested._NestedHookElement.is(parent)) {
          this[_parent] = parent;
        }
        return false;
      }, T$.ElementTobool()));
    }
  };
  (nested.SingleChildWidgetElementMixin[dart.mixinNew] = function() {
    this[_parent$] = null;
  }).prototype = nested.SingleChildWidgetElementMixin.prototype;
  dart.addTypeTests(nested.SingleChildWidgetElementMixin);
  dart.addTypeCaches(nested.SingleChildWidgetElementMixin);
  nested.SingleChildWidgetElementMixin[dart.implements] = () => [framework.Element];
  dart.setMethodSignature(nested.SingleChildWidgetElementMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildWidgetElementMixin.__proto__),
    mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic])
  }));
  dart.setLibraryUri(nested.SingleChildWidgetElementMixin, I[4]);
  dart.setFieldSignature(nested.SingleChildWidgetElementMixin, () => ({
    __proto__: dart.getFields(nested.SingleChildWidgetElementMixin.__proto__),
    [_parent]: dart.fieldType(dart.nullable(nested._NestedHookElement))
  }));
  const StatelessElement_SingleChildWidgetElementMixin$36 = class StatelessElement_SingleChildWidgetElementMixin extends framework.StatelessElement {};
  (StatelessElement_SingleChildWidgetElementMixin$36.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatelessElement_SingleChildWidgetElementMixin$36.__proto__.new.call(this, widget);
  }).prototype = StatelessElement_SingleChildWidgetElementMixin$36.prototype;
  dart.applyMixin(StatelessElement_SingleChildWidgetElementMixin$36, nested.SingleChildWidgetElementMixin);
  nested.SingleChildStatelessElement = class SingleChildStatelessElement extends StatelessElement_SingleChildWidgetElementMixin$36 {
    static ['_#new#tearOff'](widget) {
      return new nested.SingleChildStatelessElement.new(widget);
    }
    build() {
      if (this[_parent] != null) {
        return this.widget.buildWithChild(this, dart.nullCheck(this[_parent]).injectedChild);
      }
      return super.build();
    }
    get widget() {
      return nested.SingleChildStatelessWidget.as(super.widget);
    }
  };
  (nested.SingleChildStatelessElement.new = function(widget) {
    nested.SingleChildStatelessElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested.SingleChildStatelessElement.prototype;
  dart.addTypeTests(nested.SingleChildStatelessElement);
  dart.addTypeCaches(nested.SingleChildStatelessElement);
  dart.setGetterSignature(nested.SingleChildStatelessElement, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatelessElement.__proto__),
    widget: nested.SingleChildStatelessWidget
  }));
  dart.setLibraryUri(nested.SingleChildStatelessElement, I[4]);
  const _is__InheritedProviderElement_default = Symbol('_is__InheritedProviderElement_default');
  provider$._InheritedProviderElement$ = dart.generic(T => {
    class _InheritedProviderElement extends nested.SingleChildStatelessElement {
      static ['_#new#tearOff'](T, widget) {
        return new (provider$._InheritedProviderElement$(T)).new(widget);
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this.visitChildren(dart.fn(e => e.debugFillProperties(properties), T$.ElementTovoid()));
      }
    }
    (_InheritedProviderElement.new = function(widget) {
      _InheritedProviderElement.__proto__.new.call(this, widget);
      ;
    }).prototype = _InheritedProviderElement.prototype;
    dart.addTypeTests(_InheritedProviderElement);
    _InheritedProviderElement.prototype[_is__InheritedProviderElement_default] = true;
    dart.addTypeCaches(_InheritedProviderElement);
    dart.setLibraryUri(_InheritedProviderElement, I[5]);
    return _InheritedProviderElement;
  });
  provider$._InheritedProviderElement = provider$._InheritedProviderElement$();
  dart.addTypeTests(provider$._InheritedProviderElement, _is__InheritedProviderElement_default);
  const _is_InheritedContext_default = Symbol('_is_InheritedContext_default');
  provider$.InheritedContext$ = dart.generic(T => {
    class InheritedContext extends framework.BuildContext {}
    (InheritedContext.new = function() {
      ;
    }).prototype = InheritedContext.prototype;
    dart.addTypeTests(InheritedContext);
    InheritedContext.prototype[_is_InheritedContext_default] = true;
    dart.addTypeCaches(InheritedContext);
    dart.setLibraryUri(InheritedContext, I[5]);
    return InheritedContext;
  });
  provider$.InheritedContext = provider$.InheritedContext$();
  dart.addTypeTests(provider$.InheritedContext, _is_InheritedContext_default);
  var owner$ = dart.privateName(provider$, "_InheritedProviderScope.owner");
  var debugType$ = dart.privateName(provider$, "_InheritedProviderScope.debugType");
  const _is__InheritedProviderScope_default = Symbol('_is__InheritedProviderScope_default');
  provider$._InheritedProviderScope$ = dart.generic(T => {
    var __t$_InheritedProviderScopeElementOfT = () => (__t$_InheritedProviderScopeElementOfT = dart.constFn(provider$._InheritedProviderScopeElement$(T)))();
    class _InheritedProviderScope extends framework.InheritedWidget {
      get owner() {
        return this[owner$];
      }
      set owner(value) {
        super.owner = value;
      }
      get debugType() {
        return this[debugType$];
      }
      set debugType(value) {
        super.debugType = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let owner = opts && 'owner' in opts ? opts.owner : null;
        let debugType = opts && 'debugType' in opts ? opts.debugType : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (provider$._InheritedProviderScope$(T)).new({owner: owner, debugType: debugType, child: child});
      }
      updateShouldNotify(oldWidget) {
        framework.InheritedWidget.as(oldWidget);
        return false;
      }
      createElement() {
        return new (__t$_InheritedProviderScopeElementOfT()).new(this);
      }
    }
    (_InheritedProviderScope.new = function(opts) {
      let owner = opts && 'owner' in opts ? opts.owner : null;
      let debugType = opts && 'debugType' in opts ? opts.debugType : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[owner$] = owner;
      this[debugType$] = debugType;
      if (!T.is(null)) dart.assertFailed(null, I[3], 341, 16, "null is T");
      _InheritedProviderScope.__proto__.new.call(this, {child: child});
      ;
    }).prototype = _InheritedProviderScope.prototype;
    dart.addTypeTests(_InheritedProviderScope);
    _InheritedProviderScope.prototype[_is__InheritedProviderScope_default] = true;
    dart.addTypeCaches(_InheritedProviderScope);
    dart.setMethodSignature(_InheritedProviderScope, () => ({
      __proto__: dart.getMethods(_InheritedProviderScope.__proto__),
      updateShouldNotify: dart.fnType(core.bool, [dart.nullable(core.Object)]),
      createElement: dart.fnType(provider$._InheritedProviderScopeElement$(T), [])
    }));
    dart.setLibraryUri(_InheritedProviderScope, I[5]);
    dart.setFieldSignature(_InheritedProviderScope, () => ({
      __proto__: dart.getFields(_InheritedProviderScope.__proto__),
      owner: dart.finalFieldType(provider$.InheritedProvider$(T)),
      debugType: dart.finalFieldType(core.String)
    }));
    return _InheritedProviderScope;
  });
  provider$._InheritedProviderScope = provider$._InheritedProviderScope$();
  dart.addTypeTests(provider$._InheritedProviderScope, _is__InheritedProviderScope_default);
  const _is__Dependency_default = Symbol('_is__Dependency_default');
  provider$._Dependency$ = dart.generic(T => {
    var __t$TTobool = () => (__t$TTobool = dart.constFn(dart.fnType(core.bool, [T])))();
    var __t$JSArrayOfTTobool = () => (__t$JSArrayOfTTobool = dart.constFn(_interceptors.JSArray$(__t$TTobool())))();
    class _Dependency extends core.Object {
      static ['_#new#tearOff'](T) {
        return new (provider$._Dependency$(T)).new();
      }
    }
    (_Dependency.new = function() {
      this.shouldClearSelectors = false;
      this.shouldClearMutationScheduled = false;
      this.selectors = __t$JSArrayOfTTobool().of([]);
      ;
    }).prototype = _Dependency.prototype;
    dart.addTypeTests(_Dependency);
    _Dependency.prototype[_is__Dependency_default] = true;
    dart.addTypeCaches(_Dependency);
    dart.setLibraryUri(_Dependency, I[5]);
    dart.setFieldSignature(_Dependency, () => ({
      __proto__: dart.getFields(_Dependency.__proto__),
      shouldClearSelectors: dart.fieldType(core.bool),
      shouldClearMutationScheduled: dart.fieldType(core.bool),
      selectors: dart.finalFieldType(core.List$(dart.fnType(core.bool, [T])))
    }));
    return _Dependency;
  });
  provider$._Dependency = provider$._Dependency$();
  dart.addTypeTests(provider$._Dependency, _is__Dependency_default);
  var _shouldNotifyDependents = dart.privateName(provider$, "_shouldNotifyDependents");
  var _debugInheritLocked = dart.privateName(provider$, "_debugInheritLocked");
  var _updatedShouldNotify = dart.privateName(provider$, "_updatedShouldNotify");
  var _isBuildFromExternalSources = dart.privateName(provider$, "_isBuildFromExternalSources");
  var ___InheritedProviderScopeElement__delegateState = dart.privateName(provider$, "_#_InheritedProviderScopeElement#_delegateState");
  var ___InheritedProviderScopeElement__debugId = dart.privateName(provider$, "_#_InheritedProviderScopeElement#_debugId");
  var _debugId = dart.privateName(provider$, "_debugId");
  const _is__InheritedProviderScopeElement_default = Symbol('_is__InheritedProviderScopeElement_default');
  provider$._InheritedProviderScopeElement$ = dart.generic(T => {
    var __t$_InheritedProviderScopeOfT = () => (__t$_InheritedProviderScopeOfT = dart.constFn(provider$._InheritedProviderScope$(T)))();
    var __t$_DependencyOfT = () => (__t$_DependencyOfT = dart.constFn(provider$._Dependency$(T)))();
    var __t$TTobool = () => (__t$TTobool = dart.constFn(dart.fnType(core.bool, [T])))();
    var __t$ListOfTTobool = () => (__t$ListOfTTobool = dart.constFn(core.List$(__t$TTobool())))();
    class _InheritedProviderScopeElement extends framework.InheritedElement {
      static ['_#new#tearOff'](T, widget) {
        return new (provider$._InheritedProviderScopeElement$(T)).new(widget);
      }
      get [_delegateState]() {
        let t1, t1$, t0;
        t0 = this[___InheritedProviderScopeElement__delegateState];
        return t0 == null ? (t1$ = (t1 = this.widget.owner[_delegate].createState(), (() => {
          t1.element = this;
          return t1;
        })()), this[___InheritedProviderScopeElement__delegateState] == null ? this[___InheritedProviderScopeElement__delegateState] = t1$ : dart.throw(new _internal.LateError.fieldADI("_delegateState"))) : t0;
      }
      get [_debugId]() {
        let t0;
        t0 = this[___InheritedProviderScopeElement__debugId];
        return t0 == null ? dart.throw(new _internal.LateError.fieldNI("_debugId")) : t0;
      }
      set [_debugId](_debugId$35param) {
        this[___InheritedProviderScopeElement__debugId] = _debugId$35param;
      }
      getElementForInheritedWidgetOfExactType(InheritedWidgetType) {
        let inheritedElement = null;
        this.visitAncestorElements(dart.fn(parent => {
          inheritedElement = parent.getElementForInheritedWidgetOfExactType(InheritedWidgetType);
          return false;
        }, T$.ElementTobool()));
        return inheritedElement;
      }
      mount(parent, newSlot) {
        let t0;
        {
          this[_debugId] = dart.str((t0 = provider$._InheritedProviderScopeElement._nextProviderId, provider$._InheritedProviderScopeElement._nextProviderId = t0 + 1, t0));
          provider$.ProviderBinding.debugInstance.providerDetails = (() => {
            let t0 = T$.LinkedHashMapOfString$ProviderNode().of(provider$.ProviderBinding.debugInstance.providerDetails);
            t0[$_set](this[_debugId], new provider$.ProviderNode.new({id: this[_debugId], childrenNodeIds: C[3] || CT.C3, type: this.widget.debugType, element: this}));
            return t0;
          })();
        }
        super.mount(parent, newSlot);
      }
      get widget() {
        return __t$_InheritedProviderScopeOfT().as(super.widget);
      }
      reassemble() {
        super.reassemble();
        let value = this[_delegateState].hasValue ? this[_delegateState].value : null;
        if (reassemble_handler.ReassembleHandler.is(value)) {
          value.reassemble();
        }
      }
      updateDependencies(dependent, aspect) {
        let t1;
        let dependencies = this.getDependencies(dependent);
        if (dependencies != null && !__t$_DependencyOfT().is(dependencies)) {
          return;
        }
        if (__t$TTobool().is(aspect)) {
          let selectorDependency = __t$_DependencyOfT().as((t1 = dependencies, t1 == null ? new (__t$_DependencyOfT()).new() : t1));
          if (selectorDependency.shouldClearSelectors) {
            selectorDependency.shouldClearSelectors = false;
            __t$ListOfTTobool().as(selectorDependency.selectors)[$clear]();
          }
          if (selectorDependency.shouldClearMutationScheduled === false) {
            selectorDependency.shouldClearMutationScheduled = true;
            T$.FutureOfNull().microtask(dart.fn(() => {
              let t1;
              t1 = selectorDependency;
              (() => {
                t1.shouldClearMutationScheduled = false;
                t1.shouldClearSelectors = true;
                return t1;
              })();
            }, T$.VoidToNull()));
          }
          __t$ListOfTTobool().as(selectorDependency.selectors)[$add](aspect);
          this.setDependencies(dependent, selectorDependency);
        } else {
          this.setDependencies(dependent, C[4] || CT.C4);
        }
      }
      notifyDependent(oldWidget, dependent) {
        framework.InheritedWidget.as(oldWidget);
        let dependencies = this.getDependencies(dependent);
        {
          provider$.ProviderBinding.debugInstance.providerDidChange(this[_debugId]);
        }
        let shouldNotify = false;
        if (dependencies != null) {
          if (__t$_DependencyOfT().is(dependencies)) {
            if (dependent.dirty) {
              return;
            }
            for (let updateShouldNotify of __t$ListOfTTobool().as(dependencies.selectors)) {
              try {
                if (!dart.fn(() => {
                  provider$._debugIsSelecting = true;
                  return true;
                }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 480, 20, "() {\n              _debugIsSelecting = true;\n              return true;\n            }()");
                shouldNotify = updateShouldNotify(this.value);
              } finally {
                if (!dart.fn(() => {
                  provider$._debugIsSelecting = false;
                  return true;
                }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 486, 20, "() {\n              _debugIsSelecting = false;\n              return true;\n            }()");
              }
              if (shouldNotify) {
                break;
              }
            }
          } else {
            shouldNotify = true;
          }
        }
        if (shouldNotify) {
          dependent.didChangeDependencies();
        }
      }
      update(newWidget) {
        __t$_InheritedProviderScopeOfT().as(newWidget);
        if (!dart.fn(() => {
          if (!this.widget.owner[_delegate][$runtimeType]._equals(newWidget.owner[_delegate][$runtimeType])) {
            dart.throw(new core.StateError.new("Rebuilt " + dart.str(this.widget) + " using a different constructor.\n      \nThis is likely a mistake and is unsupported.\nIf you're in this situation, consider passing a `key` unique to each individual constructor.\n"));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 507, 12, "() {\n      if (widget.owner._delegate.runtimeType !=\n          newWidget.owner._delegate.runtimeType) {\n        throw StateError('''\nRebuilt $widget using a different constructor.\n      \nThis is likely a mistake and is unsupported.\nIf you're in this situation, consider passing a `key` unique to each individual constructor.\n''');\n      }\n      return true;\n    }()");
        this[_isBuildFromExternalSources] = true;
        this[_updatedShouldNotify] = this[_delegateState].willUpdateDelegate(newWidget.owner[_delegate]);
        super.update(newWidget);
        this[_updatedShouldNotify] = false;
      }
      updated(oldWidget) {
        framework.InheritedWidget.as(oldWidget);
        super.updated(oldWidget);
        if (this[_updatedShouldNotify]) {
          this.notifyClients(oldWidget);
        }
      }
      didChangeDependencies() {
        this[_isBuildFromExternalSources] = true;
        super.didChangeDependencies();
      }
      build() {
        if (this.widget.owner[_lazy] === false) {
          this.value;
        }
        this[_delegateState].build({isBuildFromExternalSources: this[_isBuildFromExternalSources]});
        this[_isBuildFromExternalSources] = false;
        if (this[_shouldNotifyDependents]) {
          this[_shouldNotifyDependents] = false;
          this.notifyClients(this.widget);
        }
        return super.build();
      }
      unmount() {
        let t2;
        this[_delegateState].dispose();
        {
          provider$.ProviderBinding.debugInstance.providerDetails = (t2 = (() => {
            let t1 = T$.LinkedHashMapOfString$ProviderNode().of(provider$.ProviderBinding.debugInstance.providerDetails);
            return t1;
          })(), (() => {
            t2[$remove](this[_debugId]);
            return t2;
          })());
        }
        super.unmount();
      }
      get hasValue() {
        return this[_delegateState].hasValue;
      }
      markNeedsNotifyDependents() {
        if (!this[_isNotifyDependentsEnabled]) {
          return;
        }
        this.markNeedsBuild();
        this[_shouldNotifyDependents] = true;
      }
      [_debugSetInheritedLock](value) {
        if (!dart.fn(() => {
          this[_debugInheritLocked] = value;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 582, 12, "() {\n      _debugInheritLocked = value;\n      return true;\n    }()");
        return true;
      }
      get value() {
        return this[_delegateState].value;
      }
      dependOnInheritedElement(ancestor, opts) {
        let aspect = opts && 'aspect' in opts ? opts.aspect : null;
        if (!dart.fn(() => {
          if (this[_debugInheritLocked]) {
            dart.throw(new assertions.FlutterError.fromParts(T$.JSArrayOfDiagnosticsNode().of([new assertions.ErrorSummary.new("Tried to listen to an InheritedWidget " + "in a life-cycle that will never be called again."), new assertions.ErrorDescription.new("This error typically happens when calling Provider.of with `listen` to `true`,\nin a situation where listening to the provider doesn't make sense, such as:\n- initState of a StatefulWidget\n- the \"create\" callback of a provider\n\nThis is undesired because these life-cycles are called only once in the\nlifetime of a widget. As such, while `listen` is `true`, the widget has\nno mean to handle the update scenario.\n\nTo fix, consider:\n- passing `listen: false` to `Provider.of`\n- use a life-cycle that handles updates (like didChangeDependencies)\n- use a provider that handles updates (like ProxyProvider).\n")])));
          }
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 597, 12, "() {\n      if (_debugInheritLocked) {\n        throw FlutterError.fromParts(\n          <DiagnosticsNode>[\n            ErrorSummary(\n              'Tried to listen to an InheritedWidget '\n              'in a life-cycle that will never be called again.',\n            ),\n            ErrorDescription('''\nThis error typically happens when calling Provider.of with `listen` to `true`,\nin a situation where listening to the provider doesn't make sense, such as:\n- initState of a StatefulWidget\n- the \"create\" callback of a provider\n\nThis is undesired because these life-cycles are called only once in the\nlifetime of a widget. As such, while `listen` is `true`, the widget has\nno mean to handle the update scenario.\n\nTo fix, consider:\n- passing `listen: false` to `Provider.of`\n- use a life-cycle that handles updates (like didChangeDependencies)\n- use a provider that handles updates (like ProxyProvider).\n'''),\n          ],\n        );\n      }\n      return true;\n    }()");
        return super.dependOnInheritedElement(ancestor, {aspect: aspect});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        this[_delegateState].debugFillProperties(properties);
      }
    }
    (_InheritedProviderScopeElement.new = function(widget) {
      this[_shouldNotifyDependents] = false;
      this[_debugInheritLocked] = false;
      this[_isNotifyDependentsEnabled] = true;
      this[_updatedShouldNotify] = false;
      this[_isBuildFromExternalSources] = false;
      this[___InheritedProviderScopeElement__delegateState] = null;
      this[___InheritedProviderScopeElement__debugId] = null;
      _InheritedProviderScopeElement.__proto__.new.call(this, widget);
      ;
    }).prototype = _InheritedProviderScopeElement.prototype;
    dart.addTypeTests(_InheritedProviderScopeElement);
    _InheritedProviderScopeElement.prototype[_is__InheritedProviderScopeElement_default] = true;
    dart.addTypeCaches(_InheritedProviderScopeElement);
    _InheritedProviderScopeElement[dart.implements] = () => [provider$.InheritedContext$(T)];
    dart.setMethodSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getMethods(_InheritedProviderScopeElement.__proto__),
      mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic]),
      markNeedsNotifyDependents: dart.fnType(dart.void, []),
      [_debugSetInheritedLock]: dart.fnType(core.bool, [core.bool])
    }));
    dart.setGetterSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getGetters(_InheritedProviderScopeElement.__proto__),
      [_delegateState]: provider$._DelegateState$(T, provider$._Delegate$(T)),
      [_debugId]: core.String,
      widget: provider$._InheritedProviderScope$(T),
      hasValue: core.bool,
      value: T
    }));
    dart.setSetterSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getSetters(_InheritedProviderScopeElement.__proto__),
      [_debugId]: core.String
    }));
    dart.setLibraryUri(_InheritedProviderScopeElement, I[5]);
    dart.setFieldSignature(_InheritedProviderScopeElement, () => ({
      __proto__: dart.getFields(_InheritedProviderScopeElement.__proto__),
      [_shouldNotifyDependents]: dart.fieldType(core.bool),
      [_debugInheritLocked]: dart.fieldType(core.bool),
      [_isNotifyDependentsEnabled]: dart.fieldType(core.bool),
      [_updatedShouldNotify]: dart.fieldType(core.bool),
      [_isBuildFromExternalSources]: dart.fieldType(core.bool),
      [___InheritedProviderScopeElement__delegateState]: dart.fieldType(dart.nullable(provider$._DelegateState$(T, provider$._Delegate$(T)))),
      [___InheritedProviderScopeElement__debugId]: dart.fieldType(dart.nullable(core.String))
    }));
    dart.setStaticFieldSignature(_InheritedProviderScopeElement, () => ['_nextProviderId']);
    return _InheritedProviderScopeElement;
  });
  provider$._InheritedProviderScopeElement = provider$._InheritedProviderScopeElement$();
  dart.defineLazy(provider$._InheritedProviderScopeElement, {
    /*provider$._InheritedProviderScopeElement._nextProviderId*/get _nextProviderId() {
      return 0;
    },
    set _nextProviderId(value) {}
  }, false);
  dart.addTypeTests(provider$._InheritedProviderScopeElement, _is__InheritedProviderScopeElement_default);
  var _updateShouldNotify = dart.privateName(provider$, "_updateShouldNotify");
  const _is__CreateInheritedProvider_default = Symbol('_is__CreateInheritedProvider_default');
  provider$._CreateInheritedProvider$ = dart.generic(T => {
    var __t$_CreateInheritedProviderStateOfT = () => (__t$_CreateInheritedProviderStateOfT = dart.constFn(provider$._CreateInheritedProviderState$(T)))();
    class _CreateInheritedProvider extends provider$._Delegate$(T) {
      static ['_#new#tearOff'](T, opts) {
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        return new (provider$._CreateInheritedProvider$(T)).new({create: create, update: update, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: debugCheckInvalidValueType, startListening: startListening, dispose: dispose});
      }
      createState() {
        return new (__t$_CreateInheritedProviderStateOfT()).new();
      }
    }
    (_CreateInheritedProvider.new = function(opts) {
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let debugCheckInvalidValueType = opts && 'debugCheckInvalidValueType' in opts ? opts.debugCheckInvalidValueType : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      this.create = create;
      this.update = update;
      this.debugCheckInvalidValueType = debugCheckInvalidValueType;
      this.startListening = startListening;
      this.dispose = dispose;
      if (!(create != null || update != null)) dart.assertFailed(null, I[3], 674, 16, "create != null || update != null");
      this[_updateShouldNotify] = updateShouldNotify;
      ;
    }).prototype = _CreateInheritedProvider.prototype;
    dart.addTypeTests(_CreateInheritedProvider);
    _CreateInheritedProvider.prototype[_is__CreateInheritedProvider_default] = true;
    dart.addTypeCaches(_CreateInheritedProvider);
    dart.setMethodSignature(_CreateInheritedProvider, () => ({
      __proto__: dart.getMethods(_CreateInheritedProvider.__proto__),
      createState: dart.fnType(provider$._CreateInheritedProviderState$(T), [])
    }));
    dart.setLibraryUri(_CreateInheritedProvider, I[5]);
    dart.setFieldSignature(_CreateInheritedProvider, () => ({
      __proto__: dart.getFields(_CreateInheritedProvider.__proto__),
      create: dart.finalFieldType(dart.nullable(dart.fnType(T, [framework.BuildContext]))),
      update: dart.finalFieldType(dart.nullable(dart.fnType(T, [framework.BuildContext, dart.nullable(T)]))),
      [_updateShouldNotify]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T]))),
      debugCheckInvalidValueType: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [T]))),
      startListening: dart.finalFieldType(dart.nullable(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(dart.nullable(T)), T]))),
      dispose: dart.finalFieldType(dart.nullable(dart.fnType(dart.void, [framework.BuildContext, T])))
    }));
    return _CreateInheritedProvider;
  });
  provider$._CreateInheritedProvider = provider$._CreateInheritedProvider$();
  dart.addTypeTests(provider$._CreateInheritedProvider, _is__CreateInheritedProvider_default);
  var _didInitValue = dart.privateName(provider$, "_didInitValue");
  var _previousWidget = dart.privateName(provider$, "_previousWidget");
  var _initError = dart.privateName(provider$, "_initError");
  const _is__CreateInheritedProviderState_default = Symbol('_is__CreateInheritedProviderState_default');
  provider$._CreateInheritedProviderState$ = dart.generic(T => {
    var __t$TTovoid = () => (__t$TTovoid = dart.constFn(dart.fnType(dart.void, [T])))();
    var __t$TToNvoid = () => (__t$TToNvoid = dart.constFn(dart.nullable(__t$TTovoid())))();
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$BuildContextAndTNToT = () => (__t$BuildContextAndTNToT = dart.constFn(dart.fnType(T, [framework.BuildContext, __t$TN()])))();
    var __t$BuildContextAndTNToNT = () => (__t$BuildContextAndTNToNT = dart.constFn(dart.nullable(__t$BuildContextAndTNToT())))();
    var __t$InheritedContextOfTN = () => (__t$InheritedContextOfTN = dart.constFn(provider$.InheritedContext$(__t$TN())))();
    var __t$InheritedContextOfTNAndTToFn = () => (__t$InheritedContextOfTNAndTToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfTN(), T])))();
    var __t$InheritedContextOfTNAndTToNFn = () => (__t$InheritedContextOfTNAndTToNFn = dart.constFn(dart.nullable(__t$InheritedContextOfTNAndTToFn())))();
    var __t$BuildContextAndTTovoid = () => (__t$BuildContextAndTTovoid = dart.constFn(dart.fnType(dart.void, [framework.BuildContext, T])))();
    var __t$BuildContextAndTToNvoid = () => (__t$BuildContextAndTToNvoid = dart.constFn(dart.nullable(__t$BuildContextAndTTovoid())))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    class _CreateInheritedProviderState extends provider$._DelegateState$(T, provider$._CreateInheritedProvider$(T)) {
      get value() {
        let t2, t3;
        if (this[_didInitValue] && this[_initError] != null) {
          dart.throw(new core.StateError.new("Tried to read a provider that threw during the creation of its value.\n" + "The exception occurred during the creation of type " + dart.str(dart.wrapType(T)) + ".\n\n" + dart.str((t2 = this[_initError], t2 == null ? null : dart.toString(t2)))));
        }
        let _debugPreviousIsInInheritedProviderCreate = null;
        let _debugPreviousIsInInheritedProviderUpdate = null;
        if (!dart.fn(() => {
          _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
          _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 718, 12, "() {\n      _debugPreviousIsInInheritedProviderCreate =\n          debugIsInInheritedProviderCreate;\n      _debugPreviousIsInInheritedProviderUpdate =\n          debugIsInInheritedProviderUpdate;\n      return true;\n    }()");
        if (!this[_didInitValue]) {
          this[_didInitValue] = true;
          if (this.delegate.create != null) {
            if (!this.debugSetInheritedLock(true)) dart.assertFailed(null, I[3], 729, 16, "debugSetInheritedLock(true)");
            try {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = true;
                provider$.debugIsInInheritedProviderUpdate = false;
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 731, 18, "() {\n            debugIsInInheritedProviderCreate = true;\n            debugIsInInheritedProviderUpdate = false;\n            return true;\n          }()");
              this[_value] = dart.nullCheck(this.delegate.create)(dart.nullCheck(this.element));
            } catch (e$) {
              let e = dart.getThrown(e$);
              let stackTrace = dart.stackTrace(e$);
              if (core.Object.is(e)) {
                this[_initError] = new assertions.FlutterErrorDetails.new({library: "provider", exception: e, stack: stackTrace});
                dart.rethrow(e$);
              } else
                throw e$;
            } finally {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
                provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 745, 18, "() {\n            debugIsInInheritedProviderCreate =\n                _debugPreviousIsInInheritedProviderCreate!;\n            debugIsInInheritedProviderUpdate =\n                _debugPreviousIsInInheritedProviderUpdate!;\n            return true;\n          }()");
            }
            if (!this.debugSetInheritedLock(false)) dart.assertFailed(null, I[3], 753, 16, "debugSetInheritedLock(false)");
            if (!dart.fn(() => {
              let t3;
              t3 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t3 == null ? null : t3(T.as(this[_value]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 755, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
          }
          if (__t$BuildContextAndTNToNT().as(this.delegate.update) != null) {
            try {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = false;
                provider$.debugIsInInheritedProviderUpdate = true;
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 762, 18, "() {\n            debugIsInInheritedProviderCreate = false;\n            debugIsInInheritedProviderUpdate = true;\n            return true;\n          }()");
              this[_value] = dart.nullCheck(__t$BuildContextAndTNToNT().as(this.delegate.update))(dart.nullCheck(this.element), this[_value]);
            } finally {
              if (!dart.fn(() => {
                provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
                provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
                return true;
              }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 769, 18, "() {\n            debugIsInInheritedProviderCreate =\n                _debugPreviousIsInInheritedProviderCreate!;\n            debugIsInInheritedProviderUpdate =\n                _debugPreviousIsInInheritedProviderUpdate!;\n            return true;\n          }()");
            }
            if (!dart.fn(() => {
              let t3;
              t3 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t3 == null ? null : t3(T.as(this[_value]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 778, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
          }
        }
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = false;
        this[_removeListener] == null ? this[_removeListener] = (t3 = __t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening), t3 == null ? null : t3(dart.nullCheck(this.element), T.as(this[_value]))) : null;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = true;
        if (!(__t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening) == null || this[_removeListener] != null)) dart.assertFailed(null, I[3], 788, 12, "delegate.startListening == null || _removeListener != null");
        return T.as(this[_value]);
      }
      dispose() {
        let t3, t3$;
        super.dispose();
        t3 = this[_removeListener];
        t3 == null ? null : t3();
        if (this[_didInitValue]) {
          t3$ = __t$BuildContextAndTToNvoid().as(this.delegate.dispose);
          t3$ == null ? null : t3$(dart.nullCheck(this.element), T.as(this[_value]));
        }
      }
      debugFillProperties(properties) {
        let t3;
        super.debugFillProperties(properties);
        if (this[_didInitValue]) {
          t3 = properties;
          (() => {
            t3.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
            t3.add(new diagnostics.FlagProperty.new("", {value: this[_removeListener] != null, defaultValue: false, ifTrue: "listening to value"}));
            return t3;
          })();
        } else {
          properties.add(new diagnostics.FlagProperty.new("value", {value: true, showName: true, ifTrue: "<not yet loaded>"}));
        }
      }
      build(opts) {
        let t4, t3;
        let isBuildFromExternalSources = opts && 'isBuildFromExternalSources' in opts ? opts.isBuildFromExternalSources : null;
        let shouldNotify = false;
        if (isBuildFromExternalSources && this[_didInitValue] && __t$BuildContextAndTNToNT().as(this.delegate.update) != null) {
          let previousValue = this[_value];
          let _debugPreviousIsInInheritedProviderCreate = null;
          let _debugPreviousIsInInheritedProviderUpdate = null;
          if (!dart.fn(() => {
            _debugPreviousIsInInheritedProviderCreate = provider$.debugIsInInheritedProviderCreate;
            _debugPreviousIsInInheritedProviderUpdate = provider$.debugIsInInheritedProviderUpdate;
            return true;
          }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 839, 14, "() {\n        _debugPreviousIsInInheritedProviderCreate =\n            debugIsInInheritedProviderCreate;\n        _debugPreviousIsInInheritedProviderUpdate =\n            debugIsInInheritedProviderUpdate;\n        return true;\n      }()");
          try {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = false;
              provider$.debugIsInInheritedProviderUpdate = true;
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 847, 16, "() {\n          debugIsInInheritedProviderCreate = false;\n          debugIsInInheritedProviderUpdate = true;\n          return true;\n        }()");
            this[_value] = dart.nullCheck(__t$BuildContextAndTNToNT().as(this.delegate.update))(dart.nullCheck(this.element), T.as(this[_value]));
          } finally {
            if (!dart.fn(() => {
              provider$.debugIsInInheritedProviderCreate = dart.nullCheck(_debugPreviousIsInInheritedProviderCreate);
              provider$.debugIsInInheritedProviderUpdate = dart.nullCheck(_debugPreviousIsInInheritedProviderUpdate);
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 854, 16, "() {\n          debugIsInInheritedProviderCreate =\n              _debugPreviousIsInInheritedProviderCreate!;\n          debugIsInInheritedProviderUpdate =\n              _debugPreviousIsInInheritedProviderUpdate!;\n          return true;\n        }()");
          }
          if (__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]) != null) {
            shouldNotify = dart.nullCheck(__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]))(T.as(previousValue), T.as(this[_value]));
          } else {
            shouldNotify = !dart.equals(this[_value], previousValue);
          }
          if (shouldNotify) {
            if (!dart.fn(() => {
              let t3;
              t3 = __t$TToNvoid().as(this.delegate.debugCheckInvalidValueType);
              t3 == null ? null : t3(T.as(this[_value]));
              return true;
            }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 873, 16, "() {\n          delegate.debugCheckInvalidValueType?.call(_value as T);\n          return true;\n        }()");
            if (this[_removeListener] != null) {
              dart.nullCheck(this[_removeListener])();
              this[_removeListener] = null;
            }
            t3 = this[_previousWidget];
            t3 == null ? null : (t4 = __t$BuildContextAndTToNvoid().as(t3.dispose), t4 == null ? null : t4(dart.nullCheck(this.element), T.as(previousValue)));
          }
        }
        if (shouldNotify) {
          dart.nullCheck(this.element)[_shouldNotifyDependents] = true;
        }
        this[_previousWidget] = this.delegate;
        return super.build({isBuildFromExternalSources: isBuildFromExternalSources});
      }
      get hasValue() {
        return this[_didInitValue];
      }
      static ['_#new#tearOff'](T) {
        return new (provider$._CreateInheritedProviderState$(T)).new();
      }
    }
    (_CreateInheritedProviderState.new = function() {
      this[_removeListener] = null;
      this[_didInitValue] = false;
      this[_value] = null;
      this[_previousWidget] = null;
      this[_initError] = null;
      _CreateInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _CreateInheritedProviderState.prototype;
    dart.addTypeTests(_CreateInheritedProviderState);
    _CreateInheritedProviderState.prototype[_is__CreateInheritedProviderState_default] = true;
    dart.addTypeCaches(_CreateInheritedProviderState);
    dart.setGetterSignature(_CreateInheritedProviderState, () => ({
      __proto__: dart.getGetters(_CreateInheritedProviderState.__proto__),
      value: T,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_CreateInheritedProviderState, I[5]);
    dart.setFieldSignature(_CreateInheritedProviderState, () => ({
      __proto__: dart.getFields(_CreateInheritedProviderState.__proto__),
      [_removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, []))),
      [_didInitValue]: dart.fieldType(core.bool),
      [_value]: dart.fieldType(dart.nullable(T)),
      [_previousWidget]: dart.fieldType(dart.nullable(provider$._CreateInheritedProvider$(T))),
      [_initError]: dart.fieldType(dart.nullable(assertions.FlutterErrorDetails))
    }));
    return _CreateInheritedProviderState;
  });
  provider$._CreateInheritedProviderState = provider$._CreateInheritedProviderState$();
  dart.addTypeTests(provider$._CreateInheritedProviderState, _is__CreateInheritedProviderState_default);
  const _is__ValueInheritedProvider_default = Symbol('_is__ValueInheritedProvider_default');
  provider$._ValueInheritedProvider$ = dart.generic(T => {
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    var __t$_ValueInheritedProviderStateOfT = () => (__t$_ValueInheritedProviderStateOfT = dart.constFn(provider$._ValueInheritedProviderState$(T)))();
    class _ValueInheritedProvider extends provider$._Delegate$(T) {
      static ['_#new#tearOff'](T, opts) {
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let startListening = opts && 'startListening' in opts ? opts.startListening : null;
        return new (provider$._ValueInheritedProvider$(T)).new({value: value, updateShouldNotify: updateShouldNotify, startListening: startListening});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
      }
      createState() {
        return new (__t$_ValueInheritedProviderStateOfT()).new();
      }
    }
    (_ValueInheritedProvider.new = function(opts) {
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let startListening = opts && 'startListening' in opts ? opts.startListening : null;
      this.value = value;
      this.startListening = startListening;
      this[_updateShouldNotify] = updateShouldNotify;
      ;
    }).prototype = _ValueInheritedProvider.prototype;
    dart.addTypeTests(_ValueInheritedProvider);
    _ValueInheritedProvider.prototype[_is__ValueInheritedProvider_default] = true;
    dart.addTypeCaches(_ValueInheritedProvider);
    dart.setMethodSignature(_ValueInheritedProvider, () => ({
      __proto__: dart.getMethods(_ValueInheritedProvider.__proto__),
      createState: dart.fnType(provider$._ValueInheritedProviderState$(T), [])
    }));
    dart.setLibraryUri(_ValueInheritedProvider, I[5]);
    dart.setFieldSignature(_ValueInheritedProvider, () => ({
      __proto__: dart.getFields(_ValueInheritedProvider.__proto__),
      value: dart.finalFieldType(T),
      [_updateShouldNotify]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T]))),
      startListening: dart.finalFieldType(dart.nullable(dart.fnType(dart.fnType(dart.void, []), [provider$.InheritedContext$(dart.nullable(T)), T])))
    }));
    return _ValueInheritedProvider;
  });
  provider$._ValueInheritedProvider = provider$._ValueInheritedProvider$();
  dart.addTypeTests(provider$._ValueInheritedProvider, _is__ValueInheritedProvider_default);
  const _is__ValueInheritedProviderState_default = Symbol('_is__ValueInheritedProviderState_default');
  provider$._ValueInheritedProviderState$ = dart.generic(T => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$InheritedContextOfTN = () => (__t$InheritedContextOfTN = dart.constFn(provider$.InheritedContext$(__t$TN())))();
    var __t$InheritedContextOfTNAndTToFn = () => (__t$InheritedContextOfTNAndTToFn = dart.constFn(dart.fnType(T$.VoidTovoid(), [__t$InheritedContextOfTN(), T])))();
    var __t$InheritedContextOfTNAndTToNFn = () => (__t$InheritedContextOfTNAndTToNFn = dart.constFn(dart.nullable(__t$InheritedContextOfTNAndTToFn())))();
    var __t$_ValueInheritedProviderOfT = () => (__t$_ValueInheritedProviderOfT = dart.constFn(provider$._ValueInheritedProvider$(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    class _ValueInheritedProviderState extends provider$._DelegateState$(T, provider$._ValueInheritedProvider$(T)) {
      get value() {
        let t3;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = false;
        this[_removeListener] == null ? this[_removeListener] = (t3 = __t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening), t3 == null ? null : t3(dart.nullCheck(this.element), this.delegate.value)) : null;
        dart.nullCheck(this.element)[_isNotifyDependentsEnabled] = true;
        if (!(__t$InheritedContextOfTNAndTToNFn().as(this.delegate.startListening) == null || this[_removeListener] != null)) dart.assertFailed(null, I[3], 928, 12, "delegate.startListening == null || _removeListener != null");
        return this.delegate.value;
      }
      willUpdateDelegate(newDelegate) {
        __t$_ValueInheritedProviderOfT().as(newDelegate);
        let shouldNotify = null;
        if (__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]) != null) {
          shouldNotify = dart.nullCheck(__t$TAndTToNbool().as(this.delegate[_updateShouldNotify]))(this.delegate.value, newDelegate.value);
        } else {
          shouldNotify = !dart.equals(newDelegate.value, this.delegate.value);
        }
        if (shouldNotify && this[_removeListener] != null) {
          dart.nullCheck(this[_removeListener])();
          this[_removeListener] = null;
        }
        return shouldNotify;
      }
      dispose() {
        let t3;
        super.dispose();
        t3 = this[_removeListener];
        t3 == null ? null : t3();
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new diagnostics.FlagProperty.new("", {value: this[_removeListener] != null, defaultValue: false, ifTrue: "listening to value"}));
      }
      get hasValue() {
        return true;
      }
      static ['_#new#tearOff'](T) {
        return new (provider$._ValueInheritedProviderState$(T)).new();
      }
    }
    (_ValueInheritedProviderState.new = function() {
      this[_removeListener] = null;
      _ValueInheritedProviderState.__proto__.new.call(this);
      ;
    }).prototype = _ValueInheritedProviderState.prototype;
    dart.addTypeTests(_ValueInheritedProviderState);
    _ValueInheritedProviderState.prototype[_is__ValueInheritedProviderState_default] = true;
    dart.addTypeCaches(_ValueInheritedProviderState);
    dart.setGetterSignature(_ValueInheritedProviderState, () => ({
      __proto__: dart.getGetters(_ValueInheritedProviderState.__proto__),
      value: T,
      hasValue: core.bool
    }));
    dart.setLibraryUri(_ValueInheritedProviderState, I[5]);
    dart.setFieldSignature(_ValueInheritedProviderState, () => ({
      __proto__: dart.getFields(_ValueInheritedProviderState.__proto__),
      [_removeListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [])))
    }));
    return _ValueInheritedProviderState;
  });
  provider$._ValueInheritedProviderState = provider$._ValueInheritedProviderState$();
  dart.addTypeTests(provider$._ValueInheritedProviderState, _is__ValueInheritedProviderState_default);
  var DeepCollectionEquality__unordered = dart.privateName(equality, "DeepCollectionEquality._unordered");
  var DeepCollectionEquality__base = dart.privateName(equality, "DeepCollectionEquality._base");
  provider$.debugPostEvent = function debugPostEvent(eventKind, event = C[5] || CT.C5) {
    if (provider$._debugPostEventOverride != null) {
      dart.nullCheck(provider$._debugPostEventOverride)(eventKind, event);
    } else {
      developer.postEvent(eventKind, event);
    }
  };
  provider$.spyPostEvent = function spyPostEvent() {
    if (!(provider$._debugPostEventOverride == null)) dart.assertFailed("postEvent is already spied", I[13], 22, 10, "_debugPostEventOverride == null");
    let spy = new provider$.PostEventSpy.__();
    provider$._debugPostEventOverride = dart.bind(spy, _postEvent);
    return spy;
  };
  provider$['SelectContext|select'] = function SelectContext$124select(T, R, $this, selector) {
    let t4;
    if (!!sliver.SliverWithKeepAliveWidget.is($this.widget)) dart.assertFailed("    Tried to use context.select inside a SliverList/SliderGridView.\n\n    This is likely a mistake, as instead of rebuilding only the item that cares\n    about the selected value, this would rebuild the entire list/grid.\n\n    To fix, add a `Builder` or extract the content of `itemBuilder` in a separate widget:\n\n    ```dart\n    ListView.builder(\n      itemBuilder: (context, index) {\n        return Builder(builder: (context) {\n          final todo = context.select((TodoList list) => list[index]);\n          return Text(todo.name);\n        });\n      },\n    );\n    ```\n    ", I[3], 247, 12, "widget is! SliverWithKeepAliveWidget");
    if (!(layout_builder.LayoutBuilder.is($this.widget) || $this.debugDoingBuild)) dart.assertFailed("Tried to use `context.select` outside of the `build` method of a widget.\n\nAny usage other than inside the `build` method of a widget are not supported.\n", I[3], 266, 12, "widget is LayoutBuilder || debugDoingBuild");
    let inheritedElement = provider$.Provider._inheritedElementOf(T, $this);
    try {
      let value = (t4 = inheritedElement, t4 == null ? null : t4.value);
      if (!T.is(value)) {
        dart.throw(new provider$.ProviderNullException.new(dart.wrapType(T), $this.widget[$runtimeType]));
      }
      if (!dart.fn(() => {
        provider$._debugIsSelecting = true;
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 279, 14, "() {\n        _debugIsSelecting = true;\n        return true;\n      }()");
      let selected = selector(value);
      if (inheritedElement != null) {
        $this.dependOnInheritedElement(inheritedElement, {aspect: dart.fn(newValue => {
            if (!T.is(newValue)) {
              dart.throw(new provider$.ProviderNullException.new(dart.wrapType(T), $this.widget[$runtimeType]));
            }
            return !(C[6] || CT.C6).equals(selector(newValue), selected);
          }, dart.fnType(core.bool, [dart.nullable(T)]))});
      } else {
        $this.dependOnInheritedWidgetOfExactType(provider$._InheritedProviderScope$(dart.nullable(T)));
      }
      return selected;
    } finally {
      if (!dart.fn(() => {
        provider$._debugIsSelecting = false;
        return true;
      }, T$.VoidTobool())()) dart.assertFailed(null, I[3], 304, 14, "() {\n        _debugIsSelecting = false;\n        return true;\n      }()");
    }
  };
  provider$['SelectContext|get#select'] = function SelectContext$124get$35select($this) {
    return dart.fn((T, R, selector) => provider$['SelectContext|select'](T, R, $this, selector), T$.FnToR());
  };
  provider$['ReadContext|read'] = function ReadContext$124read(T, $this) {
    return provider$.Provider.of(T, $this, {listen: false});
  };
  provider$['ReadContext|get#read'] = function ReadContext$124get$35read($this) {
    return dart.fn(T => provider$['ReadContext|read'](T, $this), T$.VoidToT());
  };
  provider$['WatchContext|watch'] = function WatchContext$124watch(T, $this) {
    return provider$.Provider.of(T, $this);
  };
  provider$['WatchContext|get#watch'] = function WatchContext$124get$35watch($this) {
    return dart.fn(T => provider$['WatchContext|watch'](T, $this), T$.VoidToT());
  };
  dart.defineLazy(provider$, {
    /*provider$._isSoundMode*/get _isSoundMode() {
      return !T$.ListOfint().is(T$.JSArrayOfintN().of([]));
    },
    /*provider$._debugPostEventOverride*/get _debugPostEventOverride() {
      return null;
    },
    set _debugPostEventOverride(value) {},
    /*provider$._debugIsSelecting*/get _debugIsSelecting() {
      return false;
    },
    set _debugIsSelecting(value) {},
    /*provider$.debugIsInInheritedProviderUpdate*/get debugIsInInheritedProviderUpdate() {
      return false;
    },
    set debugIsInInheritedProviderUpdate(value) {},
    /*provider$.debugIsInInheritedProviderCreate*/get debugIsInInheritedProviderCreate() {
      return false;
    },
    set debugIsInInheritedProviderCreate(value) {}
  }, false);
  const _is_ProxyProvider0_default = Symbol('_is_ProxyProvider0_default');
  proxy_provider.ProxyProvider0$ = dart.generic(R => {
    var __t$RTovoid = () => (__t$RTovoid = dart.constFn(dart.fnType(dart.void, [R])))();
    class ProxyProvider0 extends provider$.InheritedProvider$(R) {
      static ['_#new#tearOff'](R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider0$(R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider0.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: update, dispose: dispose, updateShouldNotify: updateShouldNotify, debugCheckInvalidValueType: dart.fn(value => {
          let t9;
          t9 = provider$.Provider.debugCheckInvalidValueType;
          return t9 == null ? null : t9(R, value);
        }, __t$RTovoid()), child: child});
      ;
    }).prototype = ProxyProvider0.prototype;
    dart.addTypeTests(ProxyProvider0);
    ProxyProvider0.prototype[_is_ProxyProvider0_default] = true;
    dart.addTypeCaches(ProxyProvider0);
    dart.setLibraryUri(ProxyProvider0, I[14]);
    return ProxyProvider0;
  });
  proxy_provider.ProxyProvider0 = proxy_provider.ProxyProvider0$();
  dart.addTypeTests(proxy_provider.ProxyProvider0, _is_ProxyProvider0_default);
  const _is_ProxyProvider_default = Symbol('_is_ProxyProvider_default');
  proxy_provider.ProxyProvider$ = dart.generic((T, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider$(T, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider.prototype;
    dart.addTypeTests(ProxyProvider);
    ProxyProvider.prototype[_is_ProxyProvider_default] = true;
    dart.addTypeCaches(ProxyProvider);
    dart.setLibraryUri(ProxyProvider, I[14]);
    return ProxyProvider;
  });
  proxy_provider.ProxyProvider = proxy_provider.ProxyProvider$();
  dart.addTypeTests(proxy_provider.ProxyProvider, _is_ProxyProvider_default);
  const _is_ProxyProvider2_default = Symbol('_is_ProxyProvider2_default');
  proxy_provider.ProxyProvider2$ = dart.generic((T, T2, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider2 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider2$(T, T2, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider2.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider2.prototype;
    dart.addTypeTests(ProxyProvider2);
    ProxyProvider2.prototype[_is_ProxyProvider2_default] = true;
    dart.addTypeCaches(ProxyProvider2);
    dart.setLibraryUri(ProxyProvider2, I[14]);
    return ProxyProvider2;
  });
  proxy_provider.ProxyProvider2 = proxy_provider.ProxyProvider2$();
  dart.addTypeTests(proxy_provider.ProxyProvider2, _is_ProxyProvider2_default);
  const _is_ProxyProvider3_default = Symbol('_is_ProxyProvider3_default');
  proxy_provider.ProxyProvider3$ = dart.generic((T, T2, T3, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider3 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider3$(T, T2, T3, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider3.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider3.prototype;
    dart.addTypeTests(ProxyProvider3);
    ProxyProvider3.prototype[_is_ProxyProvider3_default] = true;
    dart.addTypeCaches(ProxyProvider3);
    dart.setLibraryUri(ProxyProvider3, I[14]);
    return ProxyProvider3;
  });
  proxy_provider.ProxyProvider3 = proxy_provider.ProxyProvider3$();
  dart.addTypeTests(proxy_provider.ProxyProvider3, _is_ProxyProvider3_default);
  const _is_ProxyProvider4_default = Symbol('_is_ProxyProvider4_default');
  proxy_provider.ProxyProvider4$ = dart.generic((T, T2, T3, T4, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider4 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider4$(T, T2, T3, T4, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider4.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider4.prototype;
    dart.addTypeTests(ProxyProvider4);
    ProxyProvider4.prototype[_is_ProxyProvider4_default] = true;
    dart.addTypeCaches(ProxyProvider4);
    dart.setLibraryUri(ProxyProvider4, I[14]);
    return ProxyProvider4;
  });
  proxy_provider.ProxyProvider4 = proxy_provider.ProxyProvider4$();
  dart.addTypeTests(proxy_provider.ProxyProvider4, _is_ProxyProvider4_default);
  const _is_ProxyProvider5_default = Symbol('_is_ProxyProvider5_default');
  proxy_provider.ProxyProvider5$ = dart.generic((T, T2, T3, T4, T5, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider5 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider5$(T, T2, T3, T4, T5, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider5.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider5.prototype;
    dart.addTypeTests(ProxyProvider5);
    ProxyProvider5.prototype[_is_ProxyProvider5_default] = true;
    dart.addTypeCaches(ProxyProvider5);
    dart.setLibraryUri(ProxyProvider5, I[14]);
    return ProxyProvider5;
  });
  proxy_provider.ProxyProvider5 = proxy_provider.ProxyProvider5$();
  dart.addTypeTests(proxy_provider.ProxyProvider5, _is_ProxyProvider5_default);
  const _is_ProxyProvider6_default = Symbol('_is_ProxyProvider6_default');
  proxy_provider.ProxyProvider6$ = dart.generic((T, T2, T3, T4, T5, T6, R) => {
    var __t$RN = () => (__t$RN = dart.constFn(dart.nullable(R)))();
    var __t$BuildContextAndRNToR = () => (__t$BuildContextAndRNToR = dart.constFn(dart.fnType(R, [framework.BuildContext, __t$RN()])))();
    class ProxyProvider6 extends proxy_provider.ProxyProvider0$(R) {
      static ['_#new#tearOff'](T, T2, T3, T4, T5, T6, R, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let create = opts && 'create' in opts ? opts.create : null;
        let update = opts && 'update' in opts ? opts.update : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let dispose = opts && 'dispose' in opts ? opts.dispose : null;
        let lazy = opts && 'lazy' in opts ? opts.lazy : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (proxy_provider.ProxyProvider6$(T, T2, T3, T4, T5, T6, R)).new({key: key, create: create, update: update, updateShouldNotify: updateShouldNotify, dispose: dispose, lazy: lazy, builder: builder, child: child});
      }
    }
    (ProxyProvider6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let create = opts && 'create' in opts ? opts.create : null;
      let update = opts && 'update' in opts ? opts.update : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let dispose = opts && 'dispose' in opts ? opts.dispose : null;
      let lazy = opts && 'lazy' in opts ? opts.lazy : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      ProxyProvider6.__proto__.new.call(this, {key: key, lazy: lazy, builder: builder, create: create, update: dart.fn((context, value) => update(context, provider$.Provider.of(T, context), provider$.Provider.of(T2, context), provider$.Provider.of(T3, context), provider$.Provider.of(T4, context), provider$.Provider.of(T5, context), provider$.Provider.of(T6, context), value), __t$BuildContextAndRNToR()), updateShouldNotify: updateShouldNotify, dispose: dispose, child: child});
      ;
    }).prototype = ProxyProvider6.prototype;
    dart.addTypeTests(ProxyProvider6);
    ProxyProvider6.prototype[_is_ProxyProvider6_default] = true;
    dart.addTypeCaches(ProxyProvider6);
    dart.setLibraryUri(ProxyProvider6, I[14]);
    return ProxyProvider6;
  });
  proxy_provider.ProxyProvider6 = proxy_provider.ProxyProvider6$();
  dart.addTypeTests(proxy_provider.ProxyProvider6, _is_ProxyProvider6_default);
  reassemble_handler.ReassembleHandler = class ReassembleHandler extends core.Object {};
  (reassemble_handler.ReassembleHandler.new = function() {
    ;
  }).prototype = reassemble_handler.ReassembleHandler.prototype;
  dart.addTypeTests(reassemble_handler.ReassembleHandler);
  dart.addTypeCaches(reassemble_handler.ReassembleHandler);
  dart.setLibraryUri(reassemble_handler.ReassembleHandler, I[15]);
  var builder$6 = dart.privateName(selector$, "Selector0.builder");
  var selector$0 = dart.privateName(selector$, "Selector0.selector");
  var _shouldRebuild = dart.privateName(selector$, "_shouldRebuild");
  var _child$0 = dart.privateName(nested, "SingleChildStatefulWidget._child");
  nested.SingleChildStatefulWidget = class SingleChildStatefulWidget extends framework.StatefulWidget {
    get [_child$]() {
      return this[_child$0];
    }
    set [_child$](value) {
      super[_child$] = value;
    }
    createElement() {
      return new nested.SingleChildStatefulElement.new(this);
    }
  };
  (nested.SingleChildStatefulWidget.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[_child$0] = child;
    nested.SingleChildStatefulWidget.__proto__.new.call(this, {key: key});
    ;
  }).prototype = nested.SingleChildStatefulWidget.prototype;
  dart.addTypeTests(nested.SingleChildStatefulWidget);
  dart.addTypeCaches(nested.SingleChildStatefulWidget);
  nested.SingleChildStatefulWidget[dart.implements] = () => [nested.SingleChildWidget];
  dart.setMethodSignature(nested.SingleChildStatefulWidget, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatefulWidget.__proto__),
    createElement: dart.fnType(nested.SingleChildStatefulElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatefulWidget, I[4]);
  dart.setFieldSignature(nested.SingleChildStatefulWidget, () => ({
    __proto__: dart.getFields(nested.SingleChildStatefulWidget.__proto__),
    [_child$]: dart.finalFieldType(dart.nullable(framework.Widget))
  }));
  const _is_Selector0_default = Symbol('_is_Selector0_default');
  selector$.Selector0$ = dart.generic(T => {
    var __t$_Selector0StateOfT = () => (__t$_Selector0StateOfT = dart.constFn(selector$._Selector0State$(T)))();
    class Selector0 extends nested.SingleChildStatefulWidget {
      get builder() {
        return this[builder$6];
      }
      set builder(value) {
        super.builder = value;
      }
      get selector() {
        return this[selector$0];
      }
      set selector(value) {
        super.selector = value;
      }
      static ['_#new#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector0$(T)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
      createState() {
        return new (__t$_Selector0StateOfT()).new();
      }
    }
    (Selector0.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[builder$6] = builder;
      this[selector$0] = selector;
      this[_shouldRebuild] = shouldRebuild;
      Selector0.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = Selector0.prototype;
    dart.addTypeTests(Selector0);
    Selector0.prototype[_is_Selector0_default] = true;
    dart.addTypeCaches(Selector0);
    dart.setMethodSignature(Selector0, () => ({
      __proto__: dart.getMethods(Selector0.__proto__),
      createState: dart.fnType(selector$._Selector0State$(T), [])
    }));
    dart.setLibraryUri(Selector0, I[16]);
    dart.setFieldSignature(Selector0, () => ({
      __proto__: dart.getFields(Selector0.__proto__),
      builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, T, dart.nullable(framework.Widget)])),
      selector: dart.finalFieldType(dart.fnType(T, [framework.BuildContext])),
      [_shouldRebuild]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T])))
    }));
    return Selector0;
  });
  selector$.Selector0 = selector$.Selector0$();
  dart.addTypeTests(selector$.Selector0, _is_Selector0_default);
  var value$ = dart.privateName(selector$, "_Selector0State.value");
  const _is_SingleChildState_default = Symbol('_is_SingleChildState_default');
  nested.SingleChildState$ = dart.generic(T => {
    class SingleChildState extends framework.State$(T) {
      build(context) {
        return this.buildWithChild(context, this.widget[_child$]);
      }
    }
    (SingleChildState.new = function() {
      SingleChildState.__proto__.new.call(this);
      ;
    }).prototype = SingleChildState.prototype;
    dart.addTypeTests(SingleChildState);
    SingleChildState.prototype[_is_SingleChildState_default] = true;
    dart.addTypeCaches(SingleChildState);
    dart.setMethodSignature(SingleChildState, () => ({
      __proto__: dart.getMethods(SingleChildState.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(SingleChildState, I[4]);
    return SingleChildState;
  });
  nested.SingleChildState = nested.SingleChildState$();
  dart.addTypeTests(nested.SingleChildState, _is_SingleChildState_default);
  const _is__Selector0State_default = Symbol('_is__Selector0State_default');
  selector$._Selector0State$ = dart.generic(T => {
    var __t$TN = () => (__t$TN = dart.constFn(dart.nullable(T)))();
    var __t$TAndTTobool = () => (__t$TAndTTobool = dart.constFn(dart.fnType(core.bool, [T, T])))();
    var __t$TAndTToNbool = () => (__t$TAndTToNbool = dart.constFn(dart.nullable(__t$TAndTTobool())))();
    var __t$BuildContextAndTAndWidgetNToWidget = () => (__t$BuildContextAndTAndWidgetNToWidget = dart.constFn(dart.fnType(framework.Widget, [framework.BuildContext, T, T$.WidgetN()])))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class _Selector0State extends nested.SingleChildState$(selector$.Selector0$(T)) {
      get value() {
        return this[value$];
      }
      set value(value) {
        this[value$] = __t$TN().as(value);
      }
      buildWithChild(context, child) {
        let t10, t9;
        let selected = (t9 = this.widget, t10 = context, t9.selector(t10));
        let shouldInvalidateCache = !dart.equals(this.oldWidget, this.widget) || __t$TAndTToNbool().as(this.widget[_shouldRebuild]) != null && dart.nullCheck(__t$TAndTToNbool().as(this.widget[_shouldRebuild]))(T.as(this.value), selected) || __t$TAndTToNbool().as(this.widget[_shouldRebuild]) == null && !(C[6] || CT.C6).equals(this.value, selected);
        if (shouldInvalidateCache) {
          this.value = selected;
          this.oldWidget = this.widget;
          this.cache = new basic.Builder.new({builder: dart.fn(context => {
              let t12, t11, t10, t9;
              t9 = this.widget;
              t10 = context;
              t11 = selected;
              t12 = child;
              return __t$BuildContextAndTAndWidgetNToWidget().as(t9.builder)(t10, t11, t12);
            }, T$.BuildContextToWidget())});
        }
        return dart.nullCheck(this.cache);
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this.value));
      }
      static ['_#new#tearOff'](T) {
        return new (selector$._Selector0State$(T)).new();
      }
    }
    (_Selector0State.new = function() {
      this[value$] = null;
      this.cache = null;
      this.oldWidget = null;
      _Selector0State.__proto__.new.call(this);
      ;
    }).prototype = _Selector0State.prototype;
    dart.addTypeTests(_Selector0State);
    _Selector0State.prototype[_is__Selector0State_default] = true;
    dart.addTypeCaches(_Selector0State);
    dart.setMethodSignature(_Selector0State, () => ({
      __proto__: dart.getMethods(_Selector0State.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(_Selector0State, I[16]);
    dart.setFieldSignature(_Selector0State, () => ({
      __proto__: dart.getFields(_Selector0State.__proto__),
      value: dart.fieldType(dart.nullable(T)),
      cache: dart.fieldType(dart.nullable(framework.Widget)),
      oldWidget: dart.fieldType(dart.nullable(framework.Widget))
    }));
    return _Selector0State;
  });
  selector$._Selector0State = selector$._Selector0State$();
  dart.addTypeTests(selector$._Selector0State, _is__Selector0State_default);
  const _is_Selector_default = Symbol('_is_Selector_default');
  selector$.Selector$ = dart.generic((A, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector$(A, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector.prototype;
    dart.addTypeTests(Selector);
    Selector.prototype[_is_Selector_default] = true;
    dart.addTypeCaches(Selector);
    dart.setLibraryUri(Selector, I[16]);
    return Selector;
  });
  selector$.Selector = selector$.Selector$();
  dart.addTypeTests(selector$.Selector, _is_Selector_default);
  const _is_Selector2_default = Symbol('_is_Selector2_default');
  selector$.Selector2$ = dart.generic((A, B, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector2 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector2$(A, B, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector2.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector2.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector2.prototype;
    dart.addTypeTests(Selector2);
    Selector2.prototype[_is_Selector2_default] = true;
    dart.addTypeCaches(Selector2);
    dart.setLibraryUri(Selector2, I[16]);
    return Selector2;
  });
  selector$.Selector2 = selector$.Selector2$();
  dart.addTypeTests(selector$.Selector2, _is_Selector2_default);
  const _is_Selector3_default = Symbol('_is_Selector3_default');
  selector$.Selector3$ = dart.generic((A, B, C, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector3 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector3$(A, B, C, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector3.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector3.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector3.prototype;
    dart.addTypeTests(Selector3);
    Selector3.prototype[_is_Selector3_default] = true;
    dart.addTypeCaches(Selector3);
    dart.setLibraryUri(Selector3, I[16]);
    return Selector3;
  });
  selector$.Selector3 = selector$.Selector3$();
  dart.addTypeTests(selector$.Selector3, _is_Selector3_default);
  const _is_Selector4_default = Symbol('_is_Selector4_default');
  selector$.Selector4$ = dart.generic((A, B, C, D, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector4 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector4$(A, B, C, D, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector4.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector4.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector4.prototype;
    dart.addTypeTests(Selector4);
    Selector4.prototype[_is_Selector4_default] = true;
    dart.addTypeCaches(Selector4);
    dart.setLibraryUri(Selector4, I[16]);
    return Selector4;
  });
  selector$.Selector4 = selector$.Selector4$();
  dart.addTypeTests(selector$.Selector4, _is_Selector4_default);
  const _is_Selector5_default = Symbol('_is_Selector5_default');
  selector$.Selector5$ = dart.generic((A, B, C, D, E, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector5 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, E, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector5$(A, B, C, D, E, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector5.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector5.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context), provider$.Provider.of(E, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector5.prototype;
    dart.addTypeTests(Selector5);
    Selector5.prototype[_is_Selector5_default] = true;
    dart.addTypeCaches(Selector5);
    dart.setLibraryUri(Selector5, I[16]);
    return Selector5;
  });
  selector$.Selector5 = selector$.Selector5$();
  dart.addTypeTests(selector$.Selector5, _is_Selector5_default);
  const _is_Selector6_default = Symbol('_is_Selector6_default');
  selector$.Selector6$ = dart.generic((A, B, C, D, E, F, S) => {
    var __t$BuildContextToS = () => (__t$BuildContextToS = dart.constFn(dart.fnType(S, [framework.BuildContext])))();
    class Selector6 extends selector$.Selector0$(S) {
      static ['_#new#tearOff'](A, B, C, D, E, F, S, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let builder = opts && 'builder' in opts ? opts.builder : null;
        let selector = opts && 'selector' in opts ? opts.selector : null;
        let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (selector$.Selector6$(A, B, C, D, E, F, S)).new({key: key, builder: builder, selector: selector, shouldRebuild: shouldRebuild, child: child});
      }
    }
    (Selector6.new = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let selector = opts && 'selector' in opts ? opts.selector : null;
      let shouldRebuild = opts && 'shouldRebuild' in opts ? opts.shouldRebuild : null;
      let child = opts && 'child' in opts ? opts.child : null;
      Selector6.__proto__.new.call(this, {key: key, shouldRebuild: shouldRebuild, builder: builder, selector: dart.fn(context => selector(context, provider$.Provider.of(A, context), provider$.Provider.of(B, context), provider$.Provider.of(C, context), provider$.Provider.of(D, context), provider$.Provider.of(E, context), provider$.Provider.of(F, context)), __t$BuildContextToS()), child: child});
      ;
    }).prototype = Selector6.prototype;
    dart.addTypeTests(Selector6);
    Selector6.prototype[_is_Selector6_default] = true;
    dart.addTypeCaches(Selector6);
    dart.setLibraryUri(Selector6, I[16]);
    return Selector6;
  });
  selector$.Selector6 = selector$.Selector6$();
  dart.addTypeTests(selector$.Selector6, _is_Selector6_default);
  var _valueListenable = dart.privateName(value_listenable_provider, "_valueListenable");
  var _updateShouldNotify$ = dart.privateName(value_listenable_provider, "_updateShouldNotify");
  const _is_ValueListenableProvider_default = Symbol('_is_ValueListenableProvider_default');
  value_listenable_provider.ValueListenableProvider$ = dart.generic(T => {
    var __t$ValueListenableBuilderOfT = () => (__t$ValueListenableBuilderOfT = dart.constFn(value_listenable_builder.ValueListenableBuilder$(T)))();
    var __t$ProviderOfT = () => (__t$ProviderOfT = dart.constFn(provider$.Provider$(T)))();
    var __t$BuildContextAndTAndWidgetNToProviderOfT = () => (__t$BuildContextAndTAndWidgetNToProviderOfT = dart.constFn(dart.fnType(__t$ProviderOfT(), [framework.BuildContext, T, T$.WidgetN()])))();
    var __t$DiagnosticsPropertyOfT = () => (__t$DiagnosticsPropertyOfT = dart.constFn(diagnostics.DiagnosticsProperty$(T)))();
    class ValueListenableProvider extends nested.SingleChildStatelessWidget {
      static ['_#value#tearOff'](T, opts) {
        let key = opts && 'key' in opts ? opts.key : null;
        let value = opts && 'value' in opts ? opts.value : null;
        let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
        let child = opts && 'child' in opts ? opts.child : null;
        return new (value_listenable_provider.ValueListenableProvider$(T)).value({key: key, value: value, updateShouldNotify: updateShouldNotify, child: child});
      }
      buildWithChild(context, child) {
        return new (__t$ValueListenableBuilderOfT()).new({valueListenable: this[_valueListenable], builder: dart.fn((context, value, _) => new (__t$ProviderOfT()).value({value: value, updateShouldNotify: this[_updateShouldNotify$], child: child}), __t$BuildContextAndTAndWidgetNToProviderOfT())});
      }
      debugFillProperties(properties) {
        super.debugFillProperties(properties);
        properties.add(new (__t$DiagnosticsPropertyOfT()).new("value", this[_valueListenable].value));
      }
    }
    (ValueListenableProvider.value = function(opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let value = opts && 'value' in opts ? opts.value : null;
      let updateShouldNotify = opts && 'updateShouldNotify' in opts ? opts.updateShouldNotify : null;
      let child = opts && 'child' in opts ? opts.child : null;
      this[_valueListenable] = value;
      this[_updateShouldNotify$] = updateShouldNotify;
      ValueListenableProvider.__proto__.new.call(this, {key: key, child: child});
      ;
    }).prototype = ValueListenableProvider.prototype;
    dart.addTypeTests(ValueListenableProvider);
    ValueListenableProvider.prototype[_is_ValueListenableProvider_default] = true;
    dart.addTypeCaches(ValueListenableProvider);
    dart.setMethodSignature(ValueListenableProvider, () => ({
      __proto__: dart.getMethods(ValueListenableProvider.__proto__),
      buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
    }));
    dart.setLibraryUri(ValueListenableProvider, I[17]);
    dart.setFieldSignature(ValueListenableProvider, () => ({
      __proto__: dart.getFields(ValueListenableProvider.__proto__),
      [_valueListenable]: dart.finalFieldType(change_notifier.ValueListenable$(T)),
      [_updateShouldNotify$]: dart.finalFieldType(dart.nullable(dart.fnType(core.bool, [T, T])))
    }));
    return ValueListenableProvider;
  });
  value_listenable_provider.ValueListenableProvider = value_listenable_provider.ValueListenableProvider$();
  dart.addTypeTests(value_listenable_provider.ValueListenableProvider, _is_ValueListenableProvider_default);
  var apiVersion$ = dart.privateName(video, "ApiResponse.apiVersion");
  var data$ = dart.privateName(video, "ApiResponse.data");
  video.ApiResponse = class ApiResponse extends core.Object {
    get apiVersion() {
      return this[apiVersion$];
    }
    set apiVersion(value) {
      super.apiVersion = value;
    }
    get data() {
      return this[data$];
    }
    set data(value) {
      super.data = value;
    }
    static ['_#new#tearOff'](opts) {
      let apiVersion = opts && 'apiVersion' in opts ? opts.apiVersion : null;
      let data = opts && 'data' in opts ? opts.data : null;
      return new video.ApiResponse.new({apiVersion: apiVersion, data: data});
    }
    static fromJson(json) {
      return new video.ApiResponse.new({apiVersion: core.String.as(json[$_get]("apiVersion")), data: video.VideoData.fromJson(T$.MapOfString$dynamic().as(json[$_get]("data")))});
    }
    static ['_#fromJson#tearOff'](json) {
      return video.ApiResponse.fromJson(json);
    }
  };
  (video.ApiResponse.new = function(opts) {
    let apiVersion = opts && 'apiVersion' in opts ? opts.apiVersion : null;
    let data = opts && 'data' in opts ? opts.data : null;
    this[apiVersion$] = apiVersion;
    this[data$] = data;
    ;
  }).prototype = video.ApiResponse.prototype;
  dart.addTypeTests(video.ApiResponse);
  dart.addTypeCaches(video.ApiResponse);
  dart.setStaticMethodSignature(video.ApiResponse, () => ['fromJson']);
  dart.setLibraryUri(video.ApiResponse, I[18]);
  dart.setFieldSignature(video.ApiResponse, () => ({
    __proto__: dart.getFields(video.ApiResponse.__proto__),
    apiVersion: dart.finalFieldType(core.String),
    data: dart.finalFieldType(video.VideoData)
  }));
  var id$0 = dart.privateName(video, "VideoData.id");
  var uploaded$ = dart.privateName(video, "VideoData.uploaded");
  var updated$ = dart.privateName(video, "VideoData.updated");
  var uploader$ = dart.privateName(video, "VideoData.uploader");
  var category$ = dart.privateName(video, "VideoData.category");
  var title$ = dart.privateName(video, "VideoData.title");
  var description$ = dart.privateName(video, "VideoData.description");
  var tags$ = dart.privateName(video, "VideoData.tags");
  var thumbnail$ = dart.privateName(video, "VideoData.thumbnail");
  var player$ = dart.privateName(video, "VideoData.player");
  var content$ = dart.privateName(video, "VideoData.content");
  var duration$ = dart.privateName(video, "VideoData.duration");
  var aspectRatio$ = dart.privateName(video, "VideoData.aspectRatio");
  var rating$ = dart.privateName(video, "VideoData.rating");
  var likeCount$ = dart.privateName(video, "VideoData.likeCount");
  var bookmarkCount$ = dart.privateName(video, "VideoData.bookmarkCount");
  var viewCount$ = dart.privateName(video, "VideoData.viewCount");
  var shareCount$ = dart.privateName(video, "VideoData.shareCount");
  var commentCount$ = dart.privateName(video, "VideoData.commentCount");
  var status$ = dart.privateName(video, "VideoData.status");
  var restrictions$ = dart.privateName(video, "VideoData.restrictions");
  var accessControl$ = dart.privateName(video, "VideoData.accessControl");
  video.VideoData = class VideoData extends core.Object {
    get id() {
      return this[id$0];
    }
    set id(value) {
      super.id = value;
    }
    get uploaded() {
      return this[uploaded$];
    }
    set uploaded(value) {
      super.uploaded = value;
    }
    get updated() {
      return this[updated$];
    }
    set updated(value) {
      super.updated = value;
    }
    get uploader() {
      return this[uploader$];
    }
    set uploader(value) {
      super.uploader = value;
    }
    get category() {
      return this[category$];
    }
    set category(value) {
      super.category = value;
    }
    get title() {
      return this[title$];
    }
    set title(value) {
      super.title = value;
    }
    get description() {
      return this[description$];
    }
    set description(value) {
      super.description = value;
    }
    get tags() {
      return this[tags$];
    }
    set tags(value) {
      super.tags = value;
    }
    get thumbnail() {
      return this[thumbnail$];
    }
    set thumbnail(value) {
      super.thumbnail = value;
    }
    get player() {
      return this[player$];
    }
    set player(value) {
      super.player = value;
    }
    get content() {
      return this[content$];
    }
    set content(value) {
      super.content = value;
    }
    get duration() {
      return this[duration$];
    }
    set duration(value) {
      super.duration = value;
    }
    get aspectRatio() {
      return this[aspectRatio$];
    }
    set aspectRatio(value) {
      super.aspectRatio = value;
    }
    get rating() {
      return this[rating$];
    }
    set rating(value) {
      super.rating = value;
    }
    get likeCount() {
      return this[likeCount$];
    }
    set likeCount(value) {
      super.likeCount = value;
    }
    get bookmarkCount() {
      return this[bookmarkCount$];
    }
    set bookmarkCount(value) {
      super.bookmarkCount = value;
    }
    get viewCount() {
      return this[viewCount$];
    }
    set viewCount(value) {
      super.viewCount = value;
    }
    get shareCount() {
      return this[shareCount$];
    }
    set shareCount(value) {
      super.shareCount = value;
    }
    get commentCount() {
      return this[commentCount$];
    }
    set commentCount(value) {
      super.commentCount = value;
    }
    get status() {
      return this[status$];
    }
    set status(value) {
      super.status = value;
    }
    get restrictions() {
      return this[restrictions$];
    }
    set restrictions(value) {
      super.restrictions = value;
    }
    get accessControl() {
      return this[accessControl$];
    }
    set accessControl(value) {
      super.accessControl = value;
    }
    static ['_#new#tearOff'](opts) {
      let id = opts && 'id' in opts ? opts.id : null;
      let uploaded = opts && 'uploaded' in opts ? opts.uploaded : null;
      let updated = opts && 'updated' in opts ? opts.updated : null;
      let uploader = opts && 'uploader' in opts ? opts.uploader : null;
      let category = opts && 'category' in opts ? opts.category : null;
      let title = opts && 'title' in opts ? opts.title : null;
      let description = opts && 'description' in opts ? opts.description : null;
      let tags = opts && 'tags' in opts ? opts.tags : null;
      let thumbnail = opts && 'thumbnail' in opts ? opts.thumbnail : null;
      let player = opts && 'player' in opts ? opts.player : null;
      let content = opts && 'content' in opts ? opts.content : null;
      let duration = opts && 'duration' in opts ? opts.duration : null;
      let aspectRatio = opts && 'aspectRatio' in opts ? opts.aspectRatio : null;
      let rating = opts && 'rating' in opts ? opts.rating : null;
      let likeCount = opts && 'likeCount' in opts ? opts.likeCount : null;
      let bookmarkCount = opts && 'bookmarkCount' in opts ? opts.bookmarkCount : null;
      let viewCount = opts && 'viewCount' in opts ? opts.viewCount : null;
      let shareCount = opts && 'shareCount' in opts ? opts.shareCount : null;
      let commentCount = opts && 'commentCount' in opts ? opts.commentCount : null;
      let status = opts && 'status' in opts ? opts.status : null;
      let restrictions = opts && 'restrictions' in opts ? opts.restrictions : null;
      let accessControl = opts && 'accessControl' in opts ? opts.accessControl : null;
      return new video.VideoData.new({id: id, uploaded: uploaded, updated: updated, uploader: uploader, category: category, title: title, description: description, tags: tags, thumbnail: thumbnail, player: player, content: content, duration: duration, aspectRatio: aspectRatio, rating: rating, likeCount: likeCount, bookmarkCount: bookmarkCount, viewCount: viewCount, shareCount: shareCount, commentCount: commentCount, status: status, restrictions: restrictions, accessControl: accessControl});
    }
    static fromJson(json) {
      let t9;
      return new video.VideoData.new({id: core.String.as(json[$_get]("id")), uploaded: core.String.as(json[$_get]("uploaded")), updated: core.String.as(json[$_get]("updated")), uploader: core.String.as(json[$_get]("uploader")), category: core.String.as(json[$_get]("category")), title: core.String.as(json[$_get]("title")), description: core.String.as(json[$_get]("description")), tags: T$.ListOfString().from(core.Iterable.as(json[$_get]("tags"))), thumbnail: video.Thumbnail.fromJson(T$.MapOfString$dynamic().as(json[$_get]("thumbnail"))), player: video.Player.fromJson(T$.MapOfString$dynamic().as(json[$_get]("player"))), content: T$.LinkedHashMapOfString$String().from(core.Map.as(json[$_get]("content"))), duration: core.int.as(json[$_get]("duration")), aspectRatio: core.String.as(json[$_get]("aspectRatio")), rating: core.double.as(dart.dsend(json[$_get]("rating"), 'toDouble', [])), likeCount: core.int.as(json[$_get]("likeCount")), bookmarkCount: core.int.as((t9 = json[$_get]("bookmarkCount"), t9 == null ? 0 : t9)), viewCount: core.int.as(json[$_get]("viewCount")), shareCount: core.int.as(json[$_get]("shareCount")), commentCount: core.int.as(json[$_get]("commentCount")), status: video.Status.fromJson(T$.MapOfString$dynamic().as(json[$_get]("status"))), restrictions: core.List.as(json[$_get]("restrictions"))[$map](video.Restriction, dart.fn(i => video.Restriction.fromJson(T$.MapOfString$dynamic().as(i)), T$.dynamicToRestriction()))[$toList](), accessControl: video.AccessControl.fromJson(T$.MapOfString$dynamic().as(json[$_get]("accessControl")))});
    }
    static ['_#fromJson#tearOff'](json) {
      return video.VideoData.fromJson(json);
    }
  };
  (video.VideoData.new = function(opts) {
    let id = opts && 'id' in opts ? opts.id : null;
    let uploaded = opts && 'uploaded' in opts ? opts.uploaded : null;
    let updated = opts && 'updated' in opts ? opts.updated : null;
    let uploader = opts && 'uploader' in opts ? opts.uploader : null;
    let category = opts && 'category' in opts ? opts.category : null;
    let title = opts && 'title' in opts ? opts.title : null;
    let description = opts && 'description' in opts ? opts.description : null;
    let tags = opts && 'tags' in opts ? opts.tags : null;
    let thumbnail = opts && 'thumbnail' in opts ? opts.thumbnail : null;
    let player = opts && 'player' in opts ? opts.player : null;
    let content = opts && 'content' in opts ? opts.content : null;
    let duration = opts && 'duration' in opts ? opts.duration : null;
    let aspectRatio = opts && 'aspectRatio' in opts ? opts.aspectRatio : null;
    let rating = opts && 'rating' in opts ? opts.rating : null;
    let likeCount = opts && 'likeCount' in opts ? opts.likeCount : null;
    let bookmarkCount = opts && 'bookmarkCount' in opts ? opts.bookmarkCount : null;
    let viewCount = opts && 'viewCount' in opts ? opts.viewCount : null;
    let shareCount = opts && 'shareCount' in opts ? opts.shareCount : null;
    let commentCount = opts && 'commentCount' in opts ? opts.commentCount : null;
    let status = opts && 'status' in opts ? opts.status : null;
    let restrictions = opts && 'restrictions' in opts ? opts.restrictions : null;
    let accessControl = opts && 'accessControl' in opts ? opts.accessControl : null;
    this[id$0] = id;
    this[uploaded$] = uploaded;
    this[updated$] = updated;
    this[uploader$] = uploader;
    this[category$] = category;
    this[title$] = title;
    this[description$] = description;
    this[tags$] = tags;
    this[thumbnail$] = thumbnail;
    this[player$] = player;
    this[content$] = content;
    this[duration$] = duration;
    this[aspectRatio$] = aspectRatio;
    this[rating$] = rating;
    this[likeCount$] = likeCount;
    this[bookmarkCount$] = bookmarkCount;
    this[viewCount$] = viewCount;
    this[shareCount$] = shareCount;
    this[commentCount$] = commentCount;
    this[status$] = status;
    this[restrictions$] = restrictions;
    this[accessControl$] = accessControl;
    ;
  }).prototype = video.VideoData.prototype;
  dart.addTypeTests(video.VideoData);
  dart.addTypeCaches(video.VideoData);
  dart.setStaticMethodSignature(video.VideoData, () => ['fromJson']);
  dart.setLibraryUri(video.VideoData, I[18]);
  dart.setFieldSignature(video.VideoData, () => ({
    __proto__: dart.getFields(video.VideoData.__proto__),
    id: dart.finalFieldType(core.String),
    uploaded: dart.finalFieldType(core.String),
    updated: dart.finalFieldType(core.String),
    uploader: dart.finalFieldType(core.String),
    category: dart.finalFieldType(core.String),
    title: dart.finalFieldType(core.String),
    description: dart.finalFieldType(core.String),
    tags: dart.finalFieldType(core.List$(core.String)),
    thumbnail: dart.finalFieldType(video.Thumbnail),
    player: dart.finalFieldType(video.Player),
    content: dart.finalFieldType(core.Map$(core.String, core.String)),
    duration: dart.finalFieldType(core.int),
    aspectRatio: dart.finalFieldType(core.String),
    rating: dart.finalFieldType(core.double),
    likeCount: dart.finalFieldType(core.int),
    bookmarkCount: dart.finalFieldType(core.int),
    viewCount: dart.finalFieldType(core.int),
    shareCount: dart.finalFieldType(core.int),
    commentCount: dart.finalFieldType(core.int),
    status: dart.finalFieldType(video.Status),
    restrictions: dart.finalFieldType(core.List$(video.Restriction)),
    accessControl: dart.finalFieldType(video.AccessControl)
  }));
  var sqDefault$ = dart.privateName(video, "Thumbnail.sqDefault");
  var hqDefault$ = dart.privateName(video, "Thumbnail.hqDefault");
  video.Thumbnail = class Thumbnail extends core.Object {
    get sqDefault() {
      return this[sqDefault$];
    }
    set sqDefault(value) {
      super.sqDefault = value;
    }
    get hqDefault() {
      return this[hqDefault$];
    }
    set hqDefault(value) {
      super.hqDefault = value;
    }
    static ['_#new#tearOff'](opts) {
      let sqDefault = opts && 'sqDefault' in opts ? opts.sqDefault : null;
      let hqDefault = opts && 'hqDefault' in opts ? opts.hqDefault : null;
      return new video.Thumbnail.new({sqDefault: sqDefault, hqDefault: hqDefault});
    }
    static fromJson(json) {
      return new video.Thumbnail.new({sqDefault: core.String.as(json[$_get]("sqDefault")), hqDefault: core.String.as(json[$_get]("hqDefault"))});
    }
    static ['_#fromJson#tearOff'](json) {
      return video.Thumbnail.fromJson(json);
    }
  };
  (video.Thumbnail.new = function(opts) {
    let sqDefault = opts && 'sqDefault' in opts ? opts.sqDefault : null;
    let hqDefault = opts && 'hqDefault' in opts ? opts.hqDefault : null;
    this[sqDefault$] = sqDefault;
    this[hqDefault$] = hqDefault;
    ;
  }).prototype = video.Thumbnail.prototype;
  dart.addTypeTests(video.Thumbnail);
  dart.addTypeCaches(video.Thumbnail);
  dart.setStaticMethodSignature(video.Thumbnail, () => ['fromJson']);
  dart.setLibraryUri(video.Thumbnail, I[18]);
  dart.setFieldSignature(video.Thumbnail, () => ({
    __proto__: dart.getFields(video.Thumbnail.__proto__),
    sqDefault: dart.finalFieldType(core.String),
    hqDefault: dart.finalFieldType(core.String)
  }));
  var defaultUrl$ = dart.privateName(video, "Player.defaultUrl");
  video.Player = class Player extends core.Object {
    get defaultUrl() {
      return this[defaultUrl$];
    }
    set defaultUrl(value) {
      super.defaultUrl = value;
    }
    static ['_#new#tearOff'](opts) {
      let defaultUrl = opts && 'defaultUrl' in opts ? opts.defaultUrl : null;
      return new video.Player.new({defaultUrl: defaultUrl});
    }
    static fromJson(json) {
      return new video.Player.new({defaultUrl: core.String.as(json[$_get]("default"))});
    }
    static ['_#fromJson#tearOff'](json) {
      return video.Player.fromJson(json);
    }
  };
  (video.Player.new = function(opts) {
    let defaultUrl = opts && 'defaultUrl' in opts ? opts.defaultUrl : null;
    this[defaultUrl$] = defaultUrl;
    ;
  }).prototype = video.Player.prototype;
  dart.addTypeTests(video.Player);
  dart.addTypeCaches(video.Player);
  dart.setStaticMethodSignature(video.Player, () => ['fromJson']);
  dart.setLibraryUri(video.Player, I[18]);
  dart.setFieldSignature(video.Player, () => ({
    __proto__: dart.getFields(video.Player.__proto__),
    defaultUrl: dart.finalFieldType(core.String)
  }));
  var value$0 = dart.privateName(video, "Status.value");
  var reason$ = dart.privateName(video, "Status.reason");
  video.Status = class Status extends core.Object {
    get value() {
      return this[value$0];
    }
    set value(value) {
      super.value = value;
    }
    get reason() {
      return this[reason$];
    }
    set reason(value) {
      super.reason = value;
    }
    static ['_#new#tearOff'](opts) {
      let value = opts && 'value' in opts ? opts.value : null;
      let reason = opts && 'reason' in opts ? opts.reason : null;
      return new video.Status.new({value: value, reason: reason});
    }
    static fromJson(json) {
      return new video.Status.new({value: core.String.as(json[$_get]("value")), reason: core.String.as(json[$_get]("reason"))});
    }
    static ['_#fromJson#tearOff'](json) {
      return video.Status.fromJson(json);
    }
  };
  (video.Status.new = function(opts) {
    let value = opts && 'value' in opts ? opts.value : null;
    let reason = opts && 'reason' in opts ? opts.reason : null;
    this[value$0] = value;
    this[reason$] = reason;
    ;
  }).prototype = video.Status.prototype;
  dart.addTypeTests(video.Status);
  dart.addTypeCaches(video.Status);
  dart.setStaticMethodSignature(video.Status, () => ['fromJson']);
  dart.setLibraryUri(video.Status, I[18]);
  dart.setFieldSignature(video.Status, () => ({
    __proto__: dart.getFields(video.Status.__proto__),
    value: dart.finalFieldType(core.String),
    reason: dart.finalFieldType(core.String)
  }));
  var type$0 = dart.privateName(video, "Restriction.type");
  var relationship$ = dart.privateName(video, "Restriction.relationship");
  var countries$ = dart.privateName(video, "Restriction.countries");
  video.Restriction = class Restriction extends core.Object {
    get type() {
      return this[type$0];
    }
    set type(value) {
      super.type = value;
    }
    get relationship() {
      return this[relationship$];
    }
    set relationship(value) {
      super.relationship = value;
    }
    get countries() {
      return this[countries$];
    }
    set countries(value) {
      super.countries = value;
    }
    static ['_#new#tearOff'](opts) {
      let type = opts && 'type' in opts ? opts.type : null;
      let relationship = opts && 'relationship' in opts ? opts.relationship : null;
      let countries = opts && 'countries' in opts ? opts.countries : null;
      return new video.Restriction.new({type: type, relationship: relationship, countries: countries});
    }
    static fromJson(json) {
      return new video.Restriction.new({type: core.String.as(json[$_get]("type")), relationship: core.String.as(json[$_get]("relationship")), countries: core.String.as(json[$_get]("countries"))});
    }
    static ['_#fromJson#tearOff'](json) {
      return video.Restriction.fromJson(json);
    }
  };
  (video.Restriction.new = function(opts) {
    let type = opts && 'type' in opts ? opts.type : null;
    let relationship = opts && 'relationship' in opts ? opts.relationship : null;
    let countries = opts && 'countries' in opts ? opts.countries : null;
    this[type$0] = type;
    this[relationship$] = relationship;
    this[countries$] = countries;
    ;
  }).prototype = video.Restriction.prototype;
  dart.addTypeTests(video.Restriction);
  dart.addTypeCaches(video.Restriction);
  dart.setStaticMethodSignature(video.Restriction, () => ['fromJson']);
  dart.setLibraryUri(video.Restriction, I[18]);
  dart.setFieldSignature(video.Restriction, () => ({
    __proto__: dart.getFields(video.Restriction.__proto__),
    type: dart.finalFieldType(core.String),
    relationship: dart.finalFieldType(core.String),
    countries: dart.finalFieldType(core.String)
  }));
  var comment$ = dart.privateName(video, "AccessControl.comment");
  var commentVote$ = dart.privateName(video, "AccessControl.commentVote");
  var videoRespond$ = dart.privateName(video, "AccessControl.videoRespond");
  var rate$ = dart.privateName(video, "AccessControl.rate");
  var embed$ = dart.privateName(video, "AccessControl.embed");
  var list$ = dart.privateName(video, "AccessControl.list");
  var autoPlay$ = dart.privateName(video, "AccessControl.autoPlay");
  var syndicate$ = dart.privateName(video, "AccessControl.syndicate");
  video.AccessControl = class AccessControl extends core.Object {
    get comment() {
      return this[comment$];
    }
    set comment(value) {
      super.comment = value;
    }
    get commentVote() {
      return this[commentVote$];
    }
    set commentVote(value) {
      super.commentVote = value;
    }
    get videoRespond() {
      return this[videoRespond$];
    }
    set videoRespond(value) {
      super.videoRespond = value;
    }
    get rate() {
      return this[rate$];
    }
    set rate(value) {
      super.rate = value;
    }
    get embed() {
      return this[embed$];
    }
    set embed(value) {
      super.embed = value;
    }
    get list() {
      return this[list$];
    }
    set list(value) {
      super.list = value;
    }
    get autoPlay() {
      return this[autoPlay$];
    }
    set autoPlay(value) {
      super.autoPlay = value;
    }
    get syndicate() {
      return this[syndicate$];
    }
    set syndicate(value) {
      super.syndicate = value;
    }
    static ['_#new#tearOff'](opts) {
      let comment = opts && 'comment' in opts ? opts.comment : null;
      let commentVote = opts && 'commentVote' in opts ? opts.commentVote : null;
      let videoRespond = opts && 'videoRespond' in opts ? opts.videoRespond : null;
      let rate = opts && 'rate' in opts ? opts.rate : null;
      let embed = opts && 'embed' in opts ? opts.embed : null;
      let list = opts && 'list' in opts ? opts.list : null;
      let autoPlay = opts && 'autoPlay' in opts ? opts.autoPlay : null;
      let syndicate = opts && 'syndicate' in opts ? opts.syndicate : null;
      return new video.AccessControl.new({comment: comment, commentVote: commentVote, videoRespond: videoRespond, rate: rate, embed: embed, list: list, autoPlay: autoPlay, syndicate: syndicate});
    }
    static fromJson(json) {
      return new video.AccessControl.new({comment: core.String.as(json[$_get]("comment")), commentVote: core.String.as(json[$_get]("commentVote")), videoRespond: core.String.as(json[$_get]("videoRespond")), rate: core.String.as(json[$_get]("rate")), embed: core.String.as(json[$_get]("embed")), list: core.String.as(json[$_get]("list")), autoPlay: core.String.as(json[$_get]("autoPlay")), syndicate: core.String.as(json[$_get]("syndicate"))});
    }
    static ['_#fromJson#tearOff'](json) {
      return video.AccessControl.fromJson(json);
    }
  };
  (video.AccessControl.new = function(opts) {
    let comment = opts && 'comment' in opts ? opts.comment : null;
    let commentVote = opts && 'commentVote' in opts ? opts.commentVote : null;
    let videoRespond = opts && 'videoRespond' in opts ? opts.videoRespond : null;
    let rate = opts && 'rate' in opts ? opts.rate : null;
    let embed = opts && 'embed' in opts ? opts.embed : null;
    let list = opts && 'list' in opts ? opts.list : null;
    let autoPlay = opts && 'autoPlay' in opts ? opts.autoPlay : null;
    let syndicate = opts && 'syndicate' in opts ? opts.syndicate : null;
    this[comment$] = comment;
    this[commentVote$] = commentVote;
    this[videoRespond$] = videoRespond;
    this[rate$] = rate;
    this[embed$] = embed;
    this[list$] = list;
    this[autoPlay$] = autoPlay;
    this[syndicate$] = syndicate;
    ;
  }).prototype = video.AccessControl.prototype;
  dart.addTypeTests(video.AccessControl);
  dart.addTypeCaches(video.AccessControl);
  dart.setStaticMethodSignature(video.AccessControl, () => ['fromJson']);
  dart.setLibraryUri(video.AccessControl, I[18]);
  dart.setFieldSignature(video.AccessControl, () => ({
    __proto__: dart.getFields(video.AccessControl.__proto__),
    comment: dart.finalFieldType(core.String),
    commentVote: dart.finalFieldType(core.String),
    videoRespond: dart.finalFieldType(core.String),
    rate: dart.finalFieldType(core.String),
    embed: dart.finalFieldType(core.String),
    list: dart.finalFieldType(core.String),
    autoPlay: dart.finalFieldType(core.String),
    syndicate: dart.finalFieldType(core.String)
  }));
  var IconData_matchTextDirection = dart.privateName(icon_data, "IconData.matchTextDirection");
  var IconData_fontPackage = dart.privateName(icon_data, "IconData.fontPackage");
  var IconData_fontFamily = dart.privateName(icon_data, "IconData.fontFamily");
  var IconData_codePoint = dart.privateName(icon_data, "IconData.codePoint");
  flutter_boxicons.Boxicons = class Boxicons extends core.Object {
    static ['_#_#tearOff']() {
      return new flutter_boxicons.Boxicons.__();
    }
  };
  (flutter_boxicons.Boxicons.__ = function() {
    ;
  }).prototype = flutter_boxicons.Boxicons.prototype;
  dart.addTypeTests(flutter_boxicons.Boxicons);
  dart.addTypeCaches(flutter_boxicons.Boxicons);
  dart.setLibraryUri(flutter_boxicons.Boxicons, I[19]);
  dart.setStaticFieldSignature(flutter_boxicons.Boxicons, () => ['_fontFam', '_fontPackage', 'bxs_basketball', 'bxs_bath', 'bxs_battery', 'bxs_battery_charging', 'bxs_battery_full', 'bxs_battery_low', 'bxs_bed', 'bxs_been_here', 'bxs_beer', 'bxs_bell', 'bxs_bell_minus', 'bxs_bell_off', 'bxs_bell_plus', 'bxs_bell_ring', 'bxs_bible', 'bxs_binoculars', 'bxs_blanket', 'bxs_bolt', 'bxs_bolt_circle', 'bxs_bomb', 'bxs_bone', 'bxs_bong', 'bxs_book', 'bxs_book_add', 'bxs_book_alt', 'bxs_book_bookmark', 'bxs_book_content', 'bxs_book_heart', 'bxs_bookmark', 'bxs_bookmark_alt', 'bxs_bookmark_alt_minus', 'bxs_bookmark_alt_plus', 'bxs_bookmark_heart', 'bxs_bookmark_minus', 'bxs_bookmark_plus', 'bxs_bookmarks', 'bxs_bookmark_star', 'bxs_book_open', 'bxs_book_reader', 'bxs_bot', 'bxs_bowling_ball', 'bxs_box', 'bxs_brain', 'bxs_briefcase', 'bxs_briefcase_alt', 'bxs_briefcase_alt_2', 'bxs_brightness', 'bxs_brightness_half', 'bxs_brush', 'bxs_brush_alt', 'bxs_bug', 'bxs_bug_alt', 'bxs_building', 'bxs_building_house', 'bxs_buildings', 'bxs_bulb', 'bxs_bullseye', 'bxs_buoy', 'bxs_bus', 'bxs_business', 'bxs_bus_school', 'bxs_cabinet', 'bxs_cake', 'bxs_calculator', 'bxs_calendar', 'bxs_calendar_alt', 'bxs_calendar_check', 'bxs_calendar_edit', 'bxs_calendar_event', 'bxs_calendar_exclamation', 'bxs_calendar_heart', 'bxs_calendar_minus', 'bxs_calendar_plus', 'bxs_calendar_star', 'bxs_calendar_week', 'bxs_calendar_x', 'bxs_camera', 'bxs_camera_home', 'bxs_camera_movie', 'bxs_camera_off', 'bxs_camera_plus', 'bxs_capsule', 'bxs_captions', 'bxs_car', 'bxs_car_battery', 'bxs_car_crash', 'bxs_card', 'bxs_caret_down_circle', 'bxs_caret_down_square', 'bxs_caret_left_circle', 'bxs_caret_left_square', 'bxs_caret_right_circle', 'bxs_caret_right_square', 'bxs_caret_up_circle', 'bxs_caret_up_square', 'bxs_car_garage', 'bxs_car_mechanic', 'bxs_carousel', 'bxs_cart', 'bxs_cart_add', 'bxs_cart_alt', 'bxs_cart_download', 'bxs_car_wash', 'bxs_category', 'bxs_category_alt', 'bxs_cctv', 'bxs_certification', 'bxs_chalkboard', 'bxs_chart', 'bxs_chat', 'bxs_checkbox', 'bxs_checkbox_checked', 'bxs_check_circle', 'bxs_check_shield', 'bxs_check_square', 'bxs_chess', 'bxs_chevron_down', 'bxs_chevron_down_circle', 'bxs_chevron_down_square', 'bxs_chevron_left', 'bxs_chevron_left_circle', 'bxs_chevron_left_square', 'bxs_chevron_right', 'bxs_chevron_right_circle', 'bxs_chevron_right_square', 'bxs_chevrons_down', 'bxs_chevrons_left', 'bxs_chevrons_right', 'bxs_chevrons_up', 'bxs_chevron_up', 'bxs_chevron_up_circle', 'bxs_chevron_up_square', 'bxs_chip', 'bxs_church', 'bxs_circle', 'bxs_city', 'bxs_clinic', 'bxs_cloud', 'bxs_cloud_download', 'bxs_cloud_lightning', 'bxs_cloud_rain', 'bxs_cloud_upload', 'bxs_coffee', 'bxs_coffee_alt', 'bxs_coffee_togo', 'bxs_cog', 'bxs_coin', 'bxs_coin_stack', 'bxs_collection', 'bxs_color_fill', 'bxs_comment', 'bxs_comment_add', 'bxs_comment_check', 'bxs_comment_detail', 'bxs_comment_dots', 'bxs_comment_edit', 'bxs_comment_error', 'bxs_comment_minus', 'bxs_comment_x', 'bxs_compass', 'bxs_component', 'bxs_confused', 'bxs_contact', 'bxs_conversation', 'bxs_cookie', 'bxs_cool', 'bxs_copy', 'bxs_copy_alt', 'bxs_copyright', 'bxs_coupon', 'bxs_credit_card', 'bxs_credit_card_alt', 'bxs_credit_card_front', 'bxs_crop', 'bxs_crown', 'bxs_cube', 'bxs_cube_alt', 'bxs_cuboid', 'bxs_customize', 'bxs_cylinder', 'bxs_dashboard', 'bxs_data', 'bxs_detail', 'bxs_devices', 'bxs_diamond', 'bxs_dice_1', 'bxs_dice_2', 'bxs_dice_3', 'bxs_dice_4', 'bxs_dice_5', 'bxs_dice_6', 'bxs_direction_left', 'bxs_direction_right', 'bxs_directions', 'bxs_disc', 'bxs_discount', 'bxs_dish', 'bxs_dislike', 'bxs_dizzy', 'bxs_dock_bottom', 'bxs_dock_left', 'bxs_dock_right', 'bxs_dock_top', 'bxs_dollar_circle', 'bxs_donate_blood', 'bxs_donate_heart', 'bxs_door_open', 'bxs_doughnut_chart', 'bxs_down_arrow', 'bxs_down_arrow_alt', 'bxs_down_arrow_circle', 'bxs_down_arrow_square', 'bxs_download', 'bxs_downvote', 'bxs_drink', 'bxs_droplet', 'bxs_droplet_half', 'bxs_dryer', 'bxs_duplicate', 'bxs_edit', 'bxs_edit_alt', 'bxs_edit_location', 'bxs_eject', 'bxs_envelope', 'bxs_envelope_open', 'bxs_eraser', 'bxs_error', 'bxs_error_alt', 'bxs_error_circle', 'bxs_ev_station', 'bxs_exit', 'bxs_extension', 'bxs_eyedropper', 'bxs_face', 'bxs_face_mask', 'bxs_factory', 'bxs_fast_forward_circle', 'bxs_file', 'bxs_file_archive', 'bxs_file_blank', 'bxs_file_css', 'bxs_file_doc', 'bxs_file_export', 'bxs_file_find', 'bxs_file_gif', 'bxs_file_html', 'bxs_file_image', 'bxs_file_import', 'bxs_file_jpg', 'bxs_file_js', 'bxs_file_json', 'bxs_file_md', 'bxs_file_pdf', 'bxs_file_plus', 'bxs_file_png', 'bxs_file_txt', 'bxs_film', 'bxs_filter_alt', 'bxs_first_aid', 'bxs_flag', 'bxs_flag_alt', 'bxs_flag_checkered', 'bxs_flame', 'bxs_flask', 'bxs_florist', 'bxs_folder', 'bxs_folder_minus', 'bxs_folder_open', 'bxs_folder_plus', 'bxs_food_menu', 'bxs_fridge', 'bxs_game', 'bxs_gas_pump', 'bxs_ghost', 'bxs_gift', 'bxs_graduation', 'bxs_grid', 'bxs_grid_alt', 'bxs_group', 'bxs_guitar_amp', 'bxs_hand_down', 'bxs_hand_left', 'bxs_hand_right', 'bxs_hand_up', 'bxs_happy', 'bxs_happy_alt', 'bxs_happy_beaming', 'bxs_happy_heart_eyes', 'bxs_hdd', 'bxs_heart', 'bxs_heart_circle', 'bxs_heart_square', 'bxs_help_circle', 'bxs_hide', 'bxs_home', 'bxs_home_circle', 'bxs_home_heart', 'bxs_home_smile', 'bxs_hot', 'bxs_hotel', 'bxs_hourglass', 'bxs_hourglass_bottom', 'bxs_hourglass_top', 'bxs_id_card', 'bxs_image', 'bxs_image_add', 'bxs_image_alt', 'bxs_inbox', 'bxs_info_circle', 'bxs_info_square', 'bxs_institution', 'bxs_joystick', 'bxs_joystick_alt', 'bxs_joystick_button', 'bxs_key', 'bxs_keyboard', 'bxs_label', 'bxs_landmark', 'bxs_landscape', 'bxs_laugh', 'bxs_layer', 'bxs_layer_minus', 'bxs_layer_plus', 'bxs_layout', 'bxs_left_arrow', 'bxs_left_arrow_alt', 'bxs_left_arrow_circle', 'bxs_left_arrow_square', 'bxs_left_down_arrow_circle', 'bxs_left_top_arrow_circle', 'bxs_like', 'bxs_location_plus', 'bxs_lock', 'bxs_lock_alt', 'bxs_lock_open', 'bxs_lock_open_alt', 'bxs_log_in', 'bxs_log_in_circle', 'bxs_log_out', 'bxs_log_out_circle', 'bxs_low_vision', 'bxs_magic_wand', 'bxs_magnet', 'bxs_map', 'bxs_map_alt', 'bxs_map_pin', 'bxs_mask', 'bxs_medal', 'bxs_megaphone', 'bxs_meh', 'bxs_meh_alt', 'bxs_meh_blank', 'bxs_memory_card', 'bxs_message', 'bxs_message_add', 'bxs_message_alt', 'bxs_message_alt_add', 'bxs_message_alt_check', 'bxs_message_alt_detail', 'bxs_message_alt_dots', 'bxs_message_alt_edit', 'bxs_message_alt_error', 'bxs_message_alt_minus', 'bxs_message_alt_x', 'bxs_message_check', 'bxs_message_detail', 'bxs_message_dots', 'bxs_message_edit', 'bxs_message_error', 'bxs_message_minus', 'bxs_message_rounded', 'bxs_message_rounded_add', 'bxs_message_rounded_check', 'bxs_message_rounded_detail', 'bxs_message_rounded_dots', 'bxs_message_rounded_edit', 'bxs_message_rounded_error', 'bxs_message_rounded_minus', 'bxs_message_rounded_x', 'bxs_message_square', 'bxs_message_square_add', 'bxs_message_square_check', 'bxs_message_square_detail', 'bxs_message_square_dots', 'bxs_message_square_edit', 'bxs_message_square_error', 'bxs_message_square_minus', 'bxs_message_square_x', 'bxs_message_x', 'bxs_meteor', 'bxs_microchip', 'bxs_microphone', 'bxs_microphone_alt', 'bxs_microphone_off', 'bxs_minus_circle', 'bxs_minus_square', 'bxs_mobile', 'bxs_mobile_vibration', 'bxs_moon', 'bxs_mouse', 'bxs_mouse_alt', 'bxs_movie', 'bxs_movie_play', 'bxs_music', 'bxs_navigation', 'bxs_network_chart', 'bxs_news', 'bxs_no_entry', 'bxs_note', 'bxs_notepad', 'bxs_notification', 'bxs_notification_off', 'bxs_offer', 'bxs_package', 'bxs_paint', 'bxs_paint_roll', 'bxs_palette', 'bxs_paper_plane', 'bxs_parking', 'bxs_paste', 'bxs_pen', 'bxs_pencil', 'bxs_phone', 'bxs_phone_call', 'bxs_phone_incoming', 'bxs_phone_outgoing', 'bxs_photo_album', 'bxs_piano', 'bxs_pie_chart', 'bxs_pie_chart_alt', 'bxs_pie_chart_alt_2', 'bxs_pin', 'bxs_pizza', 'bxs_plane', 'bxs_plane_alt', 'bxs_plane_land', 'bxs_planet', 'bxs_plane_take_off', 'bxs_playlist', 'bxs_plug', 'bxs_plus_circle', 'bxs_plus_square', 'bxs_pointer', 'bxs_polygon', 'bxs_printer', 'bxs_purchase_tag', 'bxs_purchase_tag_alt', 'bxs_pyramid', 'bxs_quote_alt_left', 'bxs_quote_alt_right', 'bxs_quote_left', 'bxs_quote_right', 'bxs_quote_single_left', 'bxs_quote_single_right', 'bxs_radiation', 'bxs_radio', 'bxs_receipt', 'bxs_rectangle', 'bxs_rename', 'bxs_report', 'bxs_rewind_circle', 'bxs_right_arrow', 'bxs_right_arrow_alt', 'bxs_right_arrow_circle', 'bxs_right_arrow_square', 'bxs_right_down_arrow_circle', 'bxs_right_top_arrow_circle', 'bxs_rocket', 'bxs_ruler', 'bxs_sad', 'bxs_save', 'bxs_school', 'bxs_search', 'bxs_search_alt_2', 'bxs_select_multiple', 'bxs_send', 'bxs_server', 'bxs_shapes', 'bxs_share', 'bxs_share_alt', 'bxs_shield', 'bxs_shield_alt_2', 'bxs_shield_x', 'bxs_ship', 'bxs_shocked', 'bxs_shopping_bag', 'bxs_shopping_bag_alt', 'bxs_shopping_bags', 'bxs_show', 'bxs_skip_next_circle', 'bxs_skip_previous_circle', 'bxs_skull', 'bxs_sleepy', 'bxs_slideshow', 'bxs_smile', 'bxs_sort_alt', 'bxs_spa', 'bxs_spray_can', 'bxs_spreadsheet', 'bxs_square', 'bxs_square_rounded', 'bxs_star', 'bxs_star_half', 'bxs_sticker', 'bxs_stopwatch', 'bxs_store', 'bxs_store_alt', 'bxs_sun', 'bxs_tachometer', 'bxs_tag', 'bxs_tag_alt', 'bxs_tag_x', 'bxs_taxi', 'bxs_tennis_ball', 'bxs_terminal', 'bxs_thermometer', 'bxs_time', 'bxs_time_five', 'bxs_timer', 'bxs_tired', 'bxs_toggle_left', 'bxs_toggle_right', 'bxs_tone', 'bxs_torch', 'bxs_to_top', 'bxs_traffic', 'bxs_traffic_barrier', 'bxs_traffic_cone', 'bxs_train', 'bxs_trash', 'bxs_trash_alt', 'bxs_tree', 'bxs_trophy', 'bxs_truck', 'bxs_t_shirt', 'bxs_tv', 'bxs_up_arrow', 'bxs_up_arrow_alt', 'bxs_up_arrow_circle', 'bxs_up_arrow_square', 'bxs_upside_down', 'bxs_upvote', 'bxs_user', 'bxs_user_account', 'bxs_user_badge', 'bxs_user_check', 'bxs_user_circle', 'bxs_user_detail', 'bxs_user_minus', 'bxs_user_pin', 'bxs_user_plus', 'bxs_user_rectangle', 'bxs_user_voice', 'bxs_user_x', 'bxs_vector', 'bxs_vial', 'bxs_video', 'bxs_video_off', 'bxs_video_plus', 'bxs_video_recording', 'bxs_videos', 'bxs_virus', 'bxs_virus_block', 'bxs_volume', 'bxs_volume_full', 'bxs_volume_low', 'bxs_volume_mute', 'bxs_wallet', 'bxs_wallet_alt', 'bxs_washer', 'bxs_watch', 'bxs_watch_alt', 'bxs_webcam', 'bxs_widget', 'bxs_window_alt', 'bxs_wine', 'bxs_wink_smile', 'bxs_wink_tongue', 'bxs_wrench', 'bxs_x_circle', 'bxs_x_square', 'bxs_yin_yang', 'bxs_zap', 'bxs_zoom_in', 'bxs_zoom_out', 'bxs_add_to_queue', 'bxs_adjust', 'bxs_adjust_alt', 'bxs_alarm', 'bxs_alarm_add', 'bxs_alarm_exclamation', 'bxs_alarm_off', 'bxs_alarm_snooze', 'bxs_album', 'bxs_ambulance', 'bxs_analyse', 'bxs_angry', 'bxs_arch', 'bxs_archive', 'bxs_archive_in', 'bxs_archive_out', 'bxs_area', 'bxs_arrow_from_bottom', 'bxs_arrow_from_left', 'bxs_arrow_from_right', 'bxs_arrow_from_top', 'bxs_arrow_to_bottom', 'bxs_arrow_to_left', 'bxs_arrow_to_right', 'bxs_arrow_to_top', 'bxs_award', 'bxs_baby_carriage', 'bxs_backpack', 'bxs_badge', 'bxs_badge_check', 'bxs_badge_dollar', 'bxs_ball', 'bxs_band_aid', 'bxs_bank', 'bxs_bar_chart_alt_2', 'bxs_bar_chart_square', 'bxs_barcode', 'bxs_baseball', 'bxs_basket', 'bx_alarm_add', 'bx_alarm_exclamation', 'bx_alarm_off', 'bx_alarm_snooze', 'bx_album', 'bx_align_justify', 'bx_align_left', 'bx_align_middle', 'bx_align_right', 'bx_analyse', 'bx_anchor', 'bx_angry', 'bx_aperture', 'bx_arch', 'bx_archive', 'bx_archive_in', 'bx_archive_out', 'bx_area', 'bx_arrow_back', 'bx_arrow_from_bottom', 'bx_arrow_from_left', 'bx_arrow_from_right', 'bx_arrow_from_top', 'bx_arrow_to_bottom', 'bx_arrow_to_left', 'bx_arrow_to_right', 'bx_arrow_to_top', 'bx_at', 'bx_atom', 'bx_award', 'bx_badge', 'bx_badge_check', 'bx_ball', 'bx_band_aid', 'bx_bar_chart', 'bx_bar_chart_alt', 'bx_bar_chart_alt_2', 'bx_bar_chart_square', 'bx_barcode', 'bx_barcode_reader', 'bx_baseball__', 'bx_basket', 'bx_basketball', 'bx_bath', 'bx_battery', 'bx_bed', 'bx_been_here', 'bx_beer', 'bx_bell', 'bx_bell_minus', 'bx_bell_off', 'bx_bell_plus', 'bx_bible', 'bx_bitcoin', 'bx_blanket', 'bx_block', 'bx_bluetooth', 'bx_body', 'bx_bold', 'bx_bolt_circle', 'bx_bomb', 'bx_bone', 'bx_bong', 'bx_book', 'bx_book_add', 'bx_book_alt', 'bx_book_bookmark', 'bx_book_content', 'bx_book_heart', 'bx_bookmark', 'bx_bookmark_alt', 'bx_bookmark_alt_minus', 'bx_bookmark_alt_plus', 'bx_bookmark_heart', 'bx_bookmark_minus', 'bx_bookmark_plus', 'bx_bookmarks', 'bx_book_open', 'bx_book_reader', 'bx_border_all', 'bx_border_bottom', 'bx_border_inner', 'bx_border_left', 'bx_border_none', 'bx_border_outer', 'bx_border_radius', 'bx_border_right', 'bx_border_top', 'bx_bot', 'bx_bowling_ball', 'bx_box', 'bx_bracket', 'bx_braille', 'bx_brain', 'bx_briefcase', 'bx_briefcase_alt', 'bx_briefcase_alt_2', 'bx_brightness', 'bx_brightness_half', 'bx_broadcast', 'bx_brush', 'bx_brush_alt', 'bx_bug', 'bx_bug_alt', 'bx_building', 'bx_building_house', 'bx_buildings', 'bx_bulb', 'bx_bullseye', 'bx_buoy', 'bx_bus', 'bx_bus_school', 'bx_cabinet', 'bx_cake', 'bx_calculator', 'bx_calendar', 'bx_calendar_alt', 'bx_calendar_check', 'bx_calendar_edit', 'bx_calendar_event', 'bx_calendar_exclamation', 'bx_calendar_heart', 'bx_calendar_minus', 'bx_calendar_plus', 'bx_calendar_star', 'bx_calendar_week', 'bx_calendar_x', 'bx_camera', 'bx_camera_home', 'bx_camera_movie', 'bx_camera_off', 'bx_capsule', 'bx_captions', 'bx_car', 'bx_card', 'bx_caret_down', 'bx_caret_down_circle', 'bx_caret_down_square', 'bx_caret_left', 'bx_caret_left_circle', 'bx_caret_left_square', 'bx_caret_right', 'bx_caret_right_circle', 'bx_caret_right_square', 'bx_caret_up', 'bx_caret_up_circle', 'bx_caret_up_square', 'bx_carousel', 'bx_cart', 'bx_cart_alt', 'bx_cast', 'bx_category', 'bx_category_alt', 'bx_cctv', 'bx_certification', 'bx_chair', 'bx_chalkboard', 'bx_chart', 'bx_chat', 'bx_check', 'bx_checkbox', 'bx_checkbox_checked', 'bx_checkbox_square', 'bx_check_circle', 'bx_check_double', 'bx_check_shield', 'bx_check_square', 'bx_chevron_down', 'bx_chevron_down_circle', 'bx_chevron_down_square', 'bx_chevron_left', 'bx_chevron_left_circle', 'bx_chevron_left_square', 'bx_chevron_right', 'bx_chevron_right_circle', 'bx_chevron_right_square', 'bx_chevrons_down', 'bx_chevrons_left', 'bx_chevrons_right', 'bx_chevrons_up', 'bx_chevron_up', 'bx_chevron_up_circle', 'bx_chevron_up_square', 'bx_chip', 'bx_church', 'bx_circle', 'bx_clinic', 'bx_clipboard', 'bx_closet', 'bx_cloud', 'bx_cloud_download', 'bx_cloud_drizzle', 'bx_cloud_lightning', 'bx_cloud_light_rain', 'bx_cloud_rain', 'bx_cloud_snow', 'bx_cloud_upload', 'bx_code', 'bx_code_alt', 'bx_code_block', 'bx_code_curly', 'bx_coffee', 'bx_coffee_togo', 'bx_cog', 'bx_coin', 'bx_coin_stack', 'bx_collapse', 'bx_collection', 'bx_color_fill', 'bx_columns', 'bx_command', 'bx_comment', 'bx_comment_add', 'bx_comment_check', 'bx_comment_detail', 'bx_comment_dots', 'bx_comment_edit', 'bx_comment_error', 'bx_comment_minus', 'bx_comment_x', 'bx_compass', 'bx_confused', 'bx_conversation', 'bx_cookie', 'bx_cool', 'bx_copy', 'bx_copy_alt', 'bx_copyright', 'bx_credit_card', 'bx_credit_card_alt', 'bx_credit_card_front', 'bx_crop', 'bx_crosshair', 'bx_crown', 'bx_cube', 'bx_cube_alt', 'bx_cuboid', 'bx_current_location', 'bx_customize', 'bx_cut', 'bx_cycling', 'bx_cylinder', 'bx_data', 'bx_desktop', 'bx_detail', 'bx_devices', 'bx_dialpad', 'bx_dialpad_alt', 'bx_diamond', 'bx_dice_1', 'bx_dice_2', 'bx_dice_3', 'bx_dice_4', 'bx_dice_5', 'bx_dice_6', 'bx_directions', 'bx_disc', 'bx_dish', 'bx_dislike', 'bx_dizzy', 'bx_dna', 'bx_dock_bottom', 'bx_dock_left', 'bx_dock_right', 'bx_dock_top', 'bx_dollar', 'bx_dollar_circle', 'bx_donate_blood', 'bx_donate_heart', 'bx_door_open', 'bx_dots_horizontal', 'bx_dots_horizontal_rounded', 'bx_dots_vertical', 'bx_dots_vertical_rounded', 'bx_doughnut_chart', 'bx_down_arrow', 'bx_down_arrow_alt', 'bx_down_arrow_circle', 'bx_download', 'bx_downvote', 'bx_drink', 'bx_droplet', 'bx_dumbbell', 'bx_duplicate', 'bx_edit', 'bx_edit_alt', 'bx_envelope', 'bx_envelope_open', 'bx_equalizer', 'bx_eraser', 'bx_error', 'bx_error_alt', 'bx_error_circle', 'bx_euro', 'bx_exclude', 'bx_exit', 'bx_exit_fullscreen', 'bx_expand', 'bx_expand_alt', 'bx_export', 'bx_extension', 'bx_face', 'bx_fast_forward', 'bx_fast_forward_circle', 'bx_female', 'bx_female_sign', 'bx_file', 'bx_file_blank', 'bx_file_find', 'bx_film', 'bx_filter', 'bx_filter_alt', 'bx_fingerprint', 'bx_first_aid', 'bx_first_page', 'bx_flag', 'bx_folder', 'bx_folder_minus', 'bx_folder_open', 'bx_folder_plus', 'bx_font', 'bx_font_color', 'bx_font_family', 'bx_font_size', 'bx_food_menu', 'bx_food_tag', 'bx_football', 'bx_fridge', 'bx_fullscreen', 'bx_game', 'bx_gas_pump', 'bx_ghost', 'bx_gift', 'bx_git_branch', 'bx_git_commit', 'bx_git_compare', 'bx_git_merge', 'bx_git_pull_request', 'bx_git_repo_forked', 'bx_glasses', 'bx_glasses_alt', 'bx_globe', 'bx_globe_alt', 'bx_grid', 'bx_grid_alt', 'bx_grid_horizontal', 'bx_grid_small', 'bx_grid_vertical', 'bx_group', 'bx_handicap', 'bx_happy', 'bx_happy_alt', 'bx_happy_beaming', 'bx_happy_heart_eyes', 'bx_hash', 'bx_hdd', 'bx_heading', 'bx_headphone', 'bx_health', 'bx_heart', 'bx_heart_circle', 'bx_heart_square', 'bx_help_circle', 'bx_hide', 'bx_highlight', 'bx_history', 'bx_hive', 'bx_home', 'bx_home_alt', 'bx_home_circle', 'bx_home_heart', 'bx_home_smile', 'bx_horizontal_center', 'bx_hotel', 'bx_hourglass', 'bx_id_card', 'bx_image', 'bx_image_add', 'bx_image_alt', 'bx_images', 'bx_import', 'bx_infinite', 'bx_info_circle', 'bx_info_square', 'bx_intersect', 'bx_italic', 'bx_joystick', 'bx_joystick_alt', 'bx_joystick_button', 'bx_key', 'bx_label', 'bx_landscape', 'bx_laptop', 'bx_last_page', 'bx_laugh', 'bx_layer', 'bx_layer_minus', 'bx_layer_plus', 'bx_layout', 'bx_left_arrow', 'bx_left_arrow_alt', 'bx_left_arrow_circle', 'bx_left_down_arrow_circle', 'bx_left_indent', 'bx_left_top_arrow_circle', 'bx_library', 'bx_like', 'bx_line_chart', 'bx_line_chart_down', 'bx_link', 'bx_link_alt', 'bx_link_external', 'bx_lira', 'bx_list_check', 'bx_list_minus', 'bx_list_ol', 'bx_list_plus', 'bx_list_ul', 'bx_loader', 'bx_loader_alt', 'bx_loader_circle', 'bx_location_plus', 'bx_lock', 'bx_lock_alt', 'bx_lock_open', 'bx_lock_open_alt', 'bx_log_in', 'bx_log_in_circle', 'bx_log_out', 'bx_log_out_circle', 'bx_low_vision', 'bx_magnet', 'bx_mail_send', 'bx_male', 'bx_male_sign', 'bx_map', 'bx_map_alt', 'bx_map_pin', 'bx_mask', 'bx_medal', 'bx_meh', 'bx_meh_alt', 'bx_meh_blank', 'bx_memory_card', 'bx_menu', 'bx_menu_alt_left', 'bx_menu_alt_right', 'bx_merge', 'bx_message', 'bx_message_add', 'bx_message_alt', 'bx_message_alt_add', 'bx_message_alt_check', 'bx_message_alt_detail', 'bx_message_alt_dots', 'bx_message_alt_edit', 'bx_message_alt_error', 'bx_message_alt_minus', 'bx_message_alt_x', 'bx_message_check', 'bx_message_detail', 'bx_message_dots', 'bx_message_edit', 'bx_message_error', 'bx_message_minus', 'bx_message_rounded', 'bx_message_rounded_add', 'bx_message_rounded_check', 'bx_message_rounded_detail', 'bx_message_rounded_dots', 'bx_message_rounded_edit', 'bx_message_rounded_error', 'bx_message_rounded_minus', 'bx_message_rounded_x', 'bx_message_square', 'bx_message_square_add', 'bx_message_square_check', 'bx_message_square_detail', 'bx_message_square_dots', 'bx_message_square_edit', 'bx_message_square_error', 'bx_message_square_minus', 'bx_message_square_x', 'bx_message_x', 'bx_meteor', 'bx_microchip', 'bx_microphone', 'bx_microphone_off', 'bx_minus', 'bx_minus_back', 'bx_minus_circle', 'bx_minus_front', 'bx_mobile', 'bx_mobile_alt', 'bx_mobile_landscape', 'bx_mobile_vibration', 'bx_money', 'bx_moon', 'bx_mouse', 'bx_mouse_alt', 'bx_move', 'bx_move_horizontal', 'bx_move_vertical', 'bx_movie', 'bx_movie_play', 'bx_music', 'bx_navigation', 'bx_network_chart', 'bx_news', 'bx_no_entry', 'bx_note', 'bx_notepad', 'bx_notification', 'bx_notification_off', 'bx_outline', 'bx_package', 'bx_paint', 'bx_paint_roll', 'bx_palette', 'bx_paperclip', 'bx_paper_plane', 'bx_paragraph', 'bx_paste', 'bx_pause', 'bx_pause_circle', 'bx_pen', 'bx_pencil', 'bx_phone', 'bx_phone_call', 'bx_phone_incoming', 'bx_phone_outgoing', 'bx_photo_album', 'bx_pie_chart', 'bx_pie_chart_alt', 'bx_pie_chart_alt_2', 'bx_pin', 'bx_planet', 'bx_play', 'bx_play_circle', 'bx_plug', 'bx_plus', 'bx_plus_circle', 'bx_plus_medical', 'bx_pointer', 'bx_poll', 'bx_polygon', 'bx_pound', 'bx_power_off', 'bx_printer', 'bx_pulse', 'bx_purchase_tag', 'bx_purchase_tag_alt', 'bx_pyramid', 'bx_question_mark', 'bx_radar', 'bx_radio', 'bx_radio_circle', 'bx_radio_circle_marked', 'bx_receipt', 'bx_rectangle', 'bx_recycle', 'bx_redo', 'bx_refresh', 'bx_rename', 'bx_repeat', 'bx_reply', 'bx_reply_all', 'bx_repost', 'bx_reset', 'bx_restaurant', 'bx_revision', 'bx_rewind', 'bx_rewind_circle', 'bx_right_arrow', 'bx_right_arrow_alt', 'bx_right_arrow_circle', 'bx_right_down_arrow_circle', 'bx_right_indent', 'bx_right_top_arrow_circle', 'bx_rocket', 'bx_rotate_left', 'bx_rotate_right', 'bx_rss', 'bx_ruble', 'bx_ruler', 'bx_run', 'bx_rupee', 'bx_sad', 'bx_save', 'bx_scan', 'bx_screenshot', 'bx_search', 'bx_search_alt', 'bx_search_alt_2', 'bx_selection', 'bx_select_multiple', 'bx_send', 'bx_server', 'bx_shape_circle', 'bx_shape_polygon', 'bx_shape_square', 'bx_shape_triangle', 'bx_share', 'bx_share_alt', 'bx_shekel', 'bx_shield', 'bx_shield_alt', 'bx_shield_alt_2', 'bx_shield_quarter', 'bx_shield_x', 'bx_shocked', 'bx_shopping_bag', 'bx_show', 'bx_show_alt', 'bx_shuffle', 'bx_sidebar', 'bx_sitemap', 'bx_skip_next', 'bx_skip_next_circle', 'bx_skip_previous', 'bx_skip_previous_circle', 'bx_sleepy', 'bx_slider', 'bx_slider_alt', 'bx_slideshow', 'bx_smile', 'bx_sort', 'bx_sort_alt_2', 'bx_sort_a_z', 'bx_sort_down', 'bx_sort_up', 'bx_sort_z_a', 'bx_spa', 'bx_space_bar', 'bx_spray_can', 'bx_spreadsheet', 'bx_square', 'bx_square_rounded', 'bx_star', 'bx_station', 'bx_stats', 'bx_sticker', 'bx_stop', 'bx_stop_circle', 'bx_stopwatch', 'bx_store', 'bx_store_alt', 'bx_street_view', 'bx_strikethrough', 'bx_subdirectory_left', 'bx_subdirectory_right', 'bx_sun', 'bx_support', 'bx_swim', 'bx_sync', 'bx_tab', 'bx_table', 'bx_tachometer', 'bx_tag', 'bx_tag_alt', 'bx_target_lock', 'bx_task', 'bx_task_x', 'bx_taxi', 'bx_tennis_ball', 'bx_terminal', 'bx_test_tube', 'bx_text', 'bx_time', 'bx_time_five', 'bx_timer', 'bx_tired', 'bx_toggle_left', 'bx_toggle_right', 'bx_tone', 'bx_traffic_cone', 'bx_train', 'bx_transfer', 'bx_transfer_alt', 'bx_trash', 'bx_trash_alt', 'bx_trending_down', 'bx_trending_up', 'bx_trim', 'bx_trip', 'bx_trophy', 'bx_tv', 'bx_underline', 'bx_undo', 'bx_unite', 'bx_unlink', 'bx_up_arrow', 'bx_up_arrow_alt', 'bx_up_arrow_circle', 'bx_upload', 'bx_upside_down', 'bx_upvote', 'bx_usb', 'bx_user', 'bx_user_check', 'bx_user_circle', 'bx_user_minus', 'bx_user_pin', 'bx_user_plus', 'bx_user_voice', 'bx_user_x', 'bx_vector', 'bx_vertical_center', 'bx_vial', 'bx_video', 'bx_video_off', 'bx_video_plus', 'bx_video_recording', 'bx_voicemail', 'bx_volume', 'bx_volume_full', 'bx_volume_low', 'bx_volume_mute', 'bx_walk', 'bx_wallet', 'bx_wallet_alt', 'bx_water', 'bx_webcam', 'bx_wifi', 'bx_wifi_0', 'bx_wifi_1', 'bx_wifi_2', 'bx_wifi_off', 'bx_wind', 'bx_window', 'bx_window_alt', 'bx_window_close', 'bx_window_open', 'bx_windows', 'bx_wine', 'bx_wink_smile', 'bx_wink_tongue', 'bx_won', 'bx_world', 'bx_wrench', 'bx_x', 'bx_x_circle', 'bx_yen', 'bx_zoom_in', 'bx_zoom_out', 'bx_abacus', 'bx_accessibility', 'bx_add_to_queue', 'bx_adjust', 'bx_alarm', 'bxl_android', 'bxl_angular', 'bxl_apple', 'bxl_audible', 'bxl_baidu', 'bxl_behance', 'bxl_bing', 'bxl_bitcoin', 'bxl_blender', 'bxl_blogger', 'bxl_bootstrap', 'bxl_chrome', 'bxl_codepen', 'bxl_c_plus_plus', 'bxl_creative_commons', 'bxl_css3', 'bxl_dailymotion', 'bxl_deviantart', 'bxl_dev_to', 'bxl_digg', 'bxl_digitalocean', 'bxl_discord', 'bxl_discourse', 'bxl_django', 'bxl_dribbble', 'bxl_dropbox', 'bxl_drupal', 'bxl_ebay', 'bxl_edge', 'bxl_etsy', 'bxl_facebook', 'bxl_facebook_circle', 'bxl_facebook_square', 'bxl_figma', 'bxl_firebase', 'bxl_firefox', 'bxl_flickr', 'bxl_flickr_square', 'bxl_foursquare', 'bxl_git', 'bxl_github', 'bxl_gitlab', 'bxl_google', 'bxl_google_cloud', 'bxl_google_plus', 'bxl_google_plus_circle', 'bxl_html5', 'bxl_imdb', 'bxl_instagram', 'bxl_instagram_alt', 'bxl_internet_explorer', 'bxl_invision', 'bxl_javascript', 'bxl_joomla', 'bxl_jquery', 'bxl_jsfiddle', 'bxl_kickstarter', 'bxl_kubernetes__', 'bxl_less', 'bxl_linkedin', 'bxl_linkedin_square', 'bxl_magento', 'bxl_mailchimp', 'bxl_markdown', 'bxl_mastercard', 'bxl_medium', 'bxl_medium_old', 'bxl_medium_square', 'bxl_messenger', 'bxl_microsoft', 'bxl_microsoft_teams', 'bxl_nodejs', 'bxl_ok_ru', 'bxl_opera', 'bxl_patreon', 'bxl_paypal', 'bxl_periscope', 'bxl_pinterest', 'bxl_pinterest_alt', 'bxl_play_store', 'bxl_pocket', 'bxl_product_hunt', 'bxl_python', 'bxl_quora', 'bxl_react', 'bxl_redbubble', 'bxl_reddit', 'bxl_redux', 'bxl_sass', 'bxl_shopify', 'bxl_skype', 'bxl_slack', 'bxl_slack_old', 'bxl_snapchat', 'bxl_soundcloud', 'bxl_spotify', 'bxl_spring_boot', 'bxl_squarespace', 'bxl_stack_overflow', 'bxl_stripe', 'bxl_telegram', 'bxl_trello', 'bxl_tumblr', 'bxl_tux', 'bxl_twitch', 'bxl_twitter', 'bxl_unsplash', 'bxl_vimeo', 'bxl_visa', 'bxl_vk', 'bxl_vuejs', 'bxl_whatsapp', 'bxl_whatsapp_square', 'bxl_wikipedia', 'bxl_windows', 'bxl_wix', 'bxl_wordpress', 'bxl_yahoo', 'bxl_yelp', 'bxl_youtube', 'bxl_zoom', 'bxl_500px', 'bxl_adobe', 'bxl_airbnb', 'bxl_algolia', 'bxl_amazon']);
  dart.defineLazy(flutter_boxicons.Boxicons, {
    /*flutter_boxicons.Boxicons._fontFam*/get _fontFam() {
      return "Boxicons";
    },
    /*flutter_boxicons.Boxicons._fontPackage*/get _fontPackage() {
      return "flutter_boxicons";
    },
    /*flutter_boxicons.Boxicons.bxs_basketball*/get bxs_basketball() {
      return C[8] || CT.C8;
    },
    /*flutter_boxicons.Boxicons.bxs_bath*/get bxs_bath() {
      return C[9] || CT.C9;
    },
    /*flutter_boxicons.Boxicons.bxs_battery*/get bxs_battery() {
      return C[10] || CT.C10;
    },
    /*flutter_boxicons.Boxicons.bxs_battery_charging*/get bxs_battery_charging() {
      return C[11] || CT.C11;
    },
    /*flutter_boxicons.Boxicons.bxs_battery_full*/get bxs_battery_full() {
      return C[12] || CT.C12;
    },
    /*flutter_boxicons.Boxicons.bxs_battery_low*/get bxs_battery_low() {
      return C[13] || CT.C13;
    },
    /*flutter_boxicons.Boxicons.bxs_bed*/get bxs_bed() {
      return C[14] || CT.C14;
    },
    /*flutter_boxicons.Boxicons.bxs_been_here*/get bxs_been_here() {
      return C[15] || CT.C15;
    },
    /*flutter_boxicons.Boxicons.bxs_beer*/get bxs_beer() {
      return C[16] || CT.C16;
    },
    /*flutter_boxicons.Boxicons.bxs_bell*/get bxs_bell() {
      return C[17] || CT.C17;
    },
    /*flutter_boxicons.Boxicons.bxs_bell_minus*/get bxs_bell_minus() {
      return C[18] || CT.C18;
    },
    /*flutter_boxicons.Boxicons.bxs_bell_off*/get bxs_bell_off() {
      return C[19] || CT.C19;
    },
    /*flutter_boxicons.Boxicons.bxs_bell_plus*/get bxs_bell_plus() {
      return C[20] || CT.C20;
    },
    /*flutter_boxicons.Boxicons.bxs_bell_ring*/get bxs_bell_ring() {
      return C[21] || CT.C21;
    },
    /*flutter_boxicons.Boxicons.bxs_bible*/get bxs_bible() {
      return C[22] || CT.C22;
    },
    /*flutter_boxicons.Boxicons.bxs_binoculars*/get bxs_binoculars() {
      return C[23] || CT.C23;
    },
    /*flutter_boxicons.Boxicons.bxs_blanket*/get bxs_blanket() {
      return C[24] || CT.C24;
    },
    /*flutter_boxicons.Boxicons.bxs_bolt*/get bxs_bolt() {
      return C[25] || CT.C25;
    },
    /*flutter_boxicons.Boxicons.bxs_bolt_circle*/get bxs_bolt_circle() {
      return C[26] || CT.C26;
    },
    /*flutter_boxicons.Boxicons.bxs_bomb*/get bxs_bomb() {
      return C[27] || CT.C27;
    },
    /*flutter_boxicons.Boxicons.bxs_bone*/get bxs_bone() {
      return C[28] || CT.C28;
    },
    /*flutter_boxicons.Boxicons.bxs_bong*/get bxs_bong() {
      return C[29] || CT.C29;
    },
    /*flutter_boxicons.Boxicons.bxs_book*/get bxs_book() {
      return C[30] || CT.C30;
    },
    /*flutter_boxicons.Boxicons.bxs_book_add*/get bxs_book_add() {
      return C[31] || CT.C31;
    },
    /*flutter_boxicons.Boxicons.bxs_book_alt*/get bxs_book_alt() {
      return C[32] || CT.C32;
    },
    /*flutter_boxicons.Boxicons.bxs_book_bookmark*/get bxs_book_bookmark() {
      return C[33] || CT.C33;
    },
    /*flutter_boxicons.Boxicons.bxs_book_content*/get bxs_book_content() {
      return C[34] || CT.C34;
    },
    /*flutter_boxicons.Boxicons.bxs_book_heart*/get bxs_book_heart() {
      return C[35] || CT.C35;
    },
    /*flutter_boxicons.Boxicons.bxs_bookmark*/get bxs_bookmark() {
      return C[36] || CT.C36;
    },
    /*flutter_boxicons.Boxicons.bxs_bookmark_alt*/get bxs_bookmark_alt() {
      return C[37] || CT.C37;
    },
    /*flutter_boxicons.Boxicons.bxs_bookmark_alt_minus*/get bxs_bookmark_alt_minus() {
      return C[38] || CT.C38;
    },
    /*flutter_boxicons.Boxicons.bxs_bookmark_alt_plus*/get bxs_bookmark_alt_plus() {
      return C[39] || CT.C39;
    },
    /*flutter_boxicons.Boxicons.bxs_bookmark_heart*/get bxs_bookmark_heart() {
      return C[40] || CT.C40;
    },
    /*flutter_boxicons.Boxicons.bxs_bookmark_minus*/get bxs_bookmark_minus() {
      return C[41] || CT.C41;
    },
    /*flutter_boxicons.Boxicons.bxs_bookmark_plus*/get bxs_bookmark_plus() {
      return C[42] || CT.C42;
    },
    /*flutter_boxicons.Boxicons.bxs_bookmarks*/get bxs_bookmarks() {
      return C[43] || CT.C43;
    },
    /*flutter_boxicons.Boxicons.bxs_bookmark_star*/get bxs_bookmark_star() {
      return C[44] || CT.C44;
    },
    /*flutter_boxicons.Boxicons.bxs_book_open*/get bxs_book_open() {
      return C[45] || CT.C45;
    },
    /*flutter_boxicons.Boxicons.bxs_book_reader*/get bxs_book_reader() {
      return C[46] || CT.C46;
    },
    /*flutter_boxicons.Boxicons.bxs_bot*/get bxs_bot() {
      return C[47] || CT.C47;
    },
    /*flutter_boxicons.Boxicons.bxs_bowling_ball*/get bxs_bowling_ball() {
      return C[48] || CT.C48;
    },
    /*flutter_boxicons.Boxicons.bxs_box*/get bxs_box() {
      return C[49] || CT.C49;
    },
    /*flutter_boxicons.Boxicons.bxs_brain*/get bxs_brain() {
      return C[50] || CT.C50;
    },
    /*flutter_boxicons.Boxicons.bxs_briefcase*/get bxs_briefcase() {
      return C[51] || CT.C51;
    },
    /*flutter_boxicons.Boxicons.bxs_briefcase_alt*/get bxs_briefcase_alt() {
      return C[52] || CT.C52;
    },
    /*flutter_boxicons.Boxicons.bxs_briefcase_alt_2*/get bxs_briefcase_alt_2() {
      return C[53] || CT.C53;
    },
    /*flutter_boxicons.Boxicons.bxs_brightness*/get bxs_brightness() {
      return C[54] || CT.C54;
    },
    /*flutter_boxicons.Boxicons.bxs_brightness_half*/get bxs_brightness_half() {
      return C[55] || CT.C55;
    },
    /*flutter_boxicons.Boxicons.bxs_brush*/get bxs_brush() {
      return C[56] || CT.C56;
    },
    /*flutter_boxicons.Boxicons.bxs_brush_alt*/get bxs_brush_alt() {
      return C[57] || CT.C57;
    },
    /*flutter_boxicons.Boxicons.bxs_bug*/get bxs_bug() {
      return C[58] || CT.C58;
    },
    /*flutter_boxicons.Boxicons.bxs_bug_alt*/get bxs_bug_alt() {
      return C[59] || CT.C59;
    },
    /*flutter_boxicons.Boxicons.bxs_building*/get bxs_building() {
      return C[60] || CT.C60;
    },
    /*flutter_boxicons.Boxicons.bxs_building_house*/get bxs_building_house() {
      return C[61] || CT.C61;
    },
    /*flutter_boxicons.Boxicons.bxs_buildings*/get bxs_buildings() {
      return C[62] || CT.C62;
    },
    /*flutter_boxicons.Boxicons.bxs_bulb*/get bxs_bulb() {
      return C[63] || CT.C63;
    },
    /*flutter_boxicons.Boxicons.bxs_bullseye*/get bxs_bullseye() {
      return C[64] || CT.C64;
    },
    /*flutter_boxicons.Boxicons.bxs_buoy*/get bxs_buoy() {
      return C[65] || CT.C65;
    },
    /*flutter_boxicons.Boxicons.bxs_bus*/get bxs_bus() {
      return C[66] || CT.C66;
    },
    /*flutter_boxicons.Boxicons.bxs_business*/get bxs_business() {
      return C[67] || CT.C67;
    },
    /*flutter_boxicons.Boxicons.bxs_bus_school*/get bxs_bus_school() {
      return C[68] || CT.C68;
    },
    /*flutter_boxicons.Boxicons.bxs_cabinet*/get bxs_cabinet() {
      return C[69] || CT.C69;
    },
    /*flutter_boxicons.Boxicons.bxs_cake*/get bxs_cake() {
      return C[70] || CT.C70;
    },
    /*flutter_boxicons.Boxicons.bxs_calculator*/get bxs_calculator() {
      return C[71] || CT.C71;
    },
    /*flutter_boxicons.Boxicons.bxs_calendar*/get bxs_calendar() {
      return C[72] || CT.C72;
    },
    /*flutter_boxicons.Boxicons.bxs_calendar_alt*/get bxs_calendar_alt() {
      return C[73] || CT.C73;
    },
    /*flutter_boxicons.Boxicons.bxs_calendar_check*/get bxs_calendar_check() {
      return C[74] || CT.C74;
    },
    /*flutter_boxicons.Boxicons.bxs_calendar_edit*/get bxs_calendar_edit() {
      return C[75] || CT.C75;
    },
    /*flutter_boxicons.Boxicons.bxs_calendar_event*/get bxs_calendar_event() {
      return C[76] || CT.C76;
    },
    /*flutter_boxicons.Boxicons.bxs_calendar_exclamation*/get bxs_calendar_exclamation() {
      return C[77] || CT.C77;
    },
    /*flutter_boxicons.Boxicons.bxs_calendar_heart*/get bxs_calendar_heart() {
      return C[78] || CT.C78;
    },
    /*flutter_boxicons.Boxicons.bxs_calendar_minus*/get bxs_calendar_minus() {
      return C[79] || CT.C79;
    },
    /*flutter_boxicons.Boxicons.bxs_calendar_plus*/get bxs_calendar_plus() {
      return C[80] || CT.C80;
    },
    /*flutter_boxicons.Boxicons.bxs_calendar_star*/get bxs_calendar_star() {
      return C[81] || CT.C81;
    },
    /*flutter_boxicons.Boxicons.bxs_calendar_week*/get bxs_calendar_week() {
      return C[82] || CT.C82;
    },
    /*flutter_boxicons.Boxicons.bxs_calendar_x*/get bxs_calendar_x() {
      return C[83] || CT.C83;
    },
    /*flutter_boxicons.Boxicons.bxs_camera*/get bxs_camera() {
      return C[84] || CT.C84;
    },
    /*flutter_boxicons.Boxicons.bxs_camera_home*/get bxs_camera_home() {
      return C[85] || CT.C85;
    },
    /*flutter_boxicons.Boxicons.bxs_camera_movie*/get bxs_camera_movie() {
      return C[86] || CT.C86;
    },
    /*flutter_boxicons.Boxicons.bxs_camera_off*/get bxs_camera_off() {
      return C[87] || CT.C87;
    },
    /*flutter_boxicons.Boxicons.bxs_camera_plus*/get bxs_camera_plus() {
      return C[88] || CT.C88;
    },
    /*flutter_boxicons.Boxicons.bxs_capsule*/get bxs_capsule() {
      return C[89] || CT.C89;
    },
    /*flutter_boxicons.Boxicons.bxs_captions*/get bxs_captions() {
      return C[90] || CT.C90;
    },
    /*flutter_boxicons.Boxicons.bxs_car*/get bxs_car() {
      return C[91] || CT.C91;
    },
    /*flutter_boxicons.Boxicons.bxs_car_battery*/get bxs_car_battery() {
      return C[92] || CT.C92;
    },
    /*flutter_boxicons.Boxicons.bxs_car_crash*/get bxs_car_crash() {
      return C[93] || CT.C93;
    },
    /*flutter_boxicons.Boxicons.bxs_card*/get bxs_card() {
      return C[94] || CT.C94;
    },
    /*flutter_boxicons.Boxicons.bxs_caret_down_circle*/get bxs_caret_down_circle() {
      return C[95] || CT.C95;
    },
    /*flutter_boxicons.Boxicons.bxs_caret_down_square*/get bxs_caret_down_square() {
      return C[96] || CT.C96;
    },
    /*flutter_boxicons.Boxicons.bxs_caret_left_circle*/get bxs_caret_left_circle() {
      return C[97] || CT.C97;
    },
    /*flutter_boxicons.Boxicons.bxs_caret_left_square*/get bxs_caret_left_square() {
      return C[98] || CT.C98;
    },
    /*flutter_boxicons.Boxicons.bxs_caret_right_circle*/get bxs_caret_right_circle() {
      return C[99] || CT.C99;
    },
    /*flutter_boxicons.Boxicons.bxs_caret_right_square*/get bxs_caret_right_square() {
      return C[100] || CT.C100;
    },
    /*flutter_boxicons.Boxicons.bxs_caret_up_circle*/get bxs_caret_up_circle() {
      return C[101] || CT.C101;
    },
    /*flutter_boxicons.Boxicons.bxs_caret_up_square*/get bxs_caret_up_square() {
      return C[102] || CT.C102;
    },
    /*flutter_boxicons.Boxicons.bxs_car_garage*/get bxs_car_garage() {
      return C[103] || CT.C103;
    },
    /*flutter_boxicons.Boxicons.bxs_car_mechanic*/get bxs_car_mechanic() {
      return C[104] || CT.C104;
    },
    /*flutter_boxicons.Boxicons.bxs_carousel*/get bxs_carousel() {
      return C[105] || CT.C105;
    },
    /*flutter_boxicons.Boxicons.bxs_cart*/get bxs_cart() {
      return C[106] || CT.C106;
    },
    /*flutter_boxicons.Boxicons.bxs_cart_add*/get bxs_cart_add() {
      return C[107] || CT.C107;
    },
    /*flutter_boxicons.Boxicons.bxs_cart_alt*/get bxs_cart_alt() {
      return C[108] || CT.C108;
    },
    /*flutter_boxicons.Boxicons.bxs_cart_download*/get bxs_cart_download() {
      return C[109] || CT.C109;
    },
    /*flutter_boxicons.Boxicons.bxs_car_wash*/get bxs_car_wash() {
      return C[110] || CT.C110;
    },
    /*flutter_boxicons.Boxicons.bxs_category*/get bxs_category() {
      return C[111] || CT.C111;
    },
    /*flutter_boxicons.Boxicons.bxs_category_alt*/get bxs_category_alt() {
      return C[112] || CT.C112;
    },
    /*flutter_boxicons.Boxicons.bxs_cctv*/get bxs_cctv() {
      return C[113] || CT.C113;
    },
    /*flutter_boxicons.Boxicons.bxs_certification*/get bxs_certification() {
      return C[114] || CT.C114;
    },
    /*flutter_boxicons.Boxicons.bxs_chalkboard*/get bxs_chalkboard() {
      return C[115] || CT.C115;
    },
    /*flutter_boxicons.Boxicons.bxs_chart*/get bxs_chart() {
      return C[116] || CT.C116;
    },
    /*flutter_boxicons.Boxicons.bxs_chat*/get bxs_chat() {
      return C[117] || CT.C117;
    },
    /*flutter_boxicons.Boxicons.bxs_checkbox*/get bxs_checkbox() {
      return C[118] || CT.C118;
    },
    /*flutter_boxicons.Boxicons.bxs_checkbox_checked*/get bxs_checkbox_checked() {
      return C[119] || CT.C119;
    },
    /*flutter_boxicons.Boxicons.bxs_check_circle*/get bxs_check_circle() {
      return C[120] || CT.C120;
    },
    /*flutter_boxicons.Boxicons.bxs_check_shield*/get bxs_check_shield() {
      return C[121] || CT.C121;
    },
    /*flutter_boxicons.Boxicons.bxs_check_square*/get bxs_check_square() {
      return C[122] || CT.C122;
    },
    /*flutter_boxicons.Boxicons.bxs_chess*/get bxs_chess() {
      return C[123] || CT.C123;
    },
    /*flutter_boxicons.Boxicons.bxs_chevron_down*/get bxs_chevron_down() {
      return C[124] || CT.C124;
    },
    /*flutter_boxicons.Boxicons.bxs_chevron_down_circle*/get bxs_chevron_down_circle() {
      return C[125] || CT.C125;
    },
    /*flutter_boxicons.Boxicons.bxs_chevron_down_square*/get bxs_chevron_down_square() {
      return C[126] || CT.C126;
    },
    /*flutter_boxicons.Boxicons.bxs_chevron_left*/get bxs_chevron_left() {
      return C[127] || CT.C127;
    },
    /*flutter_boxicons.Boxicons.bxs_chevron_left_circle*/get bxs_chevron_left_circle() {
      return C[128] || CT.C128;
    },
    /*flutter_boxicons.Boxicons.bxs_chevron_left_square*/get bxs_chevron_left_square() {
      return C[129] || CT.C129;
    },
    /*flutter_boxicons.Boxicons.bxs_chevron_right*/get bxs_chevron_right() {
      return C[130] || CT.C130;
    },
    /*flutter_boxicons.Boxicons.bxs_chevron_right_circle*/get bxs_chevron_right_circle() {
      return C[131] || CT.C131;
    },
    /*flutter_boxicons.Boxicons.bxs_chevron_right_square*/get bxs_chevron_right_square() {
      return C[132] || CT.C132;
    },
    /*flutter_boxicons.Boxicons.bxs_chevrons_down*/get bxs_chevrons_down() {
      return C[133] || CT.C133;
    },
    /*flutter_boxicons.Boxicons.bxs_chevrons_left*/get bxs_chevrons_left() {
      return C[134] || CT.C134;
    },
    /*flutter_boxicons.Boxicons.bxs_chevrons_right*/get bxs_chevrons_right() {
      return C[135] || CT.C135;
    },
    /*flutter_boxicons.Boxicons.bxs_chevrons_up*/get bxs_chevrons_up() {
      return C[136] || CT.C136;
    },
    /*flutter_boxicons.Boxicons.bxs_chevron_up*/get bxs_chevron_up() {
      return C[137] || CT.C137;
    },
    /*flutter_boxicons.Boxicons.bxs_chevron_up_circle*/get bxs_chevron_up_circle() {
      return C[138] || CT.C138;
    },
    /*flutter_boxicons.Boxicons.bxs_chevron_up_square*/get bxs_chevron_up_square() {
      return C[139] || CT.C139;
    },
    /*flutter_boxicons.Boxicons.bxs_chip*/get bxs_chip() {
      return C[140] || CT.C140;
    },
    /*flutter_boxicons.Boxicons.bxs_church*/get bxs_church() {
      return C[141] || CT.C141;
    },
    /*flutter_boxicons.Boxicons.bxs_circle*/get bxs_circle() {
      return C[142] || CT.C142;
    },
    /*flutter_boxicons.Boxicons.bxs_city*/get bxs_city() {
      return C[143] || CT.C143;
    },
    /*flutter_boxicons.Boxicons.bxs_clinic*/get bxs_clinic() {
      return C[144] || CT.C144;
    },
    /*flutter_boxicons.Boxicons.bxs_cloud*/get bxs_cloud() {
      return C[145] || CT.C145;
    },
    /*flutter_boxicons.Boxicons.bxs_cloud_download*/get bxs_cloud_download() {
      return C[146] || CT.C146;
    },
    /*flutter_boxicons.Boxicons.bxs_cloud_lightning*/get bxs_cloud_lightning() {
      return C[147] || CT.C147;
    },
    /*flutter_boxicons.Boxicons.bxs_cloud_rain*/get bxs_cloud_rain() {
      return C[148] || CT.C148;
    },
    /*flutter_boxicons.Boxicons.bxs_cloud_upload*/get bxs_cloud_upload() {
      return C[149] || CT.C149;
    },
    /*flutter_boxicons.Boxicons.bxs_coffee*/get bxs_coffee() {
      return C[150] || CT.C150;
    },
    /*flutter_boxicons.Boxicons.bxs_coffee_alt*/get bxs_coffee_alt() {
      return C[151] || CT.C151;
    },
    /*flutter_boxicons.Boxicons.bxs_coffee_togo*/get bxs_coffee_togo() {
      return C[152] || CT.C152;
    },
    /*flutter_boxicons.Boxicons.bxs_cog*/get bxs_cog() {
      return C[153] || CT.C153;
    },
    /*flutter_boxicons.Boxicons.bxs_coin*/get bxs_coin() {
      return C[154] || CT.C154;
    },
    /*flutter_boxicons.Boxicons.bxs_coin_stack*/get bxs_coin_stack() {
      return C[155] || CT.C155;
    },
    /*flutter_boxicons.Boxicons.bxs_collection*/get bxs_collection() {
      return C[156] || CT.C156;
    },
    /*flutter_boxicons.Boxicons.bxs_color_fill*/get bxs_color_fill() {
      return C[157] || CT.C157;
    },
    /*flutter_boxicons.Boxicons.bxs_comment*/get bxs_comment() {
      return C[158] || CT.C158;
    },
    /*flutter_boxicons.Boxicons.bxs_comment_add*/get bxs_comment_add() {
      return C[159] || CT.C159;
    },
    /*flutter_boxicons.Boxicons.bxs_comment_check*/get bxs_comment_check() {
      return C[160] || CT.C160;
    },
    /*flutter_boxicons.Boxicons.bxs_comment_detail*/get bxs_comment_detail() {
      return C[161] || CT.C161;
    },
    /*flutter_boxicons.Boxicons.bxs_comment_dots*/get bxs_comment_dots() {
      return C[162] || CT.C162;
    },
    /*flutter_boxicons.Boxicons.bxs_comment_edit*/get bxs_comment_edit() {
      return C[163] || CT.C163;
    },
    /*flutter_boxicons.Boxicons.bxs_comment_error*/get bxs_comment_error() {
      return C[164] || CT.C164;
    },
    /*flutter_boxicons.Boxicons.bxs_comment_minus*/get bxs_comment_minus() {
      return C[165] || CT.C165;
    },
    /*flutter_boxicons.Boxicons.bxs_comment_x*/get bxs_comment_x() {
      return C[166] || CT.C166;
    },
    /*flutter_boxicons.Boxicons.bxs_compass*/get bxs_compass() {
      return C[167] || CT.C167;
    },
    /*flutter_boxicons.Boxicons.bxs_component*/get bxs_component() {
      return C[168] || CT.C168;
    },
    /*flutter_boxicons.Boxicons.bxs_confused*/get bxs_confused() {
      return C[169] || CT.C169;
    },
    /*flutter_boxicons.Boxicons.bxs_contact*/get bxs_contact() {
      return C[170] || CT.C170;
    },
    /*flutter_boxicons.Boxicons.bxs_conversation*/get bxs_conversation() {
      return C[171] || CT.C171;
    },
    /*flutter_boxicons.Boxicons.bxs_cookie*/get bxs_cookie() {
      return C[172] || CT.C172;
    },
    /*flutter_boxicons.Boxicons.bxs_cool*/get bxs_cool() {
      return C[173] || CT.C173;
    },
    /*flutter_boxicons.Boxicons.bxs_copy*/get bxs_copy() {
      return C[174] || CT.C174;
    },
    /*flutter_boxicons.Boxicons.bxs_copy_alt*/get bxs_copy_alt() {
      return C[175] || CT.C175;
    },
    /*flutter_boxicons.Boxicons.bxs_copyright*/get bxs_copyright() {
      return C[176] || CT.C176;
    },
    /*flutter_boxicons.Boxicons.bxs_coupon*/get bxs_coupon() {
      return C[177] || CT.C177;
    },
    /*flutter_boxicons.Boxicons.bxs_credit_card*/get bxs_credit_card() {
      return C[178] || CT.C178;
    },
    /*flutter_boxicons.Boxicons.bxs_credit_card_alt*/get bxs_credit_card_alt() {
      return C[179] || CT.C179;
    },
    /*flutter_boxicons.Boxicons.bxs_credit_card_front*/get bxs_credit_card_front() {
      return C[180] || CT.C180;
    },
    /*flutter_boxicons.Boxicons.bxs_crop*/get bxs_crop() {
      return C[181] || CT.C181;
    },
    /*flutter_boxicons.Boxicons.bxs_crown*/get bxs_crown() {
      return C[182] || CT.C182;
    },
    /*flutter_boxicons.Boxicons.bxs_cube*/get bxs_cube() {
      return C[183] || CT.C183;
    },
    /*flutter_boxicons.Boxicons.bxs_cube_alt*/get bxs_cube_alt() {
      return C[184] || CT.C184;
    },
    /*flutter_boxicons.Boxicons.bxs_cuboid*/get bxs_cuboid() {
      return C[185] || CT.C185;
    },
    /*flutter_boxicons.Boxicons.bxs_customize*/get bxs_customize() {
      return C[186] || CT.C186;
    },
    /*flutter_boxicons.Boxicons.bxs_cylinder*/get bxs_cylinder() {
      return C[187] || CT.C187;
    },
    /*flutter_boxicons.Boxicons.bxs_dashboard*/get bxs_dashboard() {
      return C[188] || CT.C188;
    },
    /*flutter_boxicons.Boxicons.bxs_data*/get bxs_data() {
      return C[189] || CT.C189;
    },
    /*flutter_boxicons.Boxicons.bxs_detail*/get bxs_detail() {
      return C[190] || CT.C190;
    },
    /*flutter_boxicons.Boxicons.bxs_devices*/get bxs_devices() {
      return C[191] || CT.C191;
    },
    /*flutter_boxicons.Boxicons.bxs_diamond*/get bxs_diamond() {
      return C[192] || CT.C192;
    },
    /*flutter_boxicons.Boxicons.bxs_dice_1*/get bxs_dice_1() {
      return C[193] || CT.C193;
    },
    /*flutter_boxicons.Boxicons.bxs_dice_2*/get bxs_dice_2() {
      return C[194] || CT.C194;
    },
    /*flutter_boxicons.Boxicons.bxs_dice_3*/get bxs_dice_3() {
      return C[195] || CT.C195;
    },
    /*flutter_boxicons.Boxicons.bxs_dice_4*/get bxs_dice_4() {
      return C[196] || CT.C196;
    },
    /*flutter_boxicons.Boxicons.bxs_dice_5*/get bxs_dice_5() {
      return C[197] || CT.C197;
    },
    /*flutter_boxicons.Boxicons.bxs_dice_6*/get bxs_dice_6() {
      return C[198] || CT.C198;
    },
    /*flutter_boxicons.Boxicons.bxs_direction_left*/get bxs_direction_left() {
      return C[199] || CT.C199;
    },
    /*flutter_boxicons.Boxicons.bxs_direction_right*/get bxs_direction_right() {
      return C[200] || CT.C200;
    },
    /*flutter_boxicons.Boxicons.bxs_directions*/get bxs_directions() {
      return C[201] || CT.C201;
    },
    /*flutter_boxicons.Boxicons.bxs_disc*/get bxs_disc() {
      return C[202] || CT.C202;
    },
    /*flutter_boxicons.Boxicons.bxs_discount*/get bxs_discount() {
      return C[203] || CT.C203;
    },
    /*flutter_boxicons.Boxicons.bxs_dish*/get bxs_dish() {
      return C[204] || CT.C204;
    },
    /*flutter_boxicons.Boxicons.bxs_dislike*/get bxs_dislike() {
      return C[205] || CT.C205;
    },
    /*flutter_boxicons.Boxicons.bxs_dizzy*/get bxs_dizzy() {
      return C[206] || CT.C206;
    },
    /*flutter_boxicons.Boxicons.bxs_dock_bottom*/get bxs_dock_bottom() {
      return C[207] || CT.C207;
    },
    /*flutter_boxicons.Boxicons.bxs_dock_left*/get bxs_dock_left() {
      return C[208] || CT.C208;
    },
    /*flutter_boxicons.Boxicons.bxs_dock_right*/get bxs_dock_right() {
      return C[209] || CT.C209;
    },
    /*flutter_boxicons.Boxicons.bxs_dock_top*/get bxs_dock_top() {
      return C[210] || CT.C210;
    },
    /*flutter_boxicons.Boxicons.bxs_dollar_circle*/get bxs_dollar_circle() {
      return C[211] || CT.C211;
    },
    /*flutter_boxicons.Boxicons.bxs_donate_blood*/get bxs_donate_blood() {
      return C[212] || CT.C212;
    },
    /*flutter_boxicons.Boxicons.bxs_donate_heart*/get bxs_donate_heart() {
      return C[213] || CT.C213;
    },
    /*flutter_boxicons.Boxicons.bxs_door_open*/get bxs_door_open() {
      return C[214] || CT.C214;
    },
    /*flutter_boxicons.Boxicons.bxs_doughnut_chart*/get bxs_doughnut_chart() {
      return C[215] || CT.C215;
    },
    /*flutter_boxicons.Boxicons.bxs_down_arrow*/get bxs_down_arrow() {
      return C[216] || CT.C216;
    },
    /*flutter_boxicons.Boxicons.bxs_down_arrow_alt*/get bxs_down_arrow_alt() {
      return C[217] || CT.C217;
    },
    /*flutter_boxicons.Boxicons.bxs_down_arrow_circle*/get bxs_down_arrow_circle() {
      return C[218] || CT.C218;
    },
    /*flutter_boxicons.Boxicons.bxs_down_arrow_square*/get bxs_down_arrow_square() {
      return C[219] || CT.C219;
    },
    /*flutter_boxicons.Boxicons.bxs_download*/get bxs_download() {
      return C[220] || CT.C220;
    },
    /*flutter_boxicons.Boxicons.bxs_downvote*/get bxs_downvote() {
      return C[221] || CT.C221;
    },
    /*flutter_boxicons.Boxicons.bxs_drink*/get bxs_drink() {
      return C[222] || CT.C222;
    },
    /*flutter_boxicons.Boxicons.bxs_droplet*/get bxs_droplet() {
      return C[223] || CT.C223;
    },
    /*flutter_boxicons.Boxicons.bxs_droplet_half*/get bxs_droplet_half() {
      return C[224] || CT.C224;
    },
    /*flutter_boxicons.Boxicons.bxs_dryer*/get bxs_dryer() {
      return C[225] || CT.C225;
    },
    /*flutter_boxicons.Boxicons.bxs_duplicate*/get bxs_duplicate() {
      return C[226] || CT.C226;
    },
    /*flutter_boxicons.Boxicons.bxs_edit*/get bxs_edit() {
      return C[227] || CT.C227;
    },
    /*flutter_boxicons.Boxicons.bxs_edit_alt*/get bxs_edit_alt() {
      return C[228] || CT.C228;
    },
    /*flutter_boxicons.Boxicons.bxs_edit_location*/get bxs_edit_location() {
      return C[229] || CT.C229;
    },
    /*flutter_boxicons.Boxicons.bxs_eject*/get bxs_eject() {
      return C[230] || CT.C230;
    },
    /*flutter_boxicons.Boxicons.bxs_envelope*/get bxs_envelope() {
      return C[231] || CT.C231;
    },
    /*flutter_boxicons.Boxicons.bxs_envelope_open*/get bxs_envelope_open() {
      return C[232] || CT.C232;
    },
    /*flutter_boxicons.Boxicons.bxs_eraser*/get bxs_eraser() {
      return C[233] || CT.C233;
    },
    /*flutter_boxicons.Boxicons.bxs_error*/get bxs_error() {
      return C[234] || CT.C234;
    },
    /*flutter_boxicons.Boxicons.bxs_error_alt*/get bxs_error_alt() {
      return C[235] || CT.C235;
    },
    /*flutter_boxicons.Boxicons.bxs_error_circle*/get bxs_error_circle() {
      return C[236] || CT.C236;
    },
    /*flutter_boxicons.Boxicons.bxs_ev_station*/get bxs_ev_station() {
      return C[237] || CT.C237;
    },
    /*flutter_boxicons.Boxicons.bxs_exit*/get bxs_exit() {
      return C[238] || CT.C238;
    },
    /*flutter_boxicons.Boxicons.bxs_extension*/get bxs_extension() {
      return C[239] || CT.C239;
    },
    /*flutter_boxicons.Boxicons.bxs_eyedropper*/get bxs_eyedropper() {
      return C[240] || CT.C240;
    },
    /*flutter_boxicons.Boxicons.bxs_face*/get bxs_face() {
      return C[241] || CT.C241;
    },
    /*flutter_boxicons.Boxicons.bxs_face_mask*/get bxs_face_mask() {
      return C[242] || CT.C242;
    },
    /*flutter_boxicons.Boxicons.bxs_factory*/get bxs_factory() {
      return C[243] || CT.C243;
    },
    /*flutter_boxicons.Boxicons.bxs_fast_forward_circle*/get bxs_fast_forward_circle() {
      return C[244] || CT.C244;
    },
    /*flutter_boxicons.Boxicons.bxs_file*/get bxs_file() {
      return C[245] || CT.C245;
    },
    /*flutter_boxicons.Boxicons.bxs_file_archive*/get bxs_file_archive() {
      return C[246] || CT.C246;
    },
    /*flutter_boxicons.Boxicons.bxs_file_blank*/get bxs_file_blank() {
      return C[247] || CT.C247;
    },
    /*flutter_boxicons.Boxicons.bxs_file_css*/get bxs_file_css() {
      return C[248] || CT.C248;
    },
    /*flutter_boxicons.Boxicons.bxs_file_doc*/get bxs_file_doc() {
      return C[249] || CT.C249;
    },
    /*flutter_boxicons.Boxicons.bxs_file_export*/get bxs_file_export() {
      return C[250] || CT.C250;
    },
    /*flutter_boxicons.Boxicons.bxs_file_find*/get bxs_file_find() {
      return C[251] || CT.C251;
    },
    /*flutter_boxicons.Boxicons.bxs_file_gif*/get bxs_file_gif() {
      return C[252] || CT.C252;
    },
    /*flutter_boxicons.Boxicons.bxs_file_html*/get bxs_file_html() {
      return C[253] || CT.C253;
    },
    /*flutter_boxicons.Boxicons.bxs_file_image*/get bxs_file_image() {
      return C[254] || CT.C254;
    },
    /*flutter_boxicons.Boxicons.bxs_file_import*/get bxs_file_import() {
      return C[255] || CT.C255;
    },
    /*flutter_boxicons.Boxicons.bxs_file_jpg*/get bxs_file_jpg() {
      return C[256] || CT.C256;
    },
    /*flutter_boxicons.Boxicons.bxs_file_js*/get bxs_file_js() {
      return C[257] || CT.C257;
    },
    /*flutter_boxicons.Boxicons.bxs_file_json*/get bxs_file_json() {
      return C[258] || CT.C258;
    },
    /*flutter_boxicons.Boxicons.bxs_file_md*/get bxs_file_md() {
      return C[259] || CT.C259;
    },
    /*flutter_boxicons.Boxicons.bxs_file_pdf*/get bxs_file_pdf() {
      return C[260] || CT.C260;
    },
    /*flutter_boxicons.Boxicons.bxs_file_plus*/get bxs_file_plus() {
      return C[261] || CT.C261;
    },
    /*flutter_boxicons.Boxicons.bxs_file_png*/get bxs_file_png() {
      return C[262] || CT.C262;
    },
    /*flutter_boxicons.Boxicons.bxs_file_txt*/get bxs_file_txt() {
      return C[263] || CT.C263;
    },
    /*flutter_boxicons.Boxicons.bxs_film*/get bxs_film() {
      return C[264] || CT.C264;
    },
    /*flutter_boxicons.Boxicons.bxs_filter_alt*/get bxs_filter_alt() {
      return C[265] || CT.C265;
    },
    /*flutter_boxicons.Boxicons.bxs_first_aid*/get bxs_first_aid() {
      return C[266] || CT.C266;
    },
    /*flutter_boxicons.Boxicons.bxs_flag*/get bxs_flag() {
      return C[267] || CT.C267;
    },
    /*flutter_boxicons.Boxicons.bxs_flag_alt*/get bxs_flag_alt() {
      return C[268] || CT.C268;
    },
    /*flutter_boxicons.Boxicons.bxs_flag_checkered*/get bxs_flag_checkered() {
      return C[269] || CT.C269;
    },
    /*flutter_boxicons.Boxicons.bxs_flame*/get bxs_flame() {
      return C[270] || CT.C270;
    },
    /*flutter_boxicons.Boxicons.bxs_flask*/get bxs_flask() {
      return C[271] || CT.C271;
    },
    /*flutter_boxicons.Boxicons.bxs_florist*/get bxs_florist() {
      return C[272] || CT.C272;
    },
    /*flutter_boxicons.Boxicons.bxs_folder*/get bxs_folder() {
      return C[273] || CT.C273;
    },
    /*flutter_boxicons.Boxicons.bxs_folder_minus*/get bxs_folder_minus() {
      return C[274] || CT.C274;
    },
    /*flutter_boxicons.Boxicons.bxs_folder_open*/get bxs_folder_open() {
      return C[275] || CT.C275;
    },
    /*flutter_boxicons.Boxicons.bxs_folder_plus*/get bxs_folder_plus() {
      return C[276] || CT.C276;
    },
    /*flutter_boxicons.Boxicons.bxs_food_menu*/get bxs_food_menu() {
      return C[277] || CT.C277;
    },
    /*flutter_boxicons.Boxicons.bxs_fridge*/get bxs_fridge() {
      return C[278] || CT.C278;
    },
    /*flutter_boxicons.Boxicons.bxs_game*/get bxs_game() {
      return C[279] || CT.C279;
    },
    /*flutter_boxicons.Boxicons.bxs_gas_pump*/get bxs_gas_pump() {
      return C[280] || CT.C280;
    },
    /*flutter_boxicons.Boxicons.bxs_ghost*/get bxs_ghost() {
      return C[281] || CT.C281;
    },
    /*flutter_boxicons.Boxicons.bxs_gift*/get bxs_gift() {
      return C[282] || CT.C282;
    },
    /*flutter_boxicons.Boxicons.bxs_graduation*/get bxs_graduation() {
      return C[283] || CT.C283;
    },
    /*flutter_boxicons.Boxicons.bxs_grid*/get bxs_grid() {
      return C[284] || CT.C284;
    },
    /*flutter_boxicons.Boxicons.bxs_grid_alt*/get bxs_grid_alt() {
      return C[285] || CT.C285;
    },
    /*flutter_boxicons.Boxicons.bxs_group*/get bxs_group() {
      return C[286] || CT.C286;
    },
    /*flutter_boxicons.Boxicons.bxs_guitar_amp*/get bxs_guitar_amp() {
      return C[287] || CT.C287;
    },
    /*flutter_boxicons.Boxicons.bxs_hand_down*/get bxs_hand_down() {
      return C[288] || CT.C288;
    },
    /*flutter_boxicons.Boxicons.bxs_hand_left*/get bxs_hand_left() {
      return C[289] || CT.C289;
    },
    /*flutter_boxicons.Boxicons.bxs_hand_right*/get bxs_hand_right() {
      return C[290] || CT.C290;
    },
    /*flutter_boxicons.Boxicons.bxs_hand_up*/get bxs_hand_up() {
      return C[291] || CT.C291;
    },
    /*flutter_boxicons.Boxicons.bxs_happy*/get bxs_happy() {
      return C[292] || CT.C292;
    },
    /*flutter_boxicons.Boxicons.bxs_happy_alt*/get bxs_happy_alt() {
      return C[293] || CT.C293;
    },
    /*flutter_boxicons.Boxicons.bxs_happy_beaming*/get bxs_happy_beaming() {
      return C[294] || CT.C294;
    },
    /*flutter_boxicons.Boxicons.bxs_happy_heart_eyes*/get bxs_happy_heart_eyes() {
      return C[295] || CT.C295;
    },
    /*flutter_boxicons.Boxicons.bxs_hdd*/get bxs_hdd() {
      return C[296] || CT.C296;
    },
    /*flutter_boxicons.Boxicons.bxs_heart*/get bxs_heart() {
      return C[297] || CT.C297;
    },
    /*flutter_boxicons.Boxicons.bxs_heart_circle*/get bxs_heart_circle() {
      return C[298] || CT.C298;
    },
    /*flutter_boxicons.Boxicons.bxs_heart_square*/get bxs_heart_square() {
      return C[299] || CT.C299;
    },
    /*flutter_boxicons.Boxicons.bxs_help_circle*/get bxs_help_circle() {
      return C[300] || CT.C300;
    },
    /*flutter_boxicons.Boxicons.bxs_hide*/get bxs_hide() {
      return C[301] || CT.C301;
    },
    /*flutter_boxicons.Boxicons.bxs_home*/get bxs_home() {
      return C[302] || CT.C302;
    },
    /*flutter_boxicons.Boxicons.bxs_home_circle*/get bxs_home_circle() {
      return C[303] || CT.C303;
    },
    /*flutter_boxicons.Boxicons.bxs_home_heart*/get bxs_home_heart() {
      return C[304] || CT.C304;
    },
    /*flutter_boxicons.Boxicons.bxs_home_smile*/get bxs_home_smile() {
      return C[305] || CT.C305;
    },
    /*flutter_boxicons.Boxicons.bxs_hot*/get bxs_hot() {
      return C[306] || CT.C306;
    },
    /*flutter_boxicons.Boxicons.bxs_hotel*/get bxs_hotel() {
      return C[307] || CT.C307;
    },
    /*flutter_boxicons.Boxicons.bxs_hourglass*/get bxs_hourglass() {
      return C[308] || CT.C308;
    },
    /*flutter_boxicons.Boxicons.bxs_hourglass_bottom*/get bxs_hourglass_bottom() {
      return C[309] || CT.C309;
    },
    /*flutter_boxicons.Boxicons.bxs_hourglass_top*/get bxs_hourglass_top() {
      return C[310] || CT.C310;
    },
    /*flutter_boxicons.Boxicons.bxs_id_card*/get bxs_id_card() {
      return C[311] || CT.C311;
    },
    /*flutter_boxicons.Boxicons.bxs_image*/get bxs_image() {
      return C[312] || CT.C312;
    },
    /*flutter_boxicons.Boxicons.bxs_image_add*/get bxs_image_add() {
      return C[313] || CT.C313;
    },
    /*flutter_boxicons.Boxicons.bxs_image_alt*/get bxs_image_alt() {
      return C[314] || CT.C314;
    },
    /*flutter_boxicons.Boxicons.bxs_inbox*/get bxs_inbox() {
      return C[315] || CT.C315;
    },
    /*flutter_boxicons.Boxicons.bxs_info_circle*/get bxs_info_circle() {
      return C[316] || CT.C316;
    },
    /*flutter_boxicons.Boxicons.bxs_info_square*/get bxs_info_square() {
      return C[317] || CT.C317;
    },
    /*flutter_boxicons.Boxicons.bxs_institution*/get bxs_institution() {
      return C[318] || CT.C318;
    },
    /*flutter_boxicons.Boxicons.bxs_joystick*/get bxs_joystick() {
      return C[319] || CT.C319;
    },
    /*flutter_boxicons.Boxicons.bxs_joystick_alt*/get bxs_joystick_alt() {
      return C[320] || CT.C320;
    },
    /*flutter_boxicons.Boxicons.bxs_joystick_button*/get bxs_joystick_button() {
      return C[321] || CT.C321;
    },
    /*flutter_boxicons.Boxicons.bxs_key*/get bxs_key() {
      return C[322] || CT.C322;
    },
    /*flutter_boxicons.Boxicons.bxs_keyboard*/get bxs_keyboard() {
      return C[323] || CT.C323;
    },
    /*flutter_boxicons.Boxicons.bxs_label*/get bxs_label() {
      return C[324] || CT.C324;
    },
    /*flutter_boxicons.Boxicons.bxs_landmark*/get bxs_landmark() {
      return C[325] || CT.C325;
    },
    /*flutter_boxicons.Boxicons.bxs_landscape*/get bxs_landscape() {
      return C[326] || CT.C326;
    },
    /*flutter_boxicons.Boxicons.bxs_laugh*/get bxs_laugh() {
      return C[327] || CT.C327;
    },
    /*flutter_boxicons.Boxicons.bxs_layer*/get bxs_layer() {
      return C[328] || CT.C328;
    },
    /*flutter_boxicons.Boxicons.bxs_layer_minus*/get bxs_layer_minus() {
      return C[329] || CT.C329;
    },
    /*flutter_boxicons.Boxicons.bxs_layer_plus*/get bxs_layer_plus() {
      return C[330] || CT.C330;
    },
    /*flutter_boxicons.Boxicons.bxs_layout*/get bxs_layout() {
      return C[331] || CT.C331;
    },
    /*flutter_boxicons.Boxicons.bxs_left_arrow*/get bxs_left_arrow() {
      return C[332] || CT.C332;
    },
    /*flutter_boxicons.Boxicons.bxs_left_arrow_alt*/get bxs_left_arrow_alt() {
      return C[333] || CT.C333;
    },
    /*flutter_boxicons.Boxicons.bxs_left_arrow_circle*/get bxs_left_arrow_circle() {
      return C[334] || CT.C334;
    },
    /*flutter_boxicons.Boxicons.bxs_left_arrow_square*/get bxs_left_arrow_square() {
      return C[335] || CT.C335;
    },
    /*flutter_boxicons.Boxicons.bxs_left_down_arrow_circle*/get bxs_left_down_arrow_circle() {
      return C[336] || CT.C336;
    },
    /*flutter_boxicons.Boxicons.bxs_left_top_arrow_circle*/get bxs_left_top_arrow_circle() {
      return C[337] || CT.C337;
    },
    /*flutter_boxicons.Boxicons.bxs_like*/get bxs_like() {
      return C[338] || CT.C338;
    },
    /*flutter_boxicons.Boxicons.bxs_location_plus*/get bxs_location_plus() {
      return C[339] || CT.C339;
    },
    /*flutter_boxicons.Boxicons.bxs_lock*/get bxs_lock() {
      return C[340] || CT.C340;
    },
    /*flutter_boxicons.Boxicons.bxs_lock_alt*/get bxs_lock_alt() {
      return C[341] || CT.C341;
    },
    /*flutter_boxicons.Boxicons.bxs_lock_open*/get bxs_lock_open() {
      return C[342] || CT.C342;
    },
    /*flutter_boxicons.Boxicons.bxs_lock_open_alt*/get bxs_lock_open_alt() {
      return C[343] || CT.C343;
    },
    /*flutter_boxicons.Boxicons.bxs_log_in*/get bxs_log_in() {
      return C[344] || CT.C344;
    },
    /*flutter_boxicons.Boxicons.bxs_log_in_circle*/get bxs_log_in_circle() {
      return C[345] || CT.C345;
    },
    /*flutter_boxicons.Boxicons.bxs_log_out*/get bxs_log_out() {
      return C[346] || CT.C346;
    },
    /*flutter_boxicons.Boxicons.bxs_log_out_circle*/get bxs_log_out_circle() {
      return C[347] || CT.C347;
    },
    /*flutter_boxicons.Boxicons.bxs_low_vision*/get bxs_low_vision() {
      return C[348] || CT.C348;
    },
    /*flutter_boxicons.Boxicons.bxs_magic_wand*/get bxs_magic_wand() {
      return C[349] || CT.C349;
    },
    /*flutter_boxicons.Boxicons.bxs_magnet*/get bxs_magnet() {
      return C[350] || CT.C350;
    },
    /*flutter_boxicons.Boxicons.bxs_map*/get bxs_map() {
      return C[351] || CT.C351;
    },
    /*flutter_boxicons.Boxicons.bxs_map_alt*/get bxs_map_alt() {
      return C[352] || CT.C352;
    },
    /*flutter_boxicons.Boxicons.bxs_map_pin*/get bxs_map_pin() {
      return C[353] || CT.C353;
    },
    /*flutter_boxicons.Boxicons.bxs_mask*/get bxs_mask() {
      return C[354] || CT.C354;
    },
    /*flutter_boxicons.Boxicons.bxs_medal*/get bxs_medal() {
      return C[355] || CT.C355;
    },
    /*flutter_boxicons.Boxicons.bxs_megaphone*/get bxs_megaphone() {
      return C[356] || CT.C356;
    },
    /*flutter_boxicons.Boxicons.bxs_meh*/get bxs_meh() {
      return C[357] || CT.C357;
    },
    /*flutter_boxicons.Boxicons.bxs_meh_alt*/get bxs_meh_alt() {
      return C[358] || CT.C358;
    },
    /*flutter_boxicons.Boxicons.bxs_meh_blank*/get bxs_meh_blank() {
      return C[359] || CT.C359;
    },
    /*flutter_boxicons.Boxicons.bxs_memory_card*/get bxs_memory_card() {
      return C[360] || CT.C360;
    },
    /*flutter_boxicons.Boxicons.bxs_message*/get bxs_message() {
      return C[361] || CT.C361;
    },
    /*flutter_boxicons.Boxicons.bxs_message_add*/get bxs_message_add() {
      return C[362] || CT.C362;
    },
    /*flutter_boxicons.Boxicons.bxs_message_alt*/get bxs_message_alt() {
      return C[363] || CT.C363;
    },
    /*flutter_boxicons.Boxicons.bxs_message_alt_add*/get bxs_message_alt_add() {
      return C[364] || CT.C364;
    },
    /*flutter_boxicons.Boxicons.bxs_message_alt_check*/get bxs_message_alt_check() {
      return C[365] || CT.C365;
    },
    /*flutter_boxicons.Boxicons.bxs_message_alt_detail*/get bxs_message_alt_detail() {
      return C[366] || CT.C366;
    },
    /*flutter_boxicons.Boxicons.bxs_message_alt_dots*/get bxs_message_alt_dots() {
      return C[367] || CT.C367;
    },
    /*flutter_boxicons.Boxicons.bxs_message_alt_edit*/get bxs_message_alt_edit() {
      return C[368] || CT.C368;
    },
    /*flutter_boxicons.Boxicons.bxs_message_alt_error*/get bxs_message_alt_error() {
      return C[369] || CT.C369;
    },
    /*flutter_boxicons.Boxicons.bxs_message_alt_minus*/get bxs_message_alt_minus() {
      return C[370] || CT.C370;
    },
    /*flutter_boxicons.Boxicons.bxs_message_alt_x*/get bxs_message_alt_x() {
      return C[371] || CT.C371;
    },
    /*flutter_boxicons.Boxicons.bxs_message_check*/get bxs_message_check() {
      return C[372] || CT.C372;
    },
    /*flutter_boxicons.Boxicons.bxs_message_detail*/get bxs_message_detail() {
      return C[373] || CT.C373;
    },
    /*flutter_boxicons.Boxicons.bxs_message_dots*/get bxs_message_dots() {
      return C[374] || CT.C374;
    },
    /*flutter_boxicons.Boxicons.bxs_message_edit*/get bxs_message_edit() {
      return C[375] || CT.C375;
    },
    /*flutter_boxicons.Boxicons.bxs_message_error*/get bxs_message_error() {
      return C[376] || CT.C376;
    },
    /*flutter_boxicons.Boxicons.bxs_message_minus*/get bxs_message_minus() {
      return C[377] || CT.C377;
    },
    /*flutter_boxicons.Boxicons.bxs_message_rounded*/get bxs_message_rounded() {
      return C[378] || CT.C378;
    },
    /*flutter_boxicons.Boxicons.bxs_message_rounded_add*/get bxs_message_rounded_add() {
      return C[379] || CT.C379;
    },
    /*flutter_boxicons.Boxicons.bxs_message_rounded_check*/get bxs_message_rounded_check() {
      return C[380] || CT.C380;
    },
    /*flutter_boxicons.Boxicons.bxs_message_rounded_detail*/get bxs_message_rounded_detail() {
      return C[381] || CT.C381;
    },
    /*flutter_boxicons.Boxicons.bxs_message_rounded_dots*/get bxs_message_rounded_dots() {
      return C[382] || CT.C382;
    },
    /*flutter_boxicons.Boxicons.bxs_message_rounded_edit*/get bxs_message_rounded_edit() {
      return C[383] || CT.C383;
    },
    /*flutter_boxicons.Boxicons.bxs_message_rounded_error*/get bxs_message_rounded_error() {
      return C[384] || CT.C384;
    },
    /*flutter_boxicons.Boxicons.bxs_message_rounded_minus*/get bxs_message_rounded_minus() {
      return C[385] || CT.C385;
    },
    /*flutter_boxicons.Boxicons.bxs_message_rounded_x*/get bxs_message_rounded_x() {
      return C[386] || CT.C386;
    },
    /*flutter_boxicons.Boxicons.bxs_message_square*/get bxs_message_square() {
      return C[387] || CT.C387;
    },
    /*flutter_boxicons.Boxicons.bxs_message_square_add*/get bxs_message_square_add() {
      return C[388] || CT.C388;
    },
    /*flutter_boxicons.Boxicons.bxs_message_square_check*/get bxs_message_square_check() {
      return C[389] || CT.C389;
    },
    /*flutter_boxicons.Boxicons.bxs_message_square_detail*/get bxs_message_square_detail() {
      return C[390] || CT.C390;
    },
    /*flutter_boxicons.Boxicons.bxs_message_square_dots*/get bxs_message_square_dots() {
      return C[391] || CT.C391;
    },
    /*flutter_boxicons.Boxicons.bxs_message_square_edit*/get bxs_message_square_edit() {
      return C[392] || CT.C392;
    },
    /*flutter_boxicons.Boxicons.bxs_message_square_error*/get bxs_message_square_error() {
      return C[393] || CT.C393;
    },
    /*flutter_boxicons.Boxicons.bxs_message_square_minus*/get bxs_message_square_minus() {
      return C[394] || CT.C394;
    },
    /*flutter_boxicons.Boxicons.bxs_message_square_x*/get bxs_message_square_x() {
      return C[395] || CT.C395;
    },
    /*flutter_boxicons.Boxicons.bxs_message_x*/get bxs_message_x() {
      return C[396] || CT.C396;
    },
    /*flutter_boxicons.Boxicons.bxs_meteor*/get bxs_meteor() {
      return C[397] || CT.C397;
    },
    /*flutter_boxicons.Boxicons.bxs_microchip*/get bxs_microchip() {
      return C[398] || CT.C398;
    },
    /*flutter_boxicons.Boxicons.bxs_microphone*/get bxs_microphone() {
      return C[399] || CT.C399;
    },
    /*flutter_boxicons.Boxicons.bxs_microphone_alt*/get bxs_microphone_alt() {
      return C[400] || CT.C400;
    },
    /*flutter_boxicons.Boxicons.bxs_microphone_off*/get bxs_microphone_off() {
      return C[401] || CT.C401;
    },
    /*flutter_boxicons.Boxicons.bxs_minus_circle*/get bxs_minus_circle() {
      return C[402] || CT.C402;
    },
    /*flutter_boxicons.Boxicons.bxs_minus_square*/get bxs_minus_square() {
      return C[403] || CT.C403;
    },
    /*flutter_boxicons.Boxicons.bxs_mobile*/get bxs_mobile() {
      return C[404] || CT.C404;
    },
    /*flutter_boxicons.Boxicons.bxs_mobile_vibration*/get bxs_mobile_vibration() {
      return C[405] || CT.C405;
    },
    /*flutter_boxicons.Boxicons.bxs_moon*/get bxs_moon() {
      return C[406] || CT.C406;
    },
    /*flutter_boxicons.Boxicons.bxs_mouse*/get bxs_mouse() {
      return C[407] || CT.C407;
    },
    /*flutter_boxicons.Boxicons.bxs_mouse_alt*/get bxs_mouse_alt() {
      return C[408] || CT.C408;
    },
    /*flutter_boxicons.Boxicons.bxs_movie*/get bxs_movie() {
      return C[409] || CT.C409;
    },
    /*flutter_boxicons.Boxicons.bxs_movie_play*/get bxs_movie_play() {
      return C[410] || CT.C410;
    },
    /*flutter_boxicons.Boxicons.bxs_music*/get bxs_music() {
      return C[411] || CT.C411;
    },
    /*flutter_boxicons.Boxicons.bxs_navigation*/get bxs_navigation() {
      return C[412] || CT.C412;
    },
    /*flutter_boxicons.Boxicons.bxs_network_chart*/get bxs_network_chart() {
      return C[413] || CT.C413;
    },
    /*flutter_boxicons.Boxicons.bxs_news*/get bxs_news() {
      return C[414] || CT.C414;
    },
    /*flutter_boxicons.Boxicons.bxs_no_entry*/get bxs_no_entry() {
      return C[415] || CT.C415;
    },
    /*flutter_boxicons.Boxicons.bxs_note*/get bxs_note() {
      return C[416] || CT.C416;
    },
    /*flutter_boxicons.Boxicons.bxs_notepad*/get bxs_notepad() {
      return C[417] || CT.C417;
    },
    /*flutter_boxicons.Boxicons.bxs_notification*/get bxs_notification() {
      return C[418] || CT.C418;
    },
    /*flutter_boxicons.Boxicons.bxs_notification_off*/get bxs_notification_off() {
      return C[419] || CT.C419;
    },
    /*flutter_boxicons.Boxicons.bxs_offer*/get bxs_offer() {
      return C[420] || CT.C420;
    },
    /*flutter_boxicons.Boxicons.bxs_package*/get bxs_package() {
      return C[421] || CT.C421;
    },
    /*flutter_boxicons.Boxicons.bxs_paint*/get bxs_paint() {
      return C[422] || CT.C422;
    },
    /*flutter_boxicons.Boxicons.bxs_paint_roll*/get bxs_paint_roll() {
      return C[423] || CT.C423;
    },
    /*flutter_boxicons.Boxicons.bxs_palette*/get bxs_palette() {
      return C[424] || CT.C424;
    },
    /*flutter_boxicons.Boxicons.bxs_paper_plane*/get bxs_paper_plane() {
      return C[425] || CT.C425;
    },
    /*flutter_boxicons.Boxicons.bxs_parking*/get bxs_parking() {
      return C[426] || CT.C426;
    },
    /*flutter_boxicons.Boxicons.bxs_paste*/get bxs_paste() {
      return C[427] || CT.C427;
    },
    /*flutter_boxicons.Boxicons.bxs_pen*/get bxs_pen() {
      return C[428] || CT.C428;
    },
    /*flutter_boxicons.Boxicons.bxs_pencil*/get bxs_pencil() {
      return C[429] || CT.C429;
    },
    /*flutter_boxicons.Boxicons.bxs_phone*/get bxs_phone() {
      return C[430] || CT.C430;
    },
    /*flutter_boxicons.Boxicons.bxs_phone_call*/get bxs_phone_call() {
      return C[431] || CT.C431;
    },
    /*flutter_boxicons.Boxicons.bxs_phone_incoming*/get bxs_phone_incoming() {
      return C[432] || CT.C432;
    },
    /*flutter_boxicons.Boxicons.bxs_phone_outgoing*/get bxs_phone_outgoing() {
      return C[433] || CT.C433;
    },
    /*flutter_boxicons.Boxicons.bxs_photo_album*/get bxs_photo_album() {
      return C[434] || CT.C434;
    },
    /*flutter_boxicons.Boxicons.bxs_piano*/get bxs_piano() {
      return C[435] || CT.C435;
    },
    /*flutter_boxicons.Boxicons.bxs_pie_chart*/get bxs_pie_chart() {
      return C[436] || CT.C436;
    },
    /*flutter_boxicons.Boxicons.bxs_pie_chart_alt*/get bxs_pie_chart_alt() {
      return C[437] || CT.C437;
    },
    /*flutter_boxicons.Boxicons.bxs_pie_chart_alt_2*/get bxs_pie_chart_alt_2() {
      return C[438] || CT.C438;
    },
    /*flutter_boxicons.Boxicons.bxs_pin*/get bxs_pin() {
      return C[439] || CT.C439;
    },
    /*flutter_boxicons.Boxicons.bxs_pizza*/get bxs_pizza() {
      return C[440] || CT.C440;
    },
    /*flutter_boxicons.Boxicons.bxs_plane*/get bxs_plane() {
      return C[441] || CT.C441;
    },
    /*flutter_boxicons.Boxicons.bxs_plane_alt*/get bxs_plane_alt() {
      return C[442] || CT.C442;
    },
    /*flutter_boxicons.Boxicons.bxs_plane_land*/get bxs_plane_land() {
      return C[443] || CT.C443;
    },
    /*flutter_boxicons.Boxicons.bxs_planet*/get bxs_planet() {
      return C[444] || CT.C444;
    },
    /*flutter_boxicons.Boxicons.bxs_plane_take_off*/get bxs_plane_take_off() {
      return C[445] || CT.C445;
    },
    /*flutter_boxicons.Boxicons.bxs_playlist*/get bxs_playlist() {
      return C[446] || CT.C446;
    },
    /*flutter_boxicons.Boxicons.bxs_plug*/get bxs_plug() {
      return C[447] || CT.C447;
    },
    /*flutter_boxicons.Boxicons.bxs_plus_circle*/get bxs_plus_circle() {
      return C[448] || CT.C448;
    },
    /*flutter_boxicons.Boxicons.bxs_plus_square*/get bxs_plus_square() {
      return C[449] || CT.C449;
    },
    /*flutter_boxicons.Boxicons.bxs_pointer*/get bxs_pointer() {
      return C[450] || CT.C450;
    },
    /*flutter_boxicons.Boxicons.bxs_polygon*/get bxs_polygon() {
      return C[451] || CT.C451;
    },
    /*flutter_boxicons.Boxicons.bxs_printer*/get bxs_printer() {
      return C[452] || CT.C452;
    },
    /*flutter_boxicons.Boxicons.bxs_purchase_tag*/get bxs_purchase_tag() {
      return C[453] || CT.C453;
    },
    /*flutter_boxicons.Boxicons.bxs_purchase_tag_alt*/get bxs_purchase_tag_alt() {
      return C[454] || CT.C454;
    },
    /*flutter_boxicons.Boxicons.bxs_pyramid*/get bxs_pyramid() {
      return C[455] || CT.C455;
    },
    /*flutter_boxicons.Boxicons.bxs_quote_alt_left*/get bxs_quote_alt_left() {
      return C[456] || CT.C456;
    },
    /*flutter_boxicons.Boxicons.bxs_quote_alt_right*/get bxs_quote_alt_right() {
      return C[457] || CT.C457;
    },
    /*flutter_boxicons.Boxicons.bxs_quote_left*/get bxs_quote_left() {
      return C[458] || CT.C458;
    },
    /*flutter_boxicons.Boxicons.bxs_quote_right*/get bxs_quote_right() {
      return C[459] || CT.C459;
    },
    /*flutter_boxicons.Boxicons.bxs_quote_single_left*/get bxs_quote_single_left() {
      return C[460] || CT.C460;
    },
    /*flutter_boxicons.Boxicons.bxs_quote_single_right*/get bxs_quote_single_right() {
      return C[461] || CT.C461;
    },
    /*flutter_boxicons.Boxicons.bxs_radiation*/get bxs_radiation() {
      return C[462] || CT.C462;
    },
    /*flutter_boxicons.Boxicons.bxs_radio*/get bxs_radio() {
      return C[463] || CT.C463;
    },
    /*flutter_boxicons.Boxicons.bxs_receipt*/get bxs_receipt() {
      return C[464] || CT.C464;
    },
    /*flutter_boxicons.Boxicons.bxs_rectangle*/get bxs_rectangle() {
      return C[465] || CT.C465;
    },
    /*flutter_boxicons.Boxicons.bxs_rename*/get bxs_rename() {
      return C[466] || CT.C466;
    },
    /*flutter_boxicons.Boxicons.bxs_report*/get bxs_report() {
      return C[467] || CT.C467;
    },
    /*flutter_boxicons.Boxicons.bxs_rewind_circle*/get bxs_rewind_circle() {
      return C[468] || CT.C468;
    },
    /*flutter_boxicons.Boxicons.bxs_right_arrow*/get bxs_right_arrow() {
      return C[469] || CT.C469;
    },
    /*flutter_boxicons.Boxicons.bxs_right_arrow_alt*/get bxs_right_arrow_alt() {
      return C[470] || CT.C470;
    },
    /*flutter_boxicons.Boxicons.bxs_right_arrow_circle*/get bxs_right_arrow_circle() {
      return C[471] || CT.C471;
    },
    /*flutter_boxicons.Boxicons.bxs_right_arrow_square*/get bxs_right_arrow_square() {
      return C[472] || CT.C472;
    },
    /*flutter_boxicons.Boxicons.bxs_right_down_arrow_circle*/get bxs_right_down_arrow_circle() {
      return C[473] || CT.C473;
    },
    /*flutter_boxicons.Boxicons.bxs_right_top_arrow_circle*/get bxs_right_top_arrow_circle() {
      return C[474] || CT.C474;
    },
    /*flutter_boxicons.Boxicons.bxs_rocket*/get bxs_rocket() {
      return C[475] || CT.C475;
    },
    /*flutter_boxicons.Boxicons.bxs_ruler*/get bxs_ruler() {
      return C[476] || CT.C476;
    },
    /*flutter_boxicons.Boxicons.bxs_sad*/get bxs_sad() {
      return C[477] || CT.C477;
    },
    /*flutter_boxicons.Boxicons.bxs_save*/get bxs_save() {
      return C[478] || CT.C478;
    },
    /*flutter_boxicons.Boxicons.bxs_school*/get bxs_school() {
      return C[479] || CT.C479;
    },
    /*flutter_boxicons.Boxicons.bxs_search*/get bxs_search() {
      return C[480] || CT.C480;
    },
    /*flutter_boxicons.Boxicons.bxs_search_alt_2*/get bxs_search_alt_2() {
      return C[481] || CT.C481;
    },
    /*flutter_boxicons.Boxicons.bxs_select_multiple*/get bxs_select_multiple() {
      return C[482] || CT.C482;
    },
    /*flutter_boxicons.Boxicons.bxs_send*/get bxs_send() {
      return C[483] || CT.C483;
    },
    /*flutter_boxicons.Boxicons.bxs_server*/get bxs_server() {
      return C[484] || CT.C484;
    },
    /*flutter_boxicons.Boxicons.bxs_shapes*/get bxs_shapes() {
      return C[485] || CT.C485;
    },
    /*flutter_boxicons.Boxicons.bxs_share*/get bxs_share() {
      return C[486] || CT.C486;
    },
    /*flutter_boxicons.Boxicons.bxs_share_alt*/get bxs_share_alt() {
      return C[487] || CT.C487;
    },
    /*flutter_boxicons.Boxicons.bxs_shield*/get bxs_shield() {
      return C[488] || CT.C488;
    },
    /*flutter_boxicons.Boxicons.bxs_shield_alt_2*/get bxs_shield_alt_2() {
      return C[489] || CT.C489;
    },
    /*flutter_boxicons.Boxicons.bxs_shield_x*/get bxs_shield_x() {
      return C[490] || CT.C490;
    },
    /*flutter_boxicons.Boxicons.bxs_ship*/get bxs_ship() {
      return C[491] || CT.C491;
    },
    /*flutter_boxicons.Boxicons.bxs_shocked*/get bxs_shocked() {
      return C[492] || CT.C492;
    },
    /*flutter_boxicons.Boxicons.bxs_shopping_bag*/get bxs_shopping_bag() {
      return C[493] || CT.C493;
    },
    /*flutter_boxicons.Boxicons.bxs_shopping_bag_alt*/get bxs_shopping_bag_alt() {
      return C[494] || CT.C494;
    },
    /*flutter_boxicons.Boxicons.bxs_shopping_bags*/get bxs_shopping_bags() {
      return C[495] || CT.C495;
    },
    /*flutter_boxicons.Boxicons.bxs_show*/get bxs_show() {
      return C[496] || CT.C496;
    },
    /*flutter_boxicons.Boxicons.bxs_skip_next_circle*/get bxs_skip_next_circle() {
      return C[497] || CT.C497;
    },
    /*flutter_boxicons.Boxicons.bxs_skip_previous_circle*/get bxs_skip_previous_circle() {
      return C[498] || CT.C498;
    },
    /*flutter_boxicons.Boxicons.bxs_skull*/get bxs_skull() {
      return C[499] || CT.C499;
    },
    /*flutter_boxicons.Boxicons.bxs_sleepy*/get bxs_sleepy() {
      return C[500] || CT.C500;
    },
    /*flutter_boxicons.Boxicons.bxs_slideshow*/get bxs_slideshow() {
      return C[501] || CT.C501;
    },
    /*flutter_boxicons.Boxicons.bxs_smile*/get bxs_smile() {
      return C[502] || CT.C502;
    },
    /*flutter_boxicons.Boxicons.bxs_sort_alt*/get bxs_sort_alt() {
      return C[503] || CT.C503;
    },
    /*flutter_boxicons.Boxicons.bxs_spa*/get bxs_spa() {
      return C[504] || CT.C504;
    },
    /*flutter_boxicons.Boxicons.bxs_spray_can*/get bxs_spray_can() {
      return C[505] || CT.C505;
    },
    /*flutter_boxicons.Boxicons.bxs_spreadsheet*/get bxs_spreadsheet() {
      return C[506] || CT.C506;
    },
    /*flutter_boxicons.Boxicons.bxs_square*/get bxs_square() {
      return C[507] || CT.C507;
    },
    /*flutter_boxicons.Boxicons.bxs_square_rounded*/get bxs_square_rounded() {
      return C[508] || CT.C508;
    },
    /*flutter_boxicons.Boxicons.bxs_star*/get bxs_star() {
      return C[509] || CT.C509;
    },
    /*flutter_boxicons.Boxicons.bxs_star_half*/get bxs_star_half() {
      return C[510] || CT.C510;
    },
    /*flutter_boxicons.Boxicons.bxs_sticker*/get bxs_sticker() {
      return C[511] || CT.C511;
    },
    /*flutter_boxicons.Boxicons.bxs_stopwatch*/get bxs_stopwatch() {
      return C[512] || CT.C512;
    },
    /*flutter_boxicons.Boxicons.bxs_store*/get bxs_store() {
      return C[513] || CT.C513;
    },
    /*flutter_boxicons.Boxicons.bxs_store_alt*/get bxs_store_alt() {
      return C[514] || CT.C514;
    },
    /*flutter_boxicons.Boxicons.bxs_sun*/get bxs_sun() {
      return C[515] || CT.C515;
    },
    /*flutter_boxicons.Boxicons.bxs_tachometer*/get bxs_tachometer() {
      return C[516] || CT.C516;
    },
    /*flutter_boxicons.Boxicons.bxs_tag*/get bxs_tag() {
      return C[517] || CT.C517;
    },
    /*flutter_boxicons.Boxicons.bxs_tag_alt*/get bxs_tag_alt() {
      return C[518] || CT.C518;
    },
    /*flutter_boxicons.Boxicons.bxs_tag_x*/get bxs_tag_x() {
      return C[519] || CT.C519;
    },
    /*flutter_boxicons.Boxicons.bxs_taxi*/get bxs_taxi() {
      return C[520] || CT.C520;
    },
    /*flutter_boxicons.Boxicons.bxs_tennis_ball*/get bxs_tennis_ball() {
      return C[521] || CT.C521;
    },
    /*flutter_boxicons.Boxicons.bxs_terminal*/get bxs_terminal() {
      return C[522] || CT.C522;
    },
    /*flutter_boxicons.Boxicons.bxs_thermometer*/get bxs_thermometer() {
      return C[523] || CT.C523;
    },
    /*flutter_boxicons.Boxicons.bxs_time*/get bxs_time() {
      return C[524] || CT.C524;
    },
    /*flutter_boxicons.Boxicons.bxs_time_five*/get bxs_time_five() {
      return C[525] || CT.C525;
    },
    /*flutter_boxicons.Boxicons.bxs_timer*/get bxs_timer() {
      return C[526] || CT.C526;
    },
    /*flutter_boxicons.Boxicons.bxs_tired*/get bxs_tired() {
      return C[527] || CT.C527;
    },
    /*flutter_boxicons.Boxicons.bxs_toggle_left*/get bxs_toggle_left() {
      return C[528] || CT.C528;
    },
    /*flutter_boxicons.Boxicons.bxs_toggle_right*/get bxs_toggle_right() {
      return C[529] || CT.C529;
    },
    /*flutter_boxicons.Boxicons.bxs_tone*/get bxs_tone() {
      return C[530] || CT.C530;
    },
    /*flutter_boxicons.Boxicons.bxs_torch*/get bxs_torch() {
      return C[531] || CT.C531;
    },
    /*flutter_boxicons.Boxicons.bxs_to_top*/get bxs_to_top() {
      return C[532] || CT.C532;
    },
    /*flutter_boxicons.Boxicons.bxs_traffic*/get bxs_traffic() {
      return C[533] || CT.C533;
    },
    /*flutter_boxicons.Boxicons.bxs_traffic_barrier*/get bxs_traffic_barrier() {
      return C[534] || CT.C534;
    },
    /*flutter_boxicons.Boxicons.bxs_traffic_cone*/get bxs_traffic_cone() {
      return C[535] || CT.C535;
    },
    /*flutter_boxicons.Boxicons.bxs_train*/get bxs_train() {
      return C[536] || CT.C536;
    },
    /*flutter_boxicons.Boxicons.bxs_trash*/get bxs_trash() {
      return C[537] || CT.C537;
    },
    /*flutter_boxicons.Boxicons.bxs_trash_alt*/get bxs_trash_alt() {
      return C[538] || CT.C538;
    },
    /*flutter_boxicons.Boxicons.bxs_tree*/get bxs_tree() {
      return C[539] || CT.C539;
    },
    /*flutter_boxicons.Boxicons.bxs_trophy*/get bxs_trophy() {
      return C[540] || CT.C540;
    },
    /*flutter_boxicons.Boxicons.bxs_truck*/get bxs_truck() {
      return C[541] || CT.C541;
    },
    /*flutter_boxicons.Boxicons.bxs_t_shirt*/get bxs_t_shirt() {
      return C[542] || CT.C542;
    },
    /*flutter_boxicons.Boxicons.bxs_tv*/get bxs_tv() {
      return C[543] || CT.C543;
    },
    /*flutter_boxicons.Boxicons.bxs_up_arrow*/get bxs_up_arrow() {
      return C[544] || CT.C544;
    },
    /*flutter_boxicons.Boxicons.bxs_up_arrow_alt*/get bxs_up_arrow_alt() {
      return C[545] || CT.C545;
    },
    /*flutter_boxicons.Boxicons.bxs_up_arrow_circle*/get bxs_up_arrow_circle() {
      return C[546] || CT.C546;
    },
    /*flutter_boxicons.Boxicons.bxs_up_arrow_square*/get bxs_up_arrow_square() {
      return C[547] || CT.C547;
    },
    /*flutter_boxicons.Boxicons.bxs_upside_down*/get bxs_upside_down() {
      return C[548] || CT.C548;
    },
    /*flutter_boxicons.Boxicons.bxs_upvote*/get bxs_upvote() {
      return C[549] || CT.C549;
    },
    /*flutter_boxicons.Boxicons.bxs_user*/get bxs_user() {
      return C[550] || CT.C550;
    },
    /*flutter_boxicons.Boxicons.bxs_user_account*/get bxs_user_account() {
      return C[551] || CT.C551;
    },
    /*flutter_boxicons.Boxicons.bxs_user_badge*/get bxs_user_badge() {
      return C[552] || CT.C552;
    },
    /*flutter_boxicons.Boxicons.bxs_user_check*/get bxs_user_check() {
      return C[553] || CT.C553;
    },
    /*flutter_boxicons.Boxicons.bxs_user_circle*/get bxs_user_circle() {
      return C[554] || CT.C554;
    },
    /*flutter_boxicons.Boxicons.bxs_user_detail*/get bxs_user_detail() {
      return C[555] || CT.C555;
    },
    /*flutter_boxicons.Boxicons.bxs_user_minus*/get bxs_user_minus() {
      return C[556] || CT.C556;
    },
    /*flutter_boxicons.Boxicons.bxs_user_pin*/get bxs_user_pin() {
      return C[557] || CT.C557;
    },
    /*flutter_boxicons.Boxicons.bxs_user_plus*/get bxs_user_plus() {
      return C[558] || CT.C558;
    },
    /*flutter_boxicons.Boxicons.bxs_user_rectangle*/get bxs_user_rectangle() {
      return C[559] || CT.C559;
    },
    /*flutter_boxicons.Boxicons.bxs_user_voice*/get bxs_user_voice() {
      return C[560] || CT.C560;
    },
    /*flutter_boxicons.Boxicons.bxs_user_x*/get bxs_user_x() {
      return C[561] || CT.C561;
    },
    /*flutter_boxicons.Boxicons.bxs_vector*/get bxs_vector() {
      return C[562] || CT.C562;
    },
    /*flutter_boxicons.Boxicons.bxs_vial*/get bxs_vial() {
      return C[563] || CT.C563;
    },
    /*flutter_boxicons.Boxicons.bxs_video*/get bxs_video() {
      return C[564] || CT.C564;
    },
    /*flutter_boxicons.Boxicons.bxs_video_off*/get bxs_video_off() {
      return C[565] || CT.C565;
    },
    /*flutter_boxicons.Boxicons.bxs_video_plus*/get bxs_video_plus() {
      return C[566] || CT.C566;
    },
    /*flutter_boxicons.Boxicons.bxs_video_recording*/get bxs_video_recording() {
      return C[567] || CT.C567;
    },
    /*flutter_boxicons.Boxicons.bxs_videos*/get bxs_videos() {
      return C[568] || CT.C568;
    },
    /*flutter_boxicons.Boxicons.bxs_virus*/get bxs_virus() {
      return C[569] || CT.C569;
    },
    /*flutter_boxicons.Boxicons.bxs_virus_block*/get bxs_virus_block() {
      return C[570] || CT.C570;
    },
    /*flutter_boxicons.Boxicons.bxs_volume*/get bxs_volume() {
      return C[571] || CT.C571;
    },
    /*flutter_boxicons.Boxicons.bxs_volume_full*/get bxs_volume_full() {
      return C[572] || CT.C572;
    },
    /*flutter_boxicons.Boxicons.bxs_volume_low*/get bxs_volume_low() {
      return C[573] || CT.C573;
    },
    /*flutter_boxicons.Boxicons.bxs_volume_mute*/get bxs_volume_mute() {
      return C[574] || CT.C574;
    },
    /*flutter_boxicons.Boxicons.bxs_wallet*/get bxs_wallet() {
      return C[575] || CT.C575;
    },
    /*flutter_boxicons.Boxicons.bxs_wallet_alt*/get bxs_wallet_alt() {
      return C[576] || CT.C576;
    },
    /*flutter_boxicons.Boxicons.bxs_washer*/get bxs_washer() {
      return C[577] || CT.C577;
    },
    /*flutter_boxicons.Boxicons.bxs_watch*/get bxs_watch() {
      return C[578] || CT.C578;
    },
    /*flutter_boxicons.Boxicons.bxs_watch_alt*/get bxs_watch_alt() {
      return C[579] || CT.C579;
    },
    /*flutter_boxicons.Boxicons.bxs_webcam*/get bxs_webcam() {
      return C[580] || CT.C580;
    },
    /*flutter_boxicons.Boxicons.bxs_widget*/get bxs_widget() {
      return C[581] || CT.C581;
    },
    /*flutter_boxicons.Boxicons.bxs_window_alt*/get bxs_window_alt() {
      return C[582] || CT.C582;
    },
    /*flutter_boxicons.Boxicons.bxs_wine*/get bxs_wine() {
      return C[583] || CT.C583;
    },
    /*flutter_boxicons.Boxicons.bxs_wink_smile*/get bxs_wink_smile() {
      return C[584] || CT.C584;
    },
    /*flutter_boxicons.Boxicons.bxs_wink_tongue*/get bxs_wink_tongue() {
      return C[585] || CT.C585;
    },
    /*flutter_boxicons.Boxicons.bxs_wrench*/get bxs_wrench() {
      return C[586] || CT.C586;
    },
    /*flutter_boxicons.Boxicons.bxs_x_circle*/get bxs_x_circle() {
      return C[587] || CT.C587;
    },
    /*flutter_boxicons.Boxicons.bxs_x_square*/get bxs_x_square() {
      return C[588] || CT.C588;
    },
    /*flutter_boxicons.Boxicons.bxs_yin_yang*/get bxs_yin_yang() {
      return C[589] || CT.C589;
    },
    /*flutter_boxicons.Boxicons.bxs_zap*/get bxs_zap() {
      return C[590] || CT.C590;
    },
    /*flutter_boxicons.Boxicons.bxs_zoom_in*/get bxs_zoom_in() {
      return C[591] || CT.C591;
    },
    /*flutter_boxicons.Boxicons.bxs_zoom_out*/get bxs_zoom_out() {
      return C[592] || CT.C592;
    },
    /*flutter_boxicons.Boxicons.bxs_add_to_queue*/get bxs_add_to_queue() {
      return C[593] || CT.C593;
    },
    /*flutter_boxicons.Boxicons.bxs_adjust*/get bxs_adjust() {
      return C[594] || CT.C594;
    },
    /*flutter_boxicons.Boxicons.bxs_adjust_alt*/get bxs_adjust_alt() {
      return C[595] || CT.C595;
    },
    /*flutter_boxicons.Boxicons.bxs_alarm*/get bxs_alarm() {
      return C[596] || CT.C596;
    },
    /*flutter_boxicons.Boxicons.bxs_alarm_add*/get bxs_alarm_add() {
      return C[597] || CT.C597;
    },
    /*flutter_boxicons.Boxicons.bxs_alarm_exclamation*/get bxs_alarm_exclamation() {
      return C[598] || CT.C598;
    },
    /*flutter_boxicons.Boxicons.bxs_alarm_off*/get bxs_alarm_off() {
      return C[599] || CT.C599;
    },
    /*flutter_boxicons.Boxicons.bxs_alarm_snooze*/get bxs_alarm_snooze() {
      return C[600] || CT.C600;
    },
    /*flutter_boxicons.Boxicons.bxs_album*/get bxs_album() {
      return C[601] || CT.C601;
    },
    /*flutter_boxicons.Boxicons.bxs_ambulance*/get bxs_ambulance() {
      return C[602] || CT.C602;
    },
    /*flutter_boxicons.Boxicons.bxs_analyse*/get bxs_analyse() {
      return C[603] || CT.C603;
    },
    /*flutter_boxicons.Boxicons.bxs_angry*/get bxs_angry() {
      return C[604] || CT.C604;
    },
    /*flutter_boxicons.Boxicons.bxs_arch*/get bxs_arch() {
      return C[605] || CT.C605;
    },
    /*flutter_boxicons.Boxicons.bxs_archive*/get bxs_archive() {
      return C[606] || CT.C606;
    },
    /*flutter_boxicons.Boxicons.bxs_archive_in*/get bxs_archive_in() {
      return C[607] || CT.C607;
    },
    /*flutter_boxicons.Boxicons.bxs_archive_out*/get bxs_archive_out() {
      return C[608] || CT.C608;
    },
    /*flutter_boxicons.Boxicons.bxs_area*/get bxs_area() {
      return C[609] || CT.C609;
    },
    /*flutter_boxicons.Boxicons.bxs_arrow_from_bottom*/get bxs_arrow_from_bottom() {
      return C[610] || CT.C610;
    },
    /*flutter_boxicons.Boxicons.bxs_arrow_from_left*/get bxs_arrow_from_left() {
      return C[611] || CT.C611;
    },
    /*flutter_boxicons.Boxicons.bxs_arrow_from_right*/get bxs_arrow_from_right() {
      return C[612] || CT.C612;
    },
    /*flutter_boxicons.Boxicons.bxs_arrow_from_top*/get bxs_arrow_from_top() {
      return C[613] || CT.C613;
    },
    /*flutter_boxicons.Boxicons.bxs_arrow_to_bottom*/get bxs_arrow_to_bottom() {
      return C[614] || CT.C614;
    },
    /*flutter_boxicons.Boxicons.bxs_arrow_to_left*/get bxs_arrow_to_left() {
      return C[615] || CT.C615;
    },
    /*flutter_boxicons.Boxicons.bxs_arrow_to_right*/get bxs_arrow_to_right() {
      return C[616] || CT.C616;
    },
    /*flutter_boxicons.Boxicons.bxs_arrow_to_top*/get bxs_arrow_to_top() {
      return C[617] || CT.C617;
    },
    /*flutter_boxicons.Boxicons.bxs_award*/get bxs_award() {
      return C[618] || CT.C618;
    },
    /*flutter_boxicons.Boxicons.bxs_baby_carriage*/get bxs_baby_carriage() {
      return C[619] || CT.C619;
    },
    /*flutter_boxicons.Boxicons.bxs_backpack*/get bxs_backpack() {
      return C[620] || CT.C620;
    },
    /*flutter_boxicons.Boxicons.bxs_badge*/get bxs_badge() {
      return C[621] || CT.C621;
    },
    /*flutter_boxicons.Boxicons.bxs_badge_check*/get bxs_badge_check() {
      return C[622] || CT.C622;
    },
    /*flutter_boxicons.Boxicons.bxs_badge_dollar*/get bxs_badge_dollar() {
      return C[623] || CT.C623;
    },
    /*flutter_boxicons.Boxicons.bxs_ball*/get bxs_ball() {
      return C[624] || CT.C624;
    },
    /*flutter_boxicons.Boxicons.bxs_band_aid*/get bxs_band_aid() {
      return C[625] || CT.C625;
    },
    /*flutter_boxicons.Boxicons.bxs_bank*/get bxs_bank() {
      return C[626] || CT.C626;
    },
    /*flutter_boxicons.Boxicons.bxs_bar_chart_alt_2*/get bxs_bar_chart_alt_2() {
      return C[627] || CT.C627;
    },
    /*flutter_boxicons.Boxicons.bxs_bar_chart_square*/get bxs_bar_chart_square() {
      return C[628] || CT.C628;
    },
    /*flutter_boxicons.Boxicons.bxs_barcode*/get bxs_barcode() {
      return C[629] || CT.C629;
    },
    /*flutter_boxicons.Boxicons.bxs_baseball*/get bxs_baseball() {
      return C[630] || CT.C630;
    },
    /*flutter_boxicons.Boxicons.bxs_basket*/get bxs_basket() {
      return C[631] || CT.C631;
    },
    /*flutter_boxicons.Boxicons.bx_alarm_add*/get bx_alarm_add() {
      return C[632] || CT.C632;
    },
    /*flutter_boxicons.Boxicons.bx_alarm_exclamation*/get bx_alarm_exclamation() {
      return C[633] || CT.C633;
    },
    /*flutter_boxicons.Boxicons.bx_alarm_off*/get bx_alarm_off() {
      return C[634] || CT.C634;
    },
    /*flutter_boxicons.Boxicons.bx_alarm_snooze*/get bx_alarm_snooze() {
      return C[635] || CT.C635;
    },
    /*flutter_boxicons.Boxicons.bx_album*/get bx_album() {
      return C[636] || CT.C636;
    },
    /*flutter_boxicons.Boxicons.bx_align_justify*/get bx_align_justify() {
      return C[637] || CT.C637;
    },
    /*flutter_boxicons.Boxicons.bx_align_left*/get bx_align_left() {
      return C[638] || CT.C638;
    },
    /*flutter_boxicons.Boxicons.bx_align_middle*/get bx_align_middle() {
      return C[639] || CT.C639;
    },
    /*flutter_boxicons.Boxicons.bx_align_right*/get bx_align_right() {
      return C[640] || CT.C640;
    },
    /*flutter_boxicons.Boxicons.bx_analyse*/get bx_analyse() {
      return C[641] || CT.C641;
    },
    /*flutter_boxicons.Boxicons.bx_anchor*/get bx_anchor() {
      return C[642] || CT.C642;
    },
    /*flutter_boxicons.Boxicons.bx_angry*/get bx_angry() {
      return C[643] || CT.C643;
    },
    /*flutter_boxicons.Boxicons.bx_aperture*/get bx_aperture() {
      return C[644] || CT.C644;
    },
    /*flutter_boxicons.Boxicons.bx_arch*/get bx_arch() {
      return C[645] || CT.C645;
    },
    /*flutter_boxicons.Boxicons.bx_archive*/get bx_archive() {
      return C[646] || CT.C646;
    },
    /*flutter_boxicons.Boxicons.bx_archive_in*/get bx_archive_in() {
      return C[647] || CT.C647;
    },
    /*flutter_boxicons.Boxicons.bx_archive_out*/get bx_archive_out() {
      return C[648] || CT.C648;
    },
    /*flutter_boxicons.Boxicons.bx_area*/get bx_area() {
      return C[649] || CT.C649;
    },
    /*flutter_boxicons.Boxicons.bx_arrow_back*/get bx_arrow_back() {
      return C[650] || CT.C650;
    },
    /*flutter_boxicons.Boxicons.bx_arrow_from_bottom*/get bx_arrow_from_bottom() {
      return C[651] || CT.C651;
    },
    /*flutter_boxicons.Boxicons.bx_arrow_from_left*/get bx_arrow_from_left() {
      return C[652] || CT.C652;
    },
    /*flutter_boxicons.Boxicons.bx_arrow_from_right*/get bx_arrow_from_right() {
      return C[653] || CT.C653;
    },
    /*flutter_boxicons.Boxicons.bx_arrow_from_top*/get bx_arrow_from_top() {
      return C[654] || CT.C654;
    },
    /*flutter_boxicons.Boxicons.bx_arrow_to_bottom*/get bx_arrow_to_bottom() {
      return C[655] || CT.C655;
    },
    /*flutter_boxicons.Boxicons.bx_arrow_to_left*/get bx_arrow_to_left() {
      return C[656] || CT.C656;
    },
    /*flutter_boxicons.Boxicons.bx_arrow_to_right*/get bx_arrow_to_right() {
      return C[657] || CT.C657;
    },
    /*flutter_boxicons.Boxicons.bx_arrow_to_top*/get bx_arrow_to_top() {
      return C[658] || CT.C658;
    },
    /*flutter_boxicons.Boxicons.bx_at*/get bx_at() {
      return C[659] || CT.C659;
    },
    /*flutter_boxicons.Boxicons.bx_atom*/get bx_atom() {
      return C[660] || CT.C660;
    },
    /*flutter_boxicons.Boxicons.bx_award*/get bx_award() {
      return C[661] || CT.C661;
    },
    /*flutter_boxicons.Boxicons.bx_badge*/get bx_badge() {
      return C[662] || CT.C662;
    },
    /*flutter_boxicons.Boxicons.bx_badge_check*/get bx_badge_check() {
      return C[663] || CT.C663;
    },
    /*flutter_boxicons.Boxicons.bx_ball*/get bx_ball() {
      return C[664] || CT.C664;
    },
    /*flutter_boxicons.Boxicons.bx_band_aid*/get bx_band_aid() {
      return C[665] || CT.C665;
    },
    /*flutter_boxicons.Boxicons.bx_bar_chart*/get bx_bar_chart() {
      return C[666] || CT.C666;
    },
    /*flutter_boxicons.Boxicons.bx_bar_chart_alt*/get bx_bar_chart_alt() {
      return C[667] || CT.C667;
    },
    /*flutter_boxicons.Boxicons.bx_bar_chart_alt_2*/get bx_bar_chart_alt_2() {
      return C[668] || CT.C668;
    },
    /*flutter_boxicons.Boxicons.bx_bar_chart_square*/get bx_bar_chart_square() {
      return C[669] || CT.C669;
    },
    /*flutter_boxicons.Boxicons.bx_barcode*/get bx_barcode() {
      return C[670] || CT.C670;
    },
    /*flutter_boxicons.Boxicons.bx_barcode_reader*/get bx_barcode_reader() {
      return C[671] || CT.C671;
    },
    /*flutter_boxicons.Boxicons.bx_baseball__*/get bx_baseball__() {
      return C[672] || CT.C672;
    },
    /*flutter_boxicons.Boxicons.bx_basket*/get bx_basket() {
      return C[673] || CT.C673;
    },
    /*flutter_boxicons.Boxicons.bx_basketball*/get bx_basketball() {
      return C[674] || CT.C674;
    },
    /*flutter_boxicons.Boxicons.bx_bath*/get bx_bath() {
      return C[675] || CT.C675;
    },
    /*flutter_boxicons.Boxicons.bx_battery*/get bx_battery() {
      return C[676] || CT.C676;
    },
    /*flutter_boxicons.Boxicons.bx_bed*/get bx_bed() {
      return C[677] || CT.C677;
    },
    /*flutter_boxicons.Boxicons.bx_been_here*/get bx_been_here() {
      return C[678] || CT.C678;
    },
    /*flutter_boxicons.Boxicons.bx_beer*/get bx_beer() {
      return C[679] || CT.C679;
    },
    /*flutter_boxicons.Boxicons.bx_bell*/get bx_bell() {
      return C[680] || CT.C680;
    },
    /*flutter_boxicons.Boxicons.bx_bell_minus*/get bx_bell_minus() {
      return C[681] || CT.C681;
    },
    /*flutter_boxicons.Boxicons.bx_bell_off*/get bx_bell_off() {
      return C[682] || CT.C682;
    },
    /*flutter_boxicons.Boxicons.bx_bell_plus*/get bx_bell_plus() {
      return C[683] || CT.C683;
    },
    /*flutter_boxicons.Boxicons.bx_bible*/get bx_bible() {
      return C[684] || CT.C684;
    },
    /*flutter_boxicons.Boxicons.bx_bitcoin*/get bx_bitcoin() {
      return C[685] || CT.C685;
    },
    /*flutter_boxicons.Boxicons.bx_blanket*/get bx_blanket() {
      return C[686] || CT.C686;
    },
    /*flutter_boxicons.Boxicons.bx_block*/get bx_block() {
      return C[687] || CT.C687;
    },
    /*flutter_boxicons.Boxicons.bx_bluetooth*/get bx_bluetooth() {
      return C[688] || CT.C688;
    },
    /*flutter_boxicons.Boxicons.bx_body*/get bx_body() {
      return C[689] || CT.C689;
    },
    /*flutter_boxicons.Boxicons.bx_bold*/get bx_bold() {
      return C[690] || CT.C690;
    },
    /*flutter_boxicons.Boxicons.bx_bolt_circle*/get bx_bolt_circle() {
      return C[691] || CT.C691;
    },
    /*flutter_boxicons.Boxicons.bx_bomb*/get bx_bomb() {
      return C[692] || CT.C692;
    },
    /*flutter_boxicons.Boxicons.bx_bone*/get bx_bone() {
      return C[693] || CT.C693;
    },
    /*flutter_boxicons.Boxicons.bx_bong*/get bx_bong() {
      return C[694] || CT.C694;
    },
    /*flutter_boxicons.Boxicons.bx_book*/get bx_book() {
      return C[695] || CT.C695;
    },
    /*flutter_boxicons.Boxicons.bx_book_add*/get bx_book_add() {
      return C[696] || CT.C696;
    },
    /*flutter_boxicons.Boxicons.bx_book_alt*/get bx_book_alt() {
      return C[697] || CT.C697;
    },
    /*flutter_boxicons.Boxicons.bx_book_bookmark*/get bx_book_bookmark() {
      return C[698] || CT.C698;
    },
    /*flutter_boxicons.Boxicons.bx_book_content*/get bx_book_content() {
      return C[699] || CT.C699;
    },
    /*flutter_boxicons.Boxicons.bx_book_heart*/get bx_book_heart() {
      return C[700] || CT.C700;
    },
    /*flutter_boxicons.Boxicons.bx_bookmark*/get bx_bookmark() {
      return C[701] || CT.C701;
    },
    /*flutter_boxicons.Boxicons.bx_bookmark_alt*/get bx_bookmark_alt() {
      return C[702] || CT.C702;
    },
    /*flutter_boxicons.Boxicons.bx_bookmark_alt_minus*/get bx_bookmark_alt_minus() {
      return C[703] || CT.C703;
    },
    /*flutter_boxicons.Boxicons.bx_bookmark_alt_plus*/get bx_bookmark_alt_plus() {
      return C[704] || CT.C704;
    },
    /*flutter_boxicons.Boxicons.bx_bookmark_heart*/get bx_bookmark_heart() {
      return C[705] || CT.C705;
    },
    /*flutter_boxicons.Boxicons.bx_bookmark_minus*/get bx_bookmark_minus() {
      return C[706] || CT.C706;
    },
    /*flutter_boxicons.Boxicons.bx_bookmark_plus*/get bx_bookmark_plus() {
      return C[707] || CT.C707;
    },
    /*flutter_boxicons.Boxicons.bx_bookmarks*/get bx_bookmarks() {
      return C[708] || CT.C708;
    },
    /*flutter_boxicons.Boxicons.bx_book_open*/get bx_book_open() {
      return C[709] || CT.C709;
    },
    /*flutter_boxicons.Boxicons.bx_book_reader*/get bx_book_reader() {
      return C[710] || CT.C710;
    },
    /*flutter_boxicons.Boxicons.bx_border_all*/get bx_border_all() {
      return C[711] || CT.C711;
    },
    /*flutter_boxicons.Boxicons.bx_border_bottom*/get bx_border_bottom() {
      return C[712] || CT.C712;
    },
    /*flutter_boxicons.Boxicons.bx_border_inner*/get bx_border_inner() {
      return C[713] || CT.C713;
    },
    /*flutter_boxicons.Boxicons.bx_border_left*/get bx_border_left() {
      return C[714] || CT.C714;
    },
    /*flutter_boxicons.Boxicons.bx_border_none*/get bx_border_none() {
      return C[715] || CT.C715;
    },
    /*flutter_boxicons.Boxicons.bx_border_outer*/get bx_border_outer() {
      return C[716] || CT.C716;
    },
    /*flutter_boxicons.Boxicons.bx_border_radius*/get bx_border_radius() {
      return C[717] || CT.C717;
    },
    /*flutter_boxicons.Boxicons.bx_border_right*/get bx_border_right() {
      return C[718] || CT.C718;
    },
    /*flutter_boxicons.Boxicons.bx_border_top*/get bx_border_top() {
      return C[719] || CT.C719;
    },
    /*flutter_boxicons.Boxicons.bx_bot*/get bx_bot() {
      return C[720] || CT.C720;
    },
    /*flutter_boxicons.Boxicons.bx_bowling_ball*/get bx_bowling_ball() {
      return C[721] || CT.C721;
    },
    /*flutter_boxicons.Boxicons.bx_box*/get bx_box() {
      return C[722] || CT.C722;
    },
    /*flutter_boxicons.Boxicons.bx_bracket*/get bx_bracket() {
      return C[723] || CT.C723;
    },
    /*flutter_boxicons.Boxicons.bx_braille*/get bx_braille() {
      return C[724] || CT.C724;
    },
    /*flutter_boxicons.Boxicons.bx_brain*/get bx_brain() {
      return C[725] || CT.C725;
    },
    /*flutter_boxicons.Boxicons.bx_briefcase*/get bx_briefcase() {
      return C[726] || CT.C726;
    },
    /*flutter_boxicons.Boxicons.bx_briefcase_alt*/get bx_briefcase_alt() {
      return C[727] || CT.C727;
    },
    /*flutter_boxicons.Boxicons.bx_briefcase_alt_2*/get bx_briefcase_alt_2() {
      return C[728] || CT.C728;
    },
    /*flutter_boxicons.Boxicons.bx_brightness*/get bx_brightness() {
      return C[729] || CT.C729;
    },
    /*flutter_boxicons.Boxicons.bx_brightness_half*/get bx_brightness_half() {
      return C[730] || CT.C730;
    },
    /*flutter_boxicons.Boxicons.bx_broadcast*/get bx_broadcast() {
      return C[731] || CT.C731;
    },
    /*flutter_boxicons.Boxicons.bx_brush*/get bx_brush() {
      return C[732] || CT.C732;
    },
    /*flutter_boxicons.Boxicons.bx_brush_alt*/get bx_brush_alt() {
      return C[733] || CT.C733;
    },
    /*flutter_boxicons.Boxicons.bx_bug*/get bx_bug() {
      return C[734] || CT.C734;
    },
    /*flutter_boxicons.Boxicons.bx_bug_alt*/get bx_bug_alt() {
      return C[735] || CT.C735;
    },
    /*flutter_boxicons.Boxicons.bx_building*/get bx_building() {
      return C[736] || CT.C736;
    },
    /*flutter_boxicons.Boxicons.bx_building_house*/get bx_building_house() {
      return C[737] || CT.C737;
    },
    /*flutter_boxicons.Boxicons.bx_buildings*/get bx_buildings() {
      return C[738] || CT.C738;
    },
    /*flutter_boxicons.Boxicons.bx_bulb*/get bx_bulb() {
      return C[739] || CT.C739;
    },
    /*flutter_boxicons.Boxicons.bx_bullseye*/get bx_bullseye() {
      return C[740] || CT.C740;
    },
    /*flutter_boxicons.Boxicons.bx_buoy*/get bx_buoy() {
      return C[741] || CT.C741;
    },
    /*flutter_boxicons.Boxicons.bx_bus*/get bx_bus() {
      return C[742] || CT.C742;
    },
    /*flutter_boxicons.Boxicons.bx_bus_school*/get bx_bus_school() {
      return C[743] || CT.C743;
    },
    /*flutter_boxicons.Boxicons.bx_cabinet*/get bx_cabinet() {
      return C[744] || CT.C744;
    },
    /*flutter_boxicons.Boxicons.bx_cake*/get bx_cake() {
      return C[745] || CT.C745;
    },
    /*flutter_boxicons.Boxicons.bx_calculator*/get bx_calculator() {
      return C[746] || CT.C746;
    },
    /*flutter_boxicons.Boxicons.bx_calendar*/get bx_calendar() {
      return C[747] || CT.C747;
    },
    /*flutter_boxicons.Boxicons.bx_calendar_alt*/get bx_calendar_alt() {
      return C[748] || CT.C748;
    },
    /*flutter_boxicons.Boxicons.bx_calendar_check*/get bx_calendar_check() {
      return C[749] || CT.C749;
    },
    /*flutter_boxicons.Boxicons.bx_calendar_edit*/get bx_calendar_edit() {
      return C[750] || CT.C750;
    },
    /*flutter_boxicons.Boxicons.bx_calendar_event*/get bx_calendar_event() {
      return C[751] || CT.C751;
    },
    /*flutter_boxicons.Boxicons.bx_calendar_exclamation*/get bx_calendar_exclamation() {
      return C[752] || CT.C752;
    },
    /*flutter_boxicons.Boxicons.bx_calendar_heart*/get bx_calendar_heart() {
      return C[753] || CT.C753;
    },
    /*flutter_boxicons.Boxicons.bx_calendar_minus*/get bx_calendar_minus() {
      return C[754] || CT.C754;
    },
    /*flutter_boxicons.Boxicons.bx_calendar_plus*/get bx_calendar_plus() {
      return C[755] || CT.C755;
    },
    /*flutter_boxicons.Boxicons.bx_calendar_star*/get bx_calendar_star() {
      return C[756] || CT.C756;
    },
    /*flutter_boxicons.Boxicons.bx_calendar_week*/get bx_calendar_week() {
      return C[757] || CT.C757;
    },
    /*flutter_boxicons.Boxicons.bx_calendar_x*/get bx_calendar_x() {
      return C[758] || CT.C758;
    },
    /*flutter_boxicons.Boxicons.bx_camera*/get bx_camera() {
      return C[759] || CT.C759;
    },
    /*flutter_boxicons.Boxicons.bx_camera_home*/get bx_camera_home() {
      return C[760] || CT.C760;
    },
    /*flutter_boxicons.Boxicons.bx_camera_movie*/get bx_camera_movie() {
      return C[761] || CT.C761;
    },
    /*flutter_boxicons.Boxicons.bx_camera_off*/get bx_camera_off() {
      return C[762] || CT.C762;
    },
    /*flutter_boxicons.Boxicons.bx_capsule*/get bx_capsule() {
      return C[763] || CT.C763;
    },
    /*flutter_boxicons.Boxicons.bx_captions*/get bx_captions() {
      return C[764] || CT.C764;
    },
    /*flutter_boxicons.Boxicons.bx_car*/get bx_car() {
      return C[765] || CT.C765;
    },
    /*flutter_boxicons.Boxicons.bx_card*/get bx_card() {
      return C[766] || CT.C766;
    },
    /*flutter_boxicons.Boxicons.bx_caret_down*/get bx_caret_down() {
      return C[767] || CT.C767;
    },
    /*flutter_boxicons.Boxicons.bx_caret_down_circle*/get bx_caret_down_circle() {
      return C[768] || CT.C768;
    },
    /*flutter_boxicons.Boxicons.bx_caret_down_square*/get bx_caret_down_square() {
      return C[769] || CT.C769;
    },
    /*flutter_boxicons.Boxicons.bx_caret_left*/get bx_caret_left() {
      return C[770] || CT.C770;
    },
    /*flutter_boxicons.Boxicons.bx_caret_left_circle*/get bx_caret_left_circle() {
      return C[771] || CT.C771;
    },
    /*flutter_boxicons.Boxicons.bx_caret_left_square*/get bx_caret_left_square() {
      return C[772] || CT.C772;
    },
    /*flutter_boxicons.Boxicons.bx_caret_right*/get bx_caret_right() {
      return C[773] || CT.C773;
    },
    /*flutter_boxicons.Boxicons.bx_caret_right_circle*/get bx_caret_right_circle() {
      return C[774] || CT.C774;
    },
    /*flutter_boxicons.Boxicons.bx_caret_right_square*/get bx_caret_right_square() {
      return C[775] || CT.C775;
    },
    /*flutter_boxicons.Boxicons.bx_caret_up*/get bx_caret_up() {
      return C[776] || CT.C776;
    },
    /*flutter_boxicons.Boxicons.bx_caret_up_circle*/get bx_caret_up_circle() {
      return C[777] || CT.C777;
    },
    /*flutter_boxicons.Boxicons.bx_caret_up_square*/get bx_caret_up_square() {
      return C[778] || CT.C778;
    },
    /*flutter_boxicons.Boxicons.bx_carousel*/get bx_carousel() {
      return C[779] || CT.C779;
    },
    /*flutter_boxicons.Boxicons.bx_cart*/get bx_cart() {
      return C[780] || CT.C780;
    },
    /*flutter_boxicons.Boxicons.bx_cart_alt*/get bx_cart_alt() {
      return C[781] || CT.C781;
    },
    /*flutter_boxicons.Boxicons.bx_cast*/get bx_cast() {
      return C[782] || CT.C782;
    },
    /*flutter_boxicons.Boxicons.bx_category*/get bx_category() {
      return C[783] || CT.C783;
    },
    /*flutter_boxicons.Boxicons.bx_category_alt*/get bx_category_alt() {
      return C[784] || CT.C784;
    },
    /*flutter_boxicons.Boxicons.bx_cctv*/get bx_cctv() {
      return C[785] || CT.C785;
    },
    /*flutter_boxicons.Boxicons.bx_certification*/get bx_certification() {
      return C[786] || CT.C786;
    },
    /*flutter_boxicons.Boxicons.bx_chair*/get bx_chair() {
      return C[787] || CT.C787;
    },
    /*flutter_boxicons.Boxicons.bx_chalkboard*/get bx_chalkboard() {
      return C[788] || CT.C788;
    },
    /*flutter_boxicons.Boxicons.bx_chart*/get bx_chart() {
      return C[789] || CT.C789;
    },
    /*flutter_boxicons.Boxicons.bx_chat*/get bx_chat() {
      return C[790] || CT.C790;
    },
    /*flutter_boxicons.Boxicons.bx_check*/get bx_check() {
      return C[791] || CT.C791;
    },
    /*flutter_boxicons.Boxicons.bx_checkbox*/get bx_checkbox() {
      return C[792] || CT.C792;
    },
    /*flutter_boxicons.Boxicons.bx_checkbox_checked*/get bx_checkbox_checked() {
      return C[793] || CT.C793;
    },
    /*flutter_boxicons.Boxicons.bx_checkbox_square*/get bx_checkbox_square() {
      return C[794] || CT.C794;
    },
    /*flutter_boxicons.Boxicons.bx_check_circle*/get bx_check_circle() {
      return C[795] || CT.C795;
    },
    /*flutter_boxicons.Boxicons.bx_check_double*/get bx_check_double() {
      return C[796] || CT.C796;
    },
    /*flutter_boxicons.Boxicons.bx_check_shield*/get bx_check_shield() {
      return C[797] || CT.C797;
    },
    /*flutter_boxicons.Boxicons.bx_check_square*/get bx_check_square() {
      return C[798] || CT.C798;
    },
    /*flutter_boxicons.Boxicons.bx_chevron_down*/get bx_chevron_down() {
      return C[799] || CT.C799;
    },
    /*flutter_boxicons.Boxicons.bx_chevron_down_circle*/get bx_chevron_down_circle() {
      return C[800] || CT.C800;
    },
    /*flutter_boxicons.Boxicons.bx_chevron_down_square*/get bx_chevron_down_square() {
      return C[801] || CT.C801;
    },
    /*flutter_boxicons.Boxicons.bx_chevron_left*/get bx_chevron_left() {
      return C[802] || CT.C802;
    },
    /*flutter_boxicons.Boxicons.bx_chevron_left_circle*/get bx_chevron_left_circle() {
      return C[803] || CT.C803;
    },
    /*flutter_boxicons.Boxicons.bx_chevron_left_square*/get bx_chevron_left_square() {
      return C[804] || CT.C804;
    },
    /*flutter_boxicons.Boxicons.bx_chevron_right*/get bx_chevron_right() {
      return C[805] || CT.C805;
    },
    /*flutter_boxicons.Boxicons.bx_chevron_right_circle*/get bx_chevron_right_circle() {
      return C[806] || CT.C806;
    },
    /*flutter_boxicons.Boxicons.bx_chevron_right_square*/get bx_chevron_right_square() {
      return C[807] || CT.C807;
    },
    /*flutter_boxicons.Boxicons.bx_chevrons_down*/get bx_chevrons_down() {
      return C[808] || CT.C808;
    },
    /*flutter_boxicons.Boxicons.bx_chevrons_left*/get bx_chevrons_left() {
      return C[809] || CT.C809;
    },
    /*flutter_boxicons.Boxicons.bx_chevrons_right*/get bx_chevrons_right() {
      return C[810] || CT.C810;
    },
    /*flutter_boxicons.Boxicons.bx_chevrons_up*/get bx_chevrons_up() {
      return C[811] || CT.C811;
    },
    /*flutter_boxicons.Boxicons.bx_chevron_up*/get bx_chevron_up() {
      return C[812] || CT.C812;
    },
    /*flutter_boxicons.Boxicons.bx_chevron_up_circle*/get bx_chevron_up_circle() {
      return C[813] || CT.C813;
    },
    /*flutter_boxicons.Boxicons.bx_chevron_up_square*/get bx_chevron_up_square() {
      return C[814] || CT.C814;
    },
    /*flutter_boxicons.Boxicons.bx_chip*/get bx_chip() {
      return C[815] || CT.C815;
    },
    /*flutter_boxicons.Boxicons.bx_church*/get bx_church() {
      return C[816] || CT.C816;
    },
    /*flutter_boxicons.Boxicons.bx_circle*/get bx_circle() {
      return C[817] || CT.C817;
    },
    /*flutter_boxicons.Boxicons.bx_clinic*/get bx_clinic() {
      return C[818] || CT.C818;
    },
    /*flutter_boxicons.Boxicons.bx_clipboard*/get bx_clipboard() {
      return C[819] || CT.C819;
    },
    /*flutter_boxicons.Boxicons.bx_closet*/get bx_closet() {
      return C[820] || CT.C820;
    },
    /*flutter_boxicons.Boxicons.bx_cloud*/get bx_cloud() {
      return C[821] || CT.C821;
    },
    /*flutter_boxicons.Boxicons.bx_cloud_download*/get bx_cloud_download() {
      return C[822] || CT.C822;
    },
    /*flutter_boxicons.Boxicons.bx_cloud_drizzle*/get bx_cloud_drizzle() {
      return C[823] || CT.C823;
    },
    /*flutter_boxicons.Boxicons.bx_cloud_lightning*/get bx_cloud_lightning() {
      return C[824] || CT.C824;
    },
    /*flutter_boxicons.Boxicons.bx_cloud_light_rain*/get bx_cloud_light_rain() {
      return C[825] || CT.C825;
    },
    /*flutter_boxicons.Boxicons.bx_cloud_rain*/get bx_cloud_rain() {
      return C[826] || CT.C826;
    },
    /*flutter_boxicons.Boxicons.bx_cloud_snow*/get bx_cloud_snow() {
      return C[827] || CT.C827;
    },
    /*flutter_boxicons.Boxicons.bx_cloud_upload*/get bx_cloud_upload() {
      return C[828] || CT.C828;
    },
    /*flutter_boxicons.Boxicons.bx_code*/get bx_code() {
      return C[829] || CT.C829;
    },
    /*flutter_boxicons.Boxicons.bx_code_alt*/get bx_code_alt() {
      return C[830] || CT.C830;
    },
    /*flutter_boxicons.Boxicons.bx_code_block*/get bx_code_block() {
      return C[831] || CT.C831;
    },
    /*flutter_boxicons.Boxicons.bx_code_curly*/get bx_code_curly() {
      return C[832] || CT.C832;
    },
    /*flutter_boxicons.Boxicons.bx_coffee*/get bx_coffee() {
      return C[833] || CT.C833;
    },
    /*flutter_boxicons.Boxicons.bx_coffee_togo*/get bx_coffee_togo() {
      return C[834] || CT.C834;
    },
    /*flutter_boxicons.Boxicons.bx_cog*/get bx_cog() {
      return C[835] || CT.C835;
    },
    /*flutter_boxicons.Boxicons.bx_coin*/get bx_coin() {
      return C[836] || CT.C836;
    },
    /*flutter_boxicons.Boxicons.bx_coin_stack*/get bx_coin_stack() {
      return C[837] || CT.C837;
    },
    /*flutter_boxicons.Boxicons.bx_collapse*/get bx_collapse() {
      return C[838] || CT.C838;
    },
    /*flutter_boxicons.Boxicons.bx_collection*/get bx_collection() {
      return C[839] || CT.C839;
    },
    /*flutter_boxicons.Boxicons.bx_color_fill*/get bx_color_fill() {
      return C[840] || CT.C840;
    },
    /*flutter_boxicons.Boxicons.bx_columns*/get bx_columns() {
      return C[841] || CT.C841;
    },
    /*flutter_boxicons.Boxicons.bx_command*/get bx_command() {
      return C[842] || CT.C842;
    },
    /*flutter_boxicons.Boxicons.bx_comment*/get bx_comment() {
      return C[843] || CT.C843;
    },
    /*flutter_boxicons.Boxicons.bx_comment_add*/get bx_comment_add() {
      return C[844] || CT.C844;
    },
    /*flutter_boxicons.Boxicons.bx_comment_check*/get bx_comment_check() {
      return C[845] || CT.C845;
    },
    /*flutter_boxicons.Boxicons.bx_comment_detail*/get bx_comment_detail() {
      return C[846] || CT.C846;
    },
    /*flutter_boxicons.Boxicons.bx_comment_dots*/get bx_comment_dots() {
      return C[847] || CT.C847;
    },
    /*flutter_boxicons.Boxicons.bx_comment_edit*/get bx_comment_edit() {
      return C[848] || CT.C848;
    },
    /*flutter_boxicons.Boxicons.bx_comment_error*/get bx_comment_error() {
      return C[849] || CT.C849;
    },
    /*flutter_boxicons.Boxicons.bx_comment_minus*/get bx_comment_minus() {
      return C[850] || CT.C850;
    },
    /*flutter_boxicons.Boxicons.bx_comment_x*/get bx_comment_x() {
      return C[851] || CT.C851;
    },
    /*flutter_boxicons.Boxicons.bx_compass*/get bx_compass() {
      return C[852] || CT.C852;
    },
    /*flutter_boxicons.Boxicons.bx_confused*/get bx_confused() {
      return C[853] || CT.C853;
    },
    /*flutter_boxicons.Boxicons.bx_conversation*/get bx_conversation() {
      return C[854] || CT.C854;
    },
    /*flutter_boxicons.Boxicons.bx_cookie*/get bx_cookie() {
      return C[855] || CT.C855;
    },
    /*flutter_boxicons.Boxicons.bx_cool*/get bx_cool() {
      return C[856] || CT.C856;
    },
    /*flutter_boxicons.Boxicons.bx_copy*/get bx_copy() {
      return C[857] || CT.C857;
    },
    /*flutter_boxicons.Boxicons.bx_copy_alt*/get bx_copy_alt() {
      return C[858] || CT.C858;
    },
    /*flutter_boxicons.Boxicons.bx_copyright*/get bx_copyright() {
      return C[859] || CT.C859;
    },
    /*flutter_boxicons.Boxicons.bx_credit_card*/get bx_credit_card() {
      return C[860] || CT.C860;
    },
    /*flutter_boxicons.Boxicons.bx_credit_card_alt*/get bx_credit_card_alt() {
      return C[861] || CT.C861;
    },
    /*flutter_boxicons.Boxicons.bx_credit_card_front*/get bx_credit_card_front() {
      return C[862] || CT.C862;
    },
    /*flutter_boxicons.Boxicons.bx_crop*/get bx_crop() {
      return C[863] || CT.C863;
    },
    /*flutter_boxicons.Boxicons.bx_crosshair*/get bx_crosshair() {
      return C[864] || CT.C864;
    },
    /*flutter_boxicons.Boxicons.bx_crown*/get bx_crown() {
      return C[865] || CT.C865;
    },
    /*flutter_boxicons.Boxicons.bx_cube*/get bx_cube() {
      return C[866] || CT.C866;
    },
    /*flutter_boxicons.Boxicons.bx_cube_alt*/get bx_cube_alt() {
      return C[867] || CT.C867;
    },
    /*flutter_boxicons.Boxicons.bx_cuboid*/get bx_cuboid() {
      return C[868] || CT.C868;
    },
    /*flutter_boxicons.Boxicons.bx_current_location*/get bx_current_location() {
      return C[869] || CT.C869;
    },
    /*flutter_boxicons.Boxicons.bx_customize*/get bx_customize() {
      return C[870] || CT.C870;
    },
    /*flutter_boxicons.Boxicons.bx_cut*/get bx_cut() {
      return C[871] || CT.C871;
    },
    /*flutter_boxicons.Boxicons.bx_cycling*/get bx_cycling() {
      return C[872] || CT.C872;
    },
    /*flutter_boxicons.Boxicons.bx_cylinder*/get bx_cylinder() {
      return C[873] || CT.C873;
    },
    /*flutter_boxicons.Boxicons.bx_data*/get bx_data() {
      return C[874] || CT.C874;
    },
    /*flutter_boxicons.Boxicons.bx_desktop*/get bx_desktop() {
      return C[875] || CT.C875;
    },
    /*flutter_boxicons.Boxicons.bx_detail*/get bx_detail() {
      return C[876] || CT.C876;
    },
    /*flutter_boxicons.Boxicons.bx_devices*/get bx_devices() {
      return C[877] || CT.C877;
    },
    /*flutter_boxicons.Boxicons.bx_dialpad*/get bx_dialpad() {
      return C[878] || CT.C878;
    },
    /*flutter_boxicons.Boxicons.bx_dialpad_alt*/get bx_dialpad_alt() {
      return C[879] || CT.C879;
    },
    /*flutter_boxicons.Boxicons.bx_diamond*/get bx_diamond() {
      return C[880] || CT.C880;
    },
    /*flutter_boxicons.Boxicons.bx_dice_1*/get bx_dice_1() {
      return C[881] || CT.C881;
    },
    /*flutter_boxicons.Boxicons.bx_dice_2*/get bx_dice_2() {
      return C[882] || CT.C882;
    },
    /*flutter_boxicons.Boxicons.bx_dice_3*/get bx_dice_3() {
      return C[883] || CT.C883;
    },
    /*flutter_boxicons.Boxicons.bx_dice_4*/get bx_dice_4() {
      return C[884] || CT.C884;
    },
    /*flutter_boxicons.Boxicons.bx_dice_5*/get bx_dice_5() {
      return C[885] || CT.C885;
    },
    /*flutter_boxicons.Boxicons.bx_dice_6*/get bx_dice_6() {
      return C[886] || CT.C886;
    },
    /*flutter_boxicons.Boxicons.bx_directions*/get bx_directions() {
      return C[887] || CT.C887;
    },
    /*flutter_boxicons.Boxicons.bx_disc*/get bx_disc() {
      return C[888] || CT.C888;
    },
    /*flutter_boxicons.Boxicons.bx_dish*/get bx_dish() {
      return C[889] || CT.C889;
    },
    /*flutter_boxicons.Boxicons.bx_dislike*/get bx_dislike() {
      return C[890] || CT.C890;
    },
    /*flutter_boxicons.Boxicons.bx_dizzy*/get bx_dizzy() {
      return C[891] || CT.C891;
    },
    /*flutter_boxicons.Boxicons.bx_dna*/get bx_dna() {
      return C[892] || CT.C892;
    },
    /*flutter_boxicons.Boxicons.bx_dock_bottom*/get bx_dock_bottom() {
      return C[893] || CT.C893;
    },
    /*flutter_boxicons.Boxicons.bx_dock_left*/get bx_dock_left() {
      return C[894] || CT.C894;
    },
    /*flutter_boxicons.Boxicons.bx_dock_right*/get bx_dock_right() {
      return C[895] || CT.C895;
    },
    /*flutter_boxicons.Boxicons.bx_dock_top*/get bx_dock_top() {
      return C[896] || CT.C896;
    },
    /*flutter_boxicons.Boxicons.bx_dollar*/get bx_dollar() {
      return C[897] || CT.C897;
    },
    /*flutter_boxicons.Boxicons.bx_dollar_circle*/get bx_dollar_circle() {
      return C[898] || CT.C898;
    },
    /*flutter_boxicons.Boxicons.bx_donate_blood*/get bx_donate_blood() {
      return C[899] || CT.C899;
    },
    /*flutter_boxicons.Boxicons.bx_donate_heart*/get bx_donate_heart() {
      return C[900] || CT.C900;
    },
    /*flutter_boxicons.Boxicons.bx_door_open*/get bx_door_open() {
      return C[901] || CT.C901;
    },
    /*flutter_boxicons.Boxicons.bx_dots_horizontal*/get bx_dots_horizontal() {
      return C[902] || CT.C902;
    },
    /*flutter_boxicons.Boxicons.bx_dots_horizontal_rounded*/get bx_dots_horizontal_rounded() {
      return C[903] || CT.C903;
    },
    /*flutter_boxicons.Boxicons.bx_dots_vertical*/get bx_dots_vertical() {
      return C[904] || CT.C904;
    },
    /*flutter_boxicons.Boxicons.bx_dots_vertical_rounded*/get bx_dots_vertical_rounded() {
      return C[905] || CT.C905;
    },
    /*flutter_boxicons.Boxicons.bx_doughnut_chart*/get bx_doughnut_chart() {
      return C[906] || CT.C906;
    },
    /*flutter_boxicons.Boxicons.bx_down_arrow*/get bx_down_arrow() {
      return C[907] || CT.C907;
    },
    /*flutter_boxicons.Boxicons.bx_down_arrow_alt*/get bx_down_arrow_alt() {
      return C[908] || CT.C908;
    },
    /*flutter_boxicons.Boxicons.bx_down_arrow_circle*/get bx_down_arrow_circle() {
      return C[909] || CT.C909;
    },
    /*flutter_boxicons.Boxicons.bx_download*/get bx_download() {
      return C[910] || CT.C910;
    },
    /*flutter_boxicons.Boxicons.bx_downvote*/get bx_downvote() {
      return C[911] || CT.C911;
    },
    /*flutter_boxicons.Boxicons.bx_drink*/get bx_drink() {
      return C[912] || CT.C912;
    },
    /*flutter_boxicons.Boxicons.bx_droplet*/get bx_droplet() {
      return C[913] || CT.C913;
    },
    /*flutter_boxicons.Boxicons.bx_dumbbell*/get bx_dumbbell() {
      return C[914] || CT.C914;
    },
    /*flutter_boxicons.Boxicons.bx_duplicate*/get bx_duplicate() {
      return C[915] || CT.C915;
    },
    /*flutter_boxicons.Boxicons.bx_edit*/get bx_edit() {
      return C[916] || CT.C916;
    },
    /*flutter_boxicons.Boxicons.bx_edit_alt*/get bx_edit_alt() {
      return C[917] || CT.C917;
    },
    /*flutter_boxicons.Boxicons.bx_envelope*/get bx_envelope() {
      return C[918] || CT.C918;
    },
    /*flutter_boxicons.Boxicons.bx_envelope_open*/get bx_envelope_open() {
      return C[919] || CT.C919;
    },
    /*flutter_boxicons.Boxicons.bx_equalizer*/get bx_equalizer() {
      return C[920] || CT.C920;
    },
    /*flutter_boxicons.Boxicons.bx_eraser*/get bx_eraser() {
      return C[921] || CT.C921;
    },
    /*flutter_boxicons.Boxicons.bx_error*/get bx_error() {
      return C[922] || CT.C922;
    },
    /*flutter_boxicons.Boxicons.bx_error_alt*/get bx_error_alt() {
      return C[923] || CT.C923;
    },
    /*flutter_boxicons.Boxicons.bx_error_circle*/get bx_error_circle() {
      return C[924] || CT.C924;
    },
    /*flutter_boxicons.Boxicons.bx_euro*/get bx_euro() {
      return C[925] || CT.C925;
    },
    /*flutter_boxicons.Boxicons.bx_exclude*/get bx_exclude() {
      return C[926] || CT.C926;
    },
    /*flutter_boxicons.Boxicons.bx_exit*/get bx_exit() {
      return C[927] || CT.C927;
    },
    /*flutter_boxicons.Boxicons.bx_exit_fullscreen*/get bx_exit_fullscreen() {
      return C[928] || CT.C928;
    },
    /*flutter_boxicons.Boxicons.bx_expand*/get bx_expand() {
      return C[929] || CT.C929;
    },
    /*flutter_boxicons.Boxicons.bx_expand_alt*/get bx_expand_alt() {
      return C[930] || CT.C930;
    },
    /*flutter_boxicons.Boxicons.bx_export*/get bx_export() {
      return C[931] || CT.C931;
    },
    /*flutter_boxicons.Boxicons.bx_extension*/get bx_extension() {
      return C[932] || CT.C932;
    },
    /*flutter_boxicons.Boxicons.bx_face*/get bx_face() {
      return C[933] || CT.C933;
    },
    /*flutter_boxicons.Boxicons.bx_fast_forward*/get bx_fast_forward() {
      return C[934] || CT.C934;
    },
    /*flutter_boxicons.Boxicons.bx_fast_forward_circle*/get bx_fast_forward_circle() {
      return C[935] || CT.C935;
    },
    /*flutter_boxicons.Boxicons.bx_female*/get bx_female() {
      return C[936] || CT.C936;
    },
    /*flutter_boxicons.Boxicons.bx_female_sign*/get bx_female_sign() {
      return C[937] || CT.C937;
    },
    /*flutter_boxicons.Boxicons.bx_file*/get bx_file() {
      return C[938] || CT.C938;
    },
    /*flutter_boxicons.Boxicons.bx_file_blank*/get bx_file_blank() {
      return C[939] || CT.C939;
    },
    /*flutter_boxicons.Boxicons.bx_file_find*/get bx_file_find() {
      return C[940] || CT.C940;
    },
    /*flutter_boxicons.Boxicons.bx_film*/get bx_film() {
      return C[941] || CT.C941;
    },
    /*flutter_boxicons.Boxicons.bx_filter*/get bx_filter() {
      return C[942] || CT.C942;
    },
    /*flutter_boxicons.Boxicons.bx_filter_alt*/get bx_filter_alt() {
      return C[943] || CT.C943;
    },
    /*flutter_boxicons.Boxicons.bx_fingerprint*/get bx_fingerprint() {
      return C[944] || CT.C944;
    },
    /*flutter_boxicons.Boxicons.bx_first_aid*/get bx_first_aid() {
      return C[945] || CT.C945;
    },
    /*flutter_boxicons.Boxicons.bx_first_page*/get bx_first_page() {
      return C[946] || CT.C946;
    },
    /*flutter_boxicons.Boxicons.bx_flag*/get bx_flag() {
      return C[947] || CT.C947;
    },
    /*flutter_boxicons.Boxicons.bx_folder*/get bx_folder() {
      return C[948] || CT.C948;
    },
    /*flutter_boxicons.Boxicons.bx_folder_minus*/get bx_folder_minus() {
      return C[949] || CT.C949;
    },
    /*flutter_boxicons.Boxicons.bx_folder_open*/get bx_folder_open() {
      return C[950] || CT.C950;
    },
    /*flutter_boxicons.Boxicons.bx_folder_plus*/get bx_folder_plus() {
      return C[951] || CT.C951;
    },
    /*flutter_boxicons.Boxicons.bx_font*/get bx_font() {
      return C[952] || CT.C952;
    },
    /*flutter_boxicons.Boxicons.bx_font_color*/get bx_font_color() {
      return C[953] || CT.C953;
    },
    /*flutter_boxicons.Boxicons.bx_font_family*/get bx_font_family() {
      return C[954] || CT.C954;
    },
    /*flutter_boxicons.Boxicons.bx_font_size*/get bx_font_size() {
      return C[955] || CT.C955;
    },
    /*flutter_boxicons.Boxicons.bx_food_menu*/get bx_food_menu() {
      return C[956] || CT.C956;
    },
    /*flutter_boxicons.Boxicons.bx_food_tag*/get bx_food_tag() {
      return C[957] || CT.C957;
    },
    /*flutter_boxicons.Boxicons.bx_football*/get bx_football() {
      return C[958] || CT.C958;
    },
    /*flutter_boxicons.Boxicons.bx_fridge*/get bx_fridge() {
      return C[959] || CT.C959;
    },
    /*flutter_boxicons.Boxicons.bx_fullscreen*/get bx_fullscreen() {
      return C[960] || CT.C960;
    },
    /*flutter_boxicons.Boxicons.bx_game*/get bx_game() {
      return C[961] || CT.C961;
    },
    /*flutter_boxicons.Boxicons.bx_gas_pump*/get bx_gas_pump() {
      return C[962] || CT.C962;
    },
    /*flutter_boxicons.Boxicons.bx_ghost*/get bx_ghost() {
      return C[963] || CT.C963;
    },
    /*flutter_boxicons.Boxicons.bx_gift*/get bx_gift() {
      return C[964] || CT.C964;
    },
    /*flutter_boxicons.Boxicons.bx_git_branch*/get bx_git_branch() {
      return C[965] || CT.C965;
    },
    /*flutter_boxicons.Boxicons.bx_git_commit*/get bx_git_commit() {
      return C[966] || CT.C966;
    },
    /*flutter_boxicons.Boxicons.bx_git_compare*/get bx_git_compare() {
      return C[967] || CT.C967;
    },
    /*flutter_boxicons.Boxicons.bx_git_merge*/get bx_git_merge() {
      return C[968] || CT.C968;
    },
    /*flutter_boxicons.Boxicons.bx_git_pull_request*/get bx_git_pull_request() {
      return C[969] || CT.C969;
    },
    /*flutter_boxicons.Boxicons.bx_git_repo_forked*/get bx_git_repo_forked() {
      return C[970] || CT.C970;
    },
    /*flutter_boxicons.Boxicons.bx_glasses*/get bx_glasses() {
      return C[971] || CT.C971;
    },
    /*flutter_boxicons.Boxicons.bx_glasses_alt*/get bx_glasses_alt() {
      return C[972] || CT.C972;
    },
    /*flutter_boxicons.Boxicons.bx_globe*/get bx_globe() {
      return C[973] || CT.C973;
    },
    /*flutter_boxicons.Boxicons.bx_globe_alt*/get bx_globe_alt() {
      return C[974] || CT.C974;
    },
    /*flutter_boxicons.Boxicons.bx_grid*/get bx_grid() {
      return C[975] || CT.C975;
    },
    /*flutter_boxicons.Boxicons.bx_grid_alt*/get bx_grid_alt() {
      return C[976] || CT.C976;
    },
    /*flutter_boxicons.Boxicons.bx_grid_horizontal*/get bx_grid_horizontal() {
      return C[977] || CT.C977;
    },
    /*flutter_boxicons.Boxicons.bx_grid_small*/get bx_grid_small() {
      return C[978] || CT.C978;
    },
    /*flutter_boxicons.Boxicons.bx_grid_vertical*/get bx_grid_vertical() {
      return C[979] || CT.C979;
    },
    /*flutter_boxicons.Boxicons.bx_group*/get bx_group() {
      return C[980] || CT.C980;
    },
    /*flutter_boxicons.Boxicons.bx_handicap*/get bx_handicap() {
      return C[981] || CT.C981;
    },
    /*flutter_boxicons.Boxicons.bx_happy*/get bx_happy() {
      return C[982] || CT.C982;
    },
    /*flutter_boxicons.Boxicons.bx_happy_alt*/get bx_happy_alt() {
      return C[983] || CT.C983;
    },
    /*flutter_boxicons.Boxicons.bx_happy_beaming*/get bx_happy_beaming() {
      return C[984] || CT.C984;
    },
    /*flutter_boxicons.Boxicons.bx_happy_heart_eyes*/get bx_happy_heart_eyes() {
      return C[985] || CT.C985;
    },
    /*flutter_boxicons.Boxicons.bx_hash*/get bx_hash() {
      return C[986] || CT.C986;
    },
    /*flutter_boxicons.Boxicons.bx_hdd*/get bx_hdd() {
      return C[987] || CT.C987;
    },
    /*flutter_boxicons.Boxicons.bx_heading*/get bx_heading() {
      return C[988] || CT.C988;
    },
    /*flutter_boxicons.Boxicons.bx_headphone*/get bx_headphone() {
      return C[989] || CT.C989;
    },
    /*flutter_boxicons.Boxicons.bx_health*/get bx_health() {
      return C[990] || CT.C990;
    },
    /*flutter_boxicons.Boxicons.bx_heart*/get bx_heart() {
      return C[991] || CT.C991;
    },
    /*flutter_boxicons.Boxicons.bx_heart_circle*/get bx_heart_circle() {
      return C[992] || CT.C992;
    },
    /*flutter_boxicons.Boxicons.bx_heart_square*/get bx_heart_square() {
      return C[993] || CT.C993;
    },
    /*flutter_boxicons.Boxicons.bx_help_circle*/get bx_help_circle() {
      return C[994] || CT.C994;
    },
    /*flutter_boxicons.Boxicons.bx_hide*/get bx_hide() {
      return C[995] || CT.C995;
    },
    /*flutter_boxicons.Boxicons.bx_highlight*/get bx_highlight() {
      return C[996] || CT.C996;
    },
    /*flutter_boxicons.Boxicons.bx_history*/get bx_history() {
      return C[997] || CT.C997;
    },
    /*flutter_boxicons.Boxicons.bx_hive*/get bx_hive() {
      return C[998] || CT.C998;
    },
    /*flutter_boxicons.Boxicons.bx_home*/get bx_home() {
      return C[999] || CT.C999;
    },
    /*flutter_boxicons.Boxicons.bx_home_alt*/get bx_home_alt() {
      return C[1000] || CT.C1000;
    },
    /*flutter_boxicons.Boxicons.bx_home_circle*/get bx_home_circle() {
      return C[1001] || CT.C1001;
    },
    /*flutter_boxicons.Boxicons.bx_home_heart*/get bx_home_heart() {
      return C[1002] || CT.C1002;
    },
    /*flutter_boxicons.Boxicons.bx_home_smile*/get bx_home_smile() {
      return C[1003] || CT.C1003;
    },
    /*flutter_boxicons.Boxicons.bx_horizontal_center*/get bx_horizontal_center() {
      return C[1004] || CT.C1004;
    },
    /*flutter_boxicons.Boxicons.bx_hotel*/get bx_hotel() {
      return C[1005] || CT.C1005;
    },
    /*flutter_boxicons.Boxicons.bx_hourglass*/get bx_hourglass() {
      return C[1006] || CT.C1006;
    },
    /*flutter_boxicons.Boxicons.bx_id_card*/get bx_id_card() {
      return C[1007] || CT.C1007;
    },
    /*flutter_boxicons.Boxicons.bx_image*/get bx_image() {
      return C[1008] || CT.C1008;
    },
    /*flutter_boxicons.Boxicons.bx_image_add*/get bx_image_add() {
      return C[1009] || CT.C1009;
    },
    /*flutter_boxicons.Boxicons.bx_image_alt*/get bx_image_alt() {
      return C[1010] || CT.C1010;
    },
    /*flutter_boxicons.Boxicons.bx_images*/get bx_images() {
      return C[1011] || CT.C1011;
    },
    /*flutter_boxicons.Boxicons.bx_import*/get bx_import() {
      return C[1012] || CT.C1012;
    },
    /*flutter_boxicons.Boxicons.bx_infinite*/get bx_infinite() {
      return C[1013] || CT.C1013;
    },
    /*flutter_boxicons.Boxicons.bx_info_circle*/get bx_info_circle() {
      return C[1014] || CT.C1014;
    },
    /*flutter_boxicons.Boxicons.bx_info_square*/get bx_info_square() {
      return C[1015] || CT.C1015;
    },
    /*flutter_boxicons.Boxicons.bx_intersect*/get bx_intersect() {
      return C[1016] || CT.C1016;
    },
    /*flutter_boxicons.Boxicons.bx_italic*/get bx_italic() {
      return C[1017] || CT.C1017;
    },
    /*flutter_boxicons.Boxicons.bx_joystick*/get bx_joystick() {
      return C[1018] || CT.C1018;
    },
    /*flutter_boxicons.Boxicons.bx_joystick_alt*/get bx_joystick_alt() {
      return C[1019] || CT.C1019;
    },
    /*flutter_boxicons.Boxicons.bx_joystick_button*/get bx_joystick_button() {
      return C[1020] || CT.C1020;
    },
    /*flutter_boxicons.Boxicons.bx_key*/get bx_key() {
      return C[1021] || CT.C1021;
    },
    /*flutter_boxicons.Boxicons.bx_label*/get bx_label() {
      return C[1022] || CT.C1022;
    },
    /*flutter_boxicons.Boxicons.bx_landscape*/get bx_landscape() {
      return C[1023] || CT.C1023;
    },
    /*flutter_boxicons.Boxicons.bx_laptop*/get bx_laptop() {
      return C[1024] || CT.C1024;
    },
    /*flutter_boxicons.Boxicons.bx_last_page*/get bx_last_page() {
      return C[1025] || CT.C1025;
    },
    /*flutter_boxicons.Boxicons.bx_laugh*/get bx_laugh() {
      return C[1026] || CT.C1026;
    },
    /*flutter_boxicons.Boxicons.bx_layer*/get bx_layer() {
      return C[1027] || CT.C1027;
    },
    /*flutter_boxicons.Boxicons.bx_layer_minus*/get bx_layer_minus() {
      return C[1028] || CT.C1028;
    },
    /*flutter_boxicons.Boxicons.bx_layer_plus*/get bx_layer_plus() {
      return C[1029] || CT.C1029;
    },
    /*flutter_boxicons.Boxicons.bx_layout*/get bx_layout() {
      return C[1030] || CT.C1030;
    },
    /*flutter_boxicons.Boxicons.bx_left_arrow*/get bx_left_arrow() {
      return C[1031] || CT.C1031;
    },
    /*flutter_boxicons.Boxicons.bx_left_arrow_alt*/get bx_left_arrow_alt() {
      return C[1032] || CT.C1032;
    },
    /*flutter_boxicons.Boxicons.bx_left_arrow_circle*/get bx_left_arrow_circle() {
      return C[1033] || CT.C1033;
    },
    /*flutter_boxicons.Boxicons.bx_left_down_arrow_circle*/get bx_left_down_arrow_circle() {
      return C[1034] || CT.C1034;
    },
    /*flutter_boxicons.Boxicons.bx_left_indent*/get bx_left_indent() {
      return C[1035] || CT.C1035;
    },
    /*flutter_boxicons.Boxicons.bx_left_top_arrow_circle*/get bx_left_top_arrow_circle() {
      return C[1036] || CT.C1036;
    },
    /*flutter_boxicons.Boxicons.bx_library*/get bx_library() {
      return C[1037] || CT.C1037;
    },
    /*flutter_boxicons.Boxicons.bx_like*/get bx_like() {
      return C[1038] || CT.C1038;
    },
    /*flutter_boxicons.Boxicons.bx_line_chart*/get bx_line_chart() {
      return C[1039] || CT.C1039;
    },
    /*flutter_boxicons.Boxicons.bx_line_chart_down*/get bx_line_chart_down() {
      return C[1040] || CT.C1040;
    },
    /*flutter_boxicons.Boxicons.bx_link*/get bx_link() {
      return C[1041] || CT.C1041;
    },
    /*flutter_boxicons.Boxicons.bx_link_alt*/get bx_link_alt() {
      return C[1042] || CT.C1042;
    },
    /*flutter_boxicons.Boxicons.bx_link_external*/get bx_link_external() {
      return C[1043] || CT.C1043;
    },
    /*flutter_boxicons.Boxicons.bx_lira*/get bx_lira() {
      return C[1044] || CT.C1044;
    },
    /*flutter_boxicons.Boxicons.bx_list_check*/get bx_list_check() {
      return C[1045] || CT.C1045;
    },
    /*flutter_boxicons.Boxicons.bx_list_minus*/get bx_list_minus() {
      return C[1046] || CT.C1046;
    },
    /*flutter_boxicons.Boxicons.bx_list_ol*/get bx_list_ol() {
      return C[1047] || CT.C1047;
    },
    /*flutter_boxicons.Boxicons.bx_list_plus*/get bx_list_plus() {
      return C[1048] || CT.C1048;
    },
    /*flutter_boxicons.Boxicons.bx_list_ul*/get bx_list_ul() {
      return C[1049] || CT.C1049;
    },
    /*flutter_boxicons.Boxicons.bx_loader*/get bx_loader() {
      return C[1050] || CT.C1050;
    },
    /*flutter_boxicons.Boxicons.bx_loader_alt*/get bx_loader_alt() {
      return C[1051] || CT.C1051;
    },
    /*flutter_boxicons.Boxicons.bx_loader_circle*/get bx_loader_circle() {
      return C[1052] || CT.C1052;
    },
    /*flutter_boxicons.Boxicons.bx_location_plus*/get bx_location_plus() {
      return C[1053] || CT.C1053;
    },
    /*flutter_boxicons.Boxicons.bx_lock*/get bx_lock() {
      return C[1054] || CT.C1054;
    },
    /*flutter_boxicons.Boxicons.bx_lock_alt*/get bx_lock_alt() {
      return C[1055] || CT.C1055;
    },
    /*flutter_boxicons.Boxicons.bx_lock_open*/get bx_lock_open() {
      return C[1056] || CT.C1056;
    },
    /*flutter_boxicons.Boxicons.bx_lock_open_alt*/get bx_lock_open_alt() {
      return C[1057] || CT.C1057;
    },
    /*flutter_boxicons.Boxicons.bx_log_in*/get bx_log_in() {
      return C[1058] || CT.C1058;
    },
    /*flutter_boxicons.Boxicons.bx_log_in_circle*/get bx_log_in_circle() {
      return C[1059] || CT.C1059;
    },
    /*flutter_boxicons.Boxicons.bx_log_out*/get bx_log_out() {
      return C[1060] || CT.C1060;
    },
    /*flutter_boxicons.Boxicons.bx_log_out_circle*/get bx_log_out_circle() {
      return C[1061] || CT.C1061;
    },
    /*flutter_boxicons.Boxicons.bx_low_vision*/get bx_low_vision() {
      return C[1062] || CT.C1062;
    },
    /*flutter_boxicons.Boxicons.bx_magnet*/get bx_magnet() {
      return C[1063] || CT.C1063;
    },
    /*flutter_boxicons.Boxicons.bx_mail_send*/get bx_mail_send() {
      return C[1064] || CT.C1064;
    },
    /*flutter_boxicons.Boxicons.bx_male*/get bx_male() {
      return C[1065] || CT.C1065;
    },
    /*flutter_boxicons.Boxicons.bx_male_sign*/get bx_male_sign() {
      return C[1066] || CT.C1066;
    },
    /*flutter_boxicons.Boxicons.bx_map*/get bx_map() {
      return C[1067] || CT.C1067;
    },
    /*flutter_boxicons.Boxicons.bx_map_alt*/get bx_map_alt() {
      return C[1068] || CT.C1068;
    },
    /*flutter_boxicons.Boxicons.bx_map_pin*/get bx_map_pin() {
      return C[1069] || CT.C1069;
    },
    /*flutter_boxicons.Boxicons.bx_mask*/get bx_mask() {
      return C[1070] || CT.C1070;
    },
    /*flutter_boxicons.Boxicons.bx_medal*/get bx_medal() {
      return C[1071] || CT.C1071;
    },
    /*flutter_boxicons.Boxicons.bx_meh*/get bx_meh() {
      return C[1072] || CT.C1072;
    },
    /*flutter_boxicons.Boxicons.bx_meh_alt*/get bx_meh_alt() {
      return C[1073] || CT.C1073;
    },
    /*flutter_boxicons.Boxicons.bx_meh_blank*/get bx_meh_blank() {
      return C[1074] || CT.C1074;
    },
    /*flutter_boxicons.Boxicons.bx_memory_card*/get bx_memory_card() {
      return C[1075] || CT.C1075;
    },
    /*flutter_boxicons.Boxicons.bx_menu*/get bx_menu() {
      return C[1076] || CT.C1076;
    },
    /*flutter_boxicons.Boxicons.bx_menu_alt_left*/get bx_menu_alt_left() {
      return C[1077] || CT.C1077;
    },
    /*flutter_boxicons.Boxicons.bx_menu_alt_right*/get bx_menu_alt_right() {
      return C[1078] || CT.C1078;
    },
    /*flutter_boxicons.Boxicons.bx_merge*/get bx_merge() {
      return C[1079] || CT.C1079;
    },
    /*flutter_boxicons.Boxicons.bx_message*/get bx_message() {
      return C[1080] || CT.C1080;
    },
    /*flutter_boxicons.Boxicons.bx_message_add*/get bx_message_add() {
      return C[1081] || CT.C1081;
    },
    /*flutter_boxicons.Boxicons.bx_message_alt*/get bx_message_alt() {
      return C[1082] || CT.C1082;
    },
    /*flutter_boxicons.Boxicons.bx_message_alt_add*/get bx_message_alt_add() {
      return C[1083] || CT.C1083;
    },
    /*flutter_boxicons.Boxicons.bx_message_alt_check*/get bx_message_alt_check() {
      return C[1084] || CT.C1084;
    },
    /*flutter_boxicons.Boxicons.bx_message_alt_detail*/get bx_message_alt_detail() {
      return C[1085] || CT.C1085;
    },
    /*flutter_boxicons.Boxicons.bx_message_alt_dots*/get bx_message_alt_dots() {
      return C[1086] || CT.C1086;
    },
    /*flutter_boxicons.Boxicons.bx_message_alt_edit*/get bx_message_alt_edit() {
      return C[1087] || CT.C1087;
    },
    /*flutter_boxicons.Boxicons.bx_message_alt_error*/get bx_message_alt_error() {
      return C[1088] || CT.C1088;
    },
    /*flutter_boxicons.Boxicons.bx_message_alt_minus*/get bx_message_alt_minus() {
      return C[1089] || CT.C1089;
    },
    /*flutter_boxicons.Boxicons.bx_message_alt_x*/get bx_message_alt_x() {
      return C[1090] || CT.C1090;
    },
    /*flutter_boxicons.Boxicons.bx_message_check*/get bx_message_check() {
      return C[1091] || CT.C1091;
    },
    /*flutter_boxicons.Boxicons.bx_message_detail*/get bx_message_detail() {
      return C[1092] || CT.C1092;
    },
    /*flutter_boxicons.Boxicons.bx_message_dots*/get bx_message_dots() {
      return C[1093] || CT.C1093;
    },
    /*flutter_boxicons.Boxicons.bx_message_edit*/get bx_message_edit() {
      return C[1094] || CT.C1094;
    },
    /*flutter_boxicons.Boxicons.bx_message_error*/get bx_message_error() {
      return C[1095] || CT.C1095;
    },
    /*flutter_boxicons.Boxicons.bx_message_minus*/get bx_message_minus() {
      return C[1096] || CT.C1096;
    },
    /*flutter_boxicons.Boxicons.bx_message_rounded*/get bx_message_rounded() {
      return C[1097] || CT.C1097;
    },
    /*flutter_boxicons.Boxicons.bx_message_rounded_add*/get bx_message_rounded_add() {
      return C[1098] || CT.C1098;
    },
    /*flutter_boxicons.Boxicons.bx_message_rounded_check*/get bx_message_rounded_check() {
      return C[1099] || CT.C1099;
    },
    /*flutter_boxicons.Boxicons.bx_message_rounded_detail*/get bx_message_rounded_detail() {
      return C[1100] || CT.C1100;
    },
    /*flutter_boxicons.Boxicons.bx_message_rounded_dots*/get bx_message_rounded_dots() {
      return C[1101] || CT.C1101;
    },
    /*flutter_boxicons.Boxicons.bx_message_rounded_edit*/get bx_message_rounded_edit() {
      return C[1102] || CT.C1102;
    },
    /*flutter_boxicons.Boxicons.bx_message_rounded_error*/get bx_message_rounded_error() {
      return C[1103] || CT.C1103;
    },
    /*flutter_boxicons.Boxicons.bx_message_rounded_minus*/get bx_message_rounded_minus() {
      return C[1104] || CT.C1104;
    },
    /*flutter_boxicons.Boxicons.bx_message_rounded_x*/get bx_message_rounded_x() {
      return C[1105] || CT.C1105;
    },
    /*flutter_boxicons.Boxicons.bx_message_square*/get bx_message_square() {
      return C[1106] || CT.C1106;
    },
    /*flutter_boxicons.Boxicons.bx_message_square_add*/get bx_message_square_add() {
      return C[1107] || CT.C1107;
    },
    /*flutter_boxicons.Boxicons.bx_message_square_check*/get bx_message_square_check() {
      return C[1108] || CT.C1108;
    },
    /*flutter_boxicons.Boxicons.bx_message_square_detail*/get bx_message_square_detail() {
      return C[1109] || CT.C1109;
    },
    /*flutter_boxicons.Boxicons.bx_message_square_dots*/get bx_message_square_dots() {
      return C[1110] || CT.C1110;
    },
    /*flutter_boxicons.Boxicons.bx_message_square_edit*/get bx_message_square_edit() {
      return C[1111] || CT.C1111;
    },
    /*flutter_boxicons.Boxicons.bx_message_square_error*/get bx_message_square_error() {
      return C[1112] || CT.C1112;
    },
    /*flutter_boxicons.Boxicons.bx_message_square_minus*/get bx_message_square_minus() {
      return C[1113] || CT.C1113;
    },
    /*flutter_boxicons.Boxicons.bx_message_square_x*/get bx_message_square_x() {
      return C[1114] || CT.C1114;
    },
    /*flutter_boxicons.Boxicons.bx_message_x*/get bx_message_x() {
      return C[1115] || CT.C1115;
    },
    /*flutter_boxicons.Boxicons.bx_meteor*/get bx_meteor() {
      return C[1116] || CT.C1116;
    },
    /*flutter_boxicons.Boxicons.bx_microchip*/get bx_microchip() {
      return C[1117] || CT.C1117;
    },
    /*flutter_boxicons.Boxicons.bx_microphone*/get bx_microphone() {
      return C[1118] || CT.C1118;
    },
    /*flutter_boxicons.Boxicons.bx_microphone_off*/get bx_microphone_off() {
      return C[1119] || CT.C1119;
    },
    /*flutter_boxicons.Boxicons.bx_minus*/get bx_minus() {
      return C[1120] || CT.C1120;
    },
    /*flutter_boxicons.Boxicons.bx_minus_back*/get bx_minus_back() {
      return C[1121] || CT.C1121;
    },
    /*flutter_boxicons.Boxicons.bx_minus_circle*/get bx_minus_circle() {
      return C[1122] || CT.C1122;
    },
    /*flutter_boxicons.Boxicons.bx_minus_front*/get bx_minus_front() {
      return C[1123] || CT.C1123;
    },
    /*flutter_boxicons.Boxicons.bx_mobile*/get bx_mobile() {
      return C[1124] || CT.C1124;
    },
    /*flutter_boxicons.Boxicons.bx_mobile_alt*/get bx_mobile_alt() {
      return C[1125] || CT.C1125;
    },
    /*flutter_boxicons.Boxicons.bx_mobile_landscape*/get bx_mobile_landscape() {
      return C[1126] || CT.C1126;
    },
    /*flutter_boxicons.Boxicons.bx_mobile_vibration*/get bx_mobile_vibration() {
      return C[1127] || CT.C1127;
    },
    /*flutter_boxicons.Boxicons.bx_money*/get bx_money() {
      return C[1128] || CT.C1128;
    },
    /*flutter_boxicons.Boxicons.bx_moon*/get bx_moon() {
      return C[1129] || CT.C1129;
    },
    /*flutter_boxicons.Boxicons.bx_mouse*/get bx_mouse() {
      return C[1130] || CT.C1130;
    },
    /*flutter_boxicons.Boxicons.bx_mouse_alt*/get bx_mouse_alt() {
      return C[1131] || CT.C1131;
    },
    /*flutter_boxicons.Boxicons.bx_move*/get bx_move() {
      return C[1132] || CT.C1132;
    },
    /*flutter_boxicons.Boxicons.bx_move_horizontal*/get bx_move_horizontal() {
      return C[1133] || CT.C1133;
    },
    /*flutter_boxicons.Boxicons.bx_move_vertical*/get bx_move_vertical() {
      return C[1134] || CT.C1134;
    },
    /*flutter_boxicons.Boxicons.bx_movie*/get bx_movie() {
      return C[1135] || CT.C1135;
    },
    /*flutter_boxicons.Boxicons.bx_movie_play*/get bx_movie_play() {
      return C[1136] || CT.C1136;
    },
    /*flutter_boxicons.Boxicons.bx_music*/get bx_music() {
      return C[1137] || CT.C1137;
    },
    /*flutter_boxicons.Boxicons.bx_navigation*/get bx_navigation() {
      return C[1138] || CT.C1138;
    },
    /*flutter_boxicons.Boxicons.bx_network_chart*/get bx_network_chart() {
      return C[1139] || CT.C1139;
    },
    /*flutter_boxicons.Boxicons.bx_news*/get bx_news() {
      return C[1140] || CT.C1140;
    },
    /*flutter_boxicons.Boxicons.bx_no_entry*/get bx_no_entry() {
      return C[1141] || CT.C1141;
    },
    /*flutter_boxicons.Boxicons.bx_note*/get bx_note() {
      return C[1142] || CT.C1142;
    },
    /*flutter_boxicons.Boxicons.bx_notepad*/get bx_notepad() {
      return C[1143] || CT.C1143;
    },
    /*flutter_boxicons.Boxicons.bx_notification*/get bx_notification() {
      return C[1144] || CT.C1144;
    },
    /*flutter_boxicons.Boxicons.bx_notification_off*/get bx_notification_off() {
      return C[1145] || CT.C1145;
    },
    /*flutter_boxicons.Boxicons.bx_outline*/get bx_outline() {
      return C[1146] || CT.C1146;
    },
    /*flutter_boxicons.Boxicons.bx_package*/get bx_package() {
      return C[1147] || CT.C1147;
    },
    /*flutter_boxicons.Boxicons.bx_paint*/get bx_paint() {
      return C[1148] || CT.C1148;
    },
    /*flutter_boxicons.Boxicons.bx_paint_roll*/get bx_paint_roll() {
      return C[1149] || CT.C1149;
    },
    /*flutter_boxicons.Boxicons.bx_palette*/get bx_palette() {
      return C[1150] || CT.C1150;
    },
    /*flutter_boxicons.Boxicons.bx_paperclip*/get bx_paperclip() {
      return C[1151] || CT.C1151;
    },
    /*flutter_boxicons.Boxicons.bx_paper_plane*/get bx_paper_plane() {
      return C[1152] || CT.C1152;
    },
    /*flutter_boxicons.Boxicons.bx_paragraph*/get bx_paragraph() {
      return C[1153] || CT.C1153;
    },
    /*flutter_boxicons.Boxicons.bx_paste*/get bx_paste() {
      return C[1154] || CT.C1154;
    },
    /*flutter_boxicons.Boxicons.bx_pause*/get bx_pause() {
      return C[1155] || CT.C1155;
    },
    /*flutter_boxicons.Boxicons.bx_pause_circle*/get bx_pause_circle() {
      return C[1156] || CT.C1156;
    },
    /*flutter_boxicons.Boxicons.bx_pen*/get bx_pen() {
      return C[1157] || CT.C1157;
    },
    /*flutter_boxicons.Boxicons.bx_pencil*/get bx_pencil() {
      return C[1158] || CT.C1158;
    },
    /*flutter_boxicons.Boxicons.bx_phone*/get bx_phone() {
      return C[1159] || CT.C1159;
    },
    /*flutter_boxicons.Boxicons.bx_phone_call*/get bx_phone_call() {
      return C[1160] || CT.C1160;
    },
    /*flutter_boxicons.Boxicons.bx_phone_incoming*/get bx_phone_incoming() {
      return C[1161] || CT.C1161;
    },
    /*flutter_boxicons.Boxicons.bx_phone_outgoing*/get bx_phone_outgoing() {
      return C[1162] || CT.C1162;
    },
    /*flutter_boxicons.Boxicons.bx_photo_album*/get bx_photo_album() {
      return C[1163] || CT.C1163;
    },
    /*flutter_boxicons.Boxicons.bx_pie_chart*/get bx_pie_chart() {
      return C[1164] || CT.C1164;
    },
    /*flutter_boxicons.Boxicons.bx_pie_chart_alt*/get bx_pie_chart_alt() {
      return C[1165] || CT.C1165;
    },
    /*flutter_boxicons.Boxicons.bx_pie_chart_alt_2*/get bx_pie_chart_alt_2() {
      return C[1166] || CT.C1166;
    },
    /*flutter_boxicons.Boxicons.bx_pin*/get bx_pin() {
      return C[1167] || CT.C1167;
    },
    /*flutter_boxicons.Boxicons.bx_planet*/get bx_planet() {
      return C[1168] || CT.C1168;
    },
    /*flutter_boxicons.Boxicons.bx_play*/get bx_play() {
      return C[1169] || CT.C1169;
    },
    /*flutter_boxicons.Boxicons.bx_play_circle*/get bx_play_circle() {
      return C[1170] || CT.C1170;
    },
    /*flutter_boxicons.Boxicons.bx_plug*/get bx_plug() {
      return C[1171] || CT.C1171;
    },
    /*flutter_boxicons.Boxicons.bx_plus*/get bx_plus() {
      return C[1172] || CT.C1172;
    },
    /*flutter_boxicons.Boxicons.bx_plus_circle*/get bx_plus_circle() {
      return C[1173] || CT.C1173;
    },
    /*flutter_boxicons.Boxicons.bx_plus_medical*/get bx_plus_medical() {
      return C[1174] || CT.C1174;
    },
    /*flutter_boxicons.Boxicons.bx_pointer*/get bx_pointer() {
      return C[1175] || CT.C1175;
    },
    /*flutter_boxicons.Boxicons.bx_poll*/get bx_poll() {
      return C[1176] || CT.C1176;
    },
    /*flutter_boxicons.Boxicons.bx_polygon*/get bx_polygon() {
      return C[1177] || CT.C1177;
    },
    /*flutter_boxicons.Boxicons.bx_pound*/get bx_pound() {
      return C[1178] || CT.C1178;
    },
    /*flutter_boxicons.Boxicons.bx_power_off*/get bx_power_off() {
      return C[1179] || CT.C1179;
    },
    /*flutter_boxicons.Boxicons.bx_printer*/get bx_printer() {
      return C[1180] || CT.C1180;
    },
    /*flutter_boxicons.Boxicons.bx_pulse*/get bx_pulse() {
      return C[1181] || CT.C1181;
    },
    /*flutter_boxicons.Boxicons.bx_purchase_tag*/get bx_purchase_tag() {
      return C[1182] || CT.C1182;
    },
    /*flutter_boxicons.Boxicons.bx_purchase_tag_alt*/get bx_purchase_tag_alt() {
      return C[1183] || CT.C1183;
    },
    /*flutter_boxicons.Boxicons.bx_pyramid*/get bx_pyramid() {
      return C[1184] || CT.C1184;
    },
    /*flutter_boxicons.Boxicons.bx_question_mark*/get bx_question_mark() {
      return C[1185] || CT.C1185;
    },
    /*flutter_boxicons.Boxicons.bx_radar*/get bx_radar() {
      return C[1186] || CT.C1186;
    },
    /*flutter_boxicons.Boxicons.bx_radio*/get bx_radio() {
      return C[1187] || CT.C1187;
    },
    /*flutter_boxicons.Boxicons.bx_radio_circle*/get bx_radio_circle() {
      return C[1188] || CT.C1188;
    },
    /*flutter_boxicons.Boxicons.bx_radio_circle_marked*/get bx_radio_circle_marked() {
      return C[1189] || CT.C1189;
    },
    /*flutter_boxicons.Boxicons.bx_receipt*/get bx_receipt() {
      return C[1190] || CT.C1190;
    },
    /*flutter_boxicons.Boxicons.bx_rectangle*/get bx_rectangle() {
      return C[1191] || CT.C1191;
    },
    /*flutter_boxicons.Boxicons.bx_recycle*/get bx_recycle() {
      return C[1192] || CT.C1192;
    },
    /*flutter_boxicons.Boxicons.bx_redo*/get bx_redo() {
      return C[1193] || CT.C1193;
    },
    /*flutter_boxicons.Boxicons.bx_refresh*/get bx_refresh() {
      return C[1194] || CT.C1194;
    },
    /*flutter_boxicons.Boxicons.bx_rename*/get bx_rename() {
      return C[1195] || CT.C1195;
    },
    /*flutter_boxicons.Boxicons.bx_repeat*/get bx_repeat() {
      return C[1196] || CT.C1196;
    },
    /*flutter_boxicons.Boxicons.bx_reply*/get bx_reply() {
      return C[1197] || CT.C1197;
    },
    /*flutter_boxicons.Boxicons.bx_reply_all*/get bx_reply_all() {
      return C[1198] || CT.C1198;
    },
    /*flutter_boxicons.Boxicons.bx_repost*/get bx_repost() {
      return C[1199] || CT.C1199;
    },
    /*flutter_boxicons.Boxicons.bx_reset*/get bx_reset() {
      return C[1200] || CT.C1200;
    },
    /*flutter_boxicons.Boxicons.bx_restaurant*/get bx_restaurant() {
      return C[1201] || CT.C1201;
    },
    /*flutter_boxicons.Boxicons.bx_revision*/get bx_revision() {
      return C[1202] || CT.C1202;
    },
    /*flutter_boxicons.Boxicons.bx_rewind*/get bx_rewind() {
      return C[1203] || CT.C1203;
    },
    /*flutter_boxicons.Boxicons.bx_rewind_circle*/get bx_rewind_circle() {
      return C[1204] || CT.C1204;
    },
    /*flutter_boxicons.Boxicons.bx_right_arrow*/get bx_right_arrow() {
      return C[1205] || CT.C1205;
    },
    /*flutter_boxicons.Boxicons.bx_right_arrow_alt*/get bx_right_arrow_alt() {
      return C[1206] || CT.C1206;
    },
    /*flutter_boxicons.Boxicons.bx_right_arrow_circle*/get bx_right_arrow_circle() {
      return C[1207] || CT.C1207;
    },
    /*flutter_boxicons.Boxicons.bx_right_down_arrow_circle*/get bx_right_down_arrow_circle() {
      return C[1208] || CT.C1208;
    },
    /*flutter_boxicons.Boxicons.bx_right_indent*/get bx_right_indent() {
      return C[1209] || CT.C1209;
    },
    /*flutter_boxicons.Boxicons.bx_right_top_arrow_circle*/get bx_right_top_arrow_circle() {
      return C[1210] || CT.C1210;
    },
    /*flutter_boxicons.Boxicons.bx_rocket*/get bx_rocket() {
      return C[1211] || CT.C1211;
    },
    /*flutter_boxicons.Boxicons.bx_rotate_left*/get bx_rotate_left() {
      return C[1212] || CT.C1212;
    },
    /*flutter_boxicons.Boxicons.bx_rotate_right*/get bx_rotate_right() {
      return C[1213] || CT.C1213;
    },
    /*flutter_boxicons.Boxicons.bx_rss*/get bx_rss() {
      return C[1214] || CT.C1214;
    },
    /*flutter_boxicons.Boxicons.bx_ruble*/get bx_ruble() {
      return C[1215] || CT.C1215;
    },
    /*flutter_boxicons.Boxicons.bx_ruler*/get bx_ruler() {
      return C[1216] || CT.C1216;
    },
    /*flutter_boxicons.Boxicons.bx_run*/get bx_run() {
      return C[1217] || CT.C1217;
    },
    /*flutter_boxicons.Boxicons.bx_rupee*/get bx_rupee() {
      return C[1218] || CT.C1218;
    },
    /*flutter_boxicons.Boxicons.bx_sad*/get bx_sad() {
      return C[1219] || CT.C1219;
    },
    /*flutter_boxicons.Boxicons.bx_save*/get bx_save() {
      return C[1220] || CT.C1220;
    },
    /*flutter_boxicons.Boxicons.bx_scan*/get bx_scan() {
      return C[1221] || CT.C1221;
    },
    /*flutter_boxicons.Boxicons.bx_screenshot*/get bx_screenshot() {
      return C[1222] || CT.C1222;
    },
    /*flutter_boxicons.Boxicons.bx_search*/get bx_search() {
      return C[1223] || CT.C1223;
    },
    /*flutter_boxicons.Boxicons.bx_search_alt*/get bx_search_alt() {
      return C[1224] || CT.C1224;
    },
    /*flutter_boxicons.Boxicons.bx_search_alt_2*/get bx_search_alt_2() {
      return C[1225] || CT.C1225;
    },
    /*flutter_boxicons.Boxicons.bx_selection*/get bx_selection() {
      return C[1226] || CT.C1226;
    },
    /*flutter_boxicons.Boxicons.bx_select_multiple*/get bx_select_multiple() {
      return C[1227] || CT.C1227;
    },
    /*flutter_boxicons.Boxicons.bx_send*/get bx_send() {
      return C[1228] || CT.C1228;
    },
    /*flutter_boxicons.Boxicons.bx_server*/get bx_server() {
      return C[1229] || CT.C1229;
    },
    /*flutter_boxicons.Boxicons.bx_shape_circle*/get bx_shape_circle() {
      return C[1230] || CT.C1230;
    },
    /*flutter_boxicons.Boxicons.bx_shape_polygon*/get bx_shape_polygon() {
      return C[1231] || CT.C1231;
    },
    /*flutter_boxicons.Boxicons.bx_shape_square*/get bx_shape_square() {
      return C[1232] || CT.C1232;
    },
    /*flutter_boxicons.Boxicons.bx_shape_triangle*/get bx_shape_triangle() {
      return C[1233] || CT.C1233;
    },
    /*flutter_boxicons.Boxicons.bx_share*/get bx_share() {
      return C[1234] || CT.C1234;
    },
    /*flutter_boxicons.Boxicons.bx_share_alt*/get bx_share_alt() {
      return C[1235] || CT.C1235;
    },
    /*flutter_boxicons.Boxicons.bx_shekel*/get bx_shekel() {
      return C[1236] || CT.C1236;
    },
    /*flutter_boxicons.Boxicons.bx_shield*/get bx_shield() {
      return C[1237] || CT.C1237;
    },
    /*flutter_boxicons.Boxicons.bx_shield_alt*/get bx_shield_alt() {
      return C[1238] || CT.C1238;
    },
    /*flutter_boxicons.Boxicons.bx_shield_alt_2*/get bx_shield_alt_2() {
      return C[1239] || CT.C1239;
    },
    /*flutter_boxicons.Boxicons.bx_shield_quarter*/get bx_shield_quarter() {
      return C[1240] || CT.C1240;
    },
    /*flutter_boxicons.Boxicons.bx_shield_x*/get bx_shield_x() {
      return C[1241] || CT.C1241;
    },
    /*flutter_boxicons.Boxicons.bx_shocked*/get bx_shocked() {
      return C[1242] || CT.C1242;
    },
    /*flutter_boxicons.Boxicons.bx_shopping_bag*/get bx_shopping_bag() {
      return C[1243] || CT.C1243;
    },
    /*flutter_boxicons.Boxicons.bx_show*/get bx_show() {
      return C[1244] || CT.C1244;
    },
    /*flutter_boxicons.Boxicons.bx_show_alt*/get bx_show_alt() {
      return C[1245] || CT.C1245;
    },
    /*flutter_boxicons.Boxicons.bx_shuffle*/get bx_shuffle() {
      return C[1246] || CT.C1246;
    },
    /*flutter_boxicons.Boxicons.bx_sidebar*/get bx_sidebar() {
      return C[1247] || CT.C1247;
    },
    /*flutter_boxicons.Boxicons.bx_sitemap*/get bx_sitemap() {
      return C[1248] || CT.C1248;
    },
    /*flutter_boxicons.Boxicons.bx_skip_next*/get bx_skip_next() {
      return C[1249] || CT.C1249;
    },
    /*flutter_boxicons.Boxicons.bx_skip_next_circle*/get bx_skip_next_circle() {
      return C[1250] || CT.C1250;
    },
    /*flutter_boxicons.Boxicons.bx_skip_previous*/get bx_skip_previous() {
      return C[1251] || CT.C1251;
    },
    /*flutter_boxicons.Boxicons.bx_skip_previous_circle*/get bx_skip_previous_circle() {
      return C[1252] || CT.C1252;
    },
    /*flutter_boxicons.Boxicons.bx_sleepy*/get bx_sleepy() {
      return C[1253] || CT.C1253;
    },
    /*flutter_boxicons.Boxicons.bx_slider*/get bx_slider() {
      return C[1254] || CT.C1254;
    },
    /*flutter_boxicons.Boxicons.bx_slider_alt*/get bx_slider_alt() {
      return C[1255] || CT.C1255;
    },
    /*flutter_boxicons.Boxicons.bx_slideshow*/get bx_slideshow() {
      return C[1256] || CT.C1256;
    },
    /*flutter_boxicons.Boxicons.bx_smile*/get bx_smile() {
      return C[1257] || CT.C1257;
    },
    /*flutter_boxicons.Boxicons.bx_sort*/get bx_sort() {
      return C[1258] || CT.C1258;
    },
    /*flutter_boxicons.Boxicons.bx_sort_alt_2*/get bx_sort_alt_2() {
      return C[1259] || CT.C1259;
    },
    /*flutter_boxicons.Boxicons.bx_sort_a_z*/get bx_sort_a_z() {
      return C[1260] || CT.C1260;
    },
    /*flutter_boxicons.Boxicons.bx_sort_down*/get bx_sort_down() {
      return C[1261] || CT.C1261;
    },
    /*flutter_boxicons.Boxicons.bx_sort_up*/get bx_sort_up() {
      return C[1262] || CT.C1262;
    },
    /*flutter_boxicons.Boxicons.bx_sort_z_a*/get bx_sort_z_a() {
      return C[1263] || CT.C1263;
    },
    /*flutter_boxicons.Boxicons.bx_spa*/get bx_spa() {
      return C[1264] || CT.C1264;
    },
    /*flutter_boxicons.Boxicons.bx_space_bar*/get bx_space_bar() {
      return C[1265] || CT.C1265;
    },
    /*flutter_boxicons.Boxicons.bx_spray_can*/get bx_spray_can() {
      return C[1266] || CT.C1266;
    },
    /*flutter_boxicons.Boxicons.bx_spreadsheet*/get bx_spreadsheet() {
      return C[1267] || CT.C1267;
    },
    /*flutter_boxicons.Boxicons.bx_square*/get bx_square() {
      return C[1268] || CT.C1268;
    },
    /*flutter_boxicons.Boxicons.bx_square_rounded*/get bx_square_rounded() {
      return C[1269] || CT.C1269;
    },
    /*flutter_boxicons.Boxicons.bx_star*/get bx_star() {
      return C[1270] || CT.C1270;
    },
    /*flutter_boxicons.Boxicons.bx_station*/get bx_station() {
      return C[1271] || CT.C1271;
    },
    /*flutter_boxicons.Boxicons.bx_stats*/get bx_stats() {
      return C[1272] || CT.C1272;
    },
    /*flutter_boxicons.Boxicons.bx_sticker*/get bx_sticker() {
      return C[1273] || CT.C1273;
    },
    /*flutter_boxicons.Boxicons.bx_stop*/get bx_stop() {
      return C[1274] || CT.C1274;
    },
    /*flutter_boxicons.Boxicons.bx_stop_circle*/get bx_stop_circle() {
      return C[1275] || CT.C1275;
    },
    /*flutter_boxicons.Boxicons.bx_stopwatch*/get bx_stopwatch() {
      return C[1276] || CT.C1276;
    },
    /*flutter_boxicons.Boxicons.bx_store*/get bx_store() {
      return C[1277] || CT.C1277;
    },
    /*flutter_boxicons.Boxicons.bx_store_alt*/get bx_store_alt() {
      return C[1278] || CT.C1278;
    },
    /*flutter_boxicons.Boxicons.bx_street_view*/get bx_street_view() {
      return C[1279] || CT.C1279;
    },
    /*flutter_boxicons.Boxicons.bx_strikethrough*/get bx_strikethrough() {
      return C[1280] || CT.C1280;
    },
    /*flutter_boxicons.Boxicons.bx_subdirectory_left*/get bx_subdirectory_left() {
      return C[1281] || CT.C1281;
    },
    /*flutter_boxicons.Boxicons.bx_subdirectory_right*/get bx_subdirectory_right() {
      return C[1282] || CT.C1282;
    },
    /*flutter_boxicons.Boxicons.bx_sun*/get bx_sun() {
      return C[1283] || CT.C1283;
    },
    /*flutter_boxicons.Boxicons.bx_support*/get bx_support() {
      return C[1284] || CT.C1284;
    },
    /*flutter_boxicons.Boxicons.bx_swim*/get bx_swim() {
      return C[1285] || CT.C1285;
    },
    /*flutter_boxicons.Boxicons.bx_sync*/get bx_sync() {
      return C[1286] || CT.C1286;
    },
    /*flutter_boxicons.Boxicons.bx_tab*/get bx_tab() {
      return C[1287] || CT.C1287;
    },
    /*flutter_boxicons.Boxicons.bx_table*/get bx_table() {
      return C[1288] || CT.C1288;
    },
    /*flutter_boxicons.Boxicons.bx_tachometer*/get bx_tachometer() {
      return C[1289] || CT.C1289;
    },
    /*flutter_boxicons.Boxicons.bx_tag*/get bx_tag() {
      return C[1290] || CT.C1290;
    },
    /*flutter_boxicons.Boxicons.bx_tag_alt*/get bx_tag_alt() {
      return C[1291] || CT.C1291;
    },
    /*flutter_boxicons.Boxicons.bx_target_lock*/get bx_target_lock() {
      return C[1292] || CT.C1292;
    },
    /*flutter_boxicons.Boxicons.bx_task*/get bx_task() {
      return C[1293] || CT.C1293;
    },
    /*flutter_boxicons.Boxicons.bx_task_x*/get bx_task_x() {
      return C[1294] || CT.C1294;
    },
    /*flutter_boxicons.Boxicons.bx_taxi*/get bx_taxi() {
      return C[1295] || CT.C1295;
    },
    /*flutter_boxicons.Boxicons.bx_tennis_ball*/get bx_tennis_ball() {
      return C[1296] || CT.C1296;
    },
    /*flutter_boxicons.Boxicons.bx_terminal*/get bx_terminal() {
      return C[1297] || CT.C1297;
    },
    /*flutter_boxicons.Boxicons.bx_test_tube*/get bx_test_tube() {
      return C[1298] || CT.C1298;
    },
    /*flutter_boxicons.Boxicons.bx_text*/get bx_text() {
      return C[1299] || CT.C1299;
    },
    /*flutter_boxicons.Boxicons.bx_time*/get bx_time() {
      return C[1300] || CT.C1300;
    },
    /*flutter_boxicons.Boxicons.bx_time_five*/get bx_time_five() {
      return C[1301] || CT.C1301;
    },
    /*flutter_boxicons.Boxicons.bx_timer*/get bx_timer() {
      return C[1302] || CT.C1302;
    },
    /*flutter_boxicons.Boxicons.bx_tired*/get bx_tired() {
      return C[1303] || CT.C1303;
    },
    /*flutter_boxicons.Boxicons.bx_toggle_left*/get bx_toggle_left() {
      return C[1304] || CT.C1304;
    },
    /*flutter_boxicons.Boxicons.bx_toggle_right*/get bx_toggle_right() {
      return C[1305] || CT.C1305;
    },
    /*flutter_boxicons.Boxicons.bx_tone*/get bx_tone() {
      return C[1306] || CT.C1306;
    },
    /*flutter_boxicons.Boxicons.bx_traffic_cone*/get bx_traffic_cone() {
      return C[1307] || CT.C1307;
    },
    /*flutter_boxicons.Boxicons.bx_train*/get bx_train() {
      return C[1308] || CT.C1308;
    },
    /*flutter_boxicons.Boxicons.bx_transfer*/get bx_transfer() {
      return C[1309] || CT.C1309;
    },
    /*flutter_boxicons.Boxicons.bx_transfer_alt*/get bx_transfer_alt() {
      return C[1310] || CT.C1310;
    },
    /*flutter_boxicons.Boxicons.bx_trash*/get bx_trash() {
      return C[1311] || CT.C1311;
    },
    /*flutter_boxicons.Boxicons.bx_trash_alt*/get bx_trash_alt() {
      return C[1312] || CT.C1312;
    },
    /*flutter_boxicons.Boxicons.bx_trending_down*/get bx_trending_down() {
      return C[1313] || CT.C1313;
    },
    /*flutter_boxicons.Boxicons.bx_trending_up*/get bx_trending_up() {
      return C[1314] || CT.C1314;
    },
    /*flutter_boxicons.Boxicons.bx_trim*/get bx_trim() {
      return C[1315] || CT.C1315;
    },
    /*flutter_boxicons.Boxicons.bx_trip*/get bx_trip() {
      return C[1316] || CT.C1316;
    },
    /*flutter_boxicons.Boxicons.bx_trophy*/get bx_trophy() {
      return C[1317] || CT.C1317;
    },
    /*flutter_boxicons.Boxicons.bx_tv*/get bx_tv() {
      return C[1318] || CT.C1318;
    },
    /*flutter_boxicons.Boxicons.bx_underline*/get bx_underline() {
      return C[1319] || CT.C1319;
    },
    /*flutter_boxicons.Boxicons.bx_undo*/get bx_undo() {
      return C[1320] || CT.C1320;
    },
    /*flutter_boxicons.Boxicons.bx_unite*/get bx_unite() {
      return C[1321] || CT.C1321;
    },
    /*flutter_boxicons.Boxicons.bx_unlink*/get bx_unlink() {
      return C[1322] || CT.C1322;
    },
    /*flutter_boxicons.Boxicons.bx_up_arrow*/get bx_up_arrow() {
      return C[1323] || CT.C1323;
    },
    /*flutter_boxicons.Boxicons.bx_up_arrow_alt*/get bx_up_arrow_alt() {
      return C[1324] || CT.C1324;
    },
    /*flutter_boxicons.Boxicons.bx_up_arrow_circle*/get bx_up_arrow_circle() {
      return C[1325] || CT.C1325;
    },
    /*flutter_boxicons.Boxicons.bx_upload*/get bx_upload() {
      return C[1326] || CT.C1326;
    },
    /*flutter_boxicons.Boxicons.bx_upside_down*/get bx_upside_down() {
      return C[1327] || CT.C1327;
    },
    /*flutter_boxicons.Boxicons.bx_upvote*/get bx_upvote() {
      return C[1328] || CT.C1328;
    },
    /*flutter_boxicons.Boxicons.bx_usb*/get bx_usb() {
      return C[1329] || CT.C1329;
    },
    /*flutter_boxicons.Boxicons.bx_user*/get bx_user() {
      return C[1330] || CT.C1330;
    },
    /*flutter_boxicons.Boxicons.bx_user_check*/get bx_user_check() {
      return C[1331] || CT.C1331;
    },
    /*flutter_boxicons.Boxicons.bx_user_circle*/get bx_user_circle() {
      return C[1332] || CT.C1332;
    },
    /*flutter_boxicons.Boxicons.bx_user_minus*/get bx_user_minus() {
      return C[1333] || CT.C1333;
    },
    /*flutter_boxicons.Boxicons.bx_user_pin*/get bx_user_pin() {
      return C[1334] || CT.C1334;
    },
    /*flutter_boxicons.Boxicons.bx_user_plus*/get bx_user_plus() {
      return C[1335] || CT.C1335;
    },
    /*flutter_boxicons.Boxicons.bx_user_voice*/get bx_user_voice() {
      return C[1336] || CT.C1336;
    },
    /*flutter_boxicons.Boxicons.bx_user_x*/get bx_user_x() {
      return C[1337] || CT.C1337;
    },
    /*flutter_boxicons.Boxicons.bx_vector*/get bx_vector() {
      return C[1338] || CT.C1338;
    },
    /*flutter_boxicons.Boxicons.bx_vertical_center*/get bx_vertical_center() {
      return C[1339] || CT.C1339;
    },
    /*flutter_boxicons.Boxicons.bx_vial*/get bx_vial() {
      return C[1340] || CT.C1340;
    },
    /*flutter_boxicons.Boxicons.bx_video*/get bx_video() {
      return C[1341] || CT.C1341;
    },
    /*flutter_boxicons.Boxicons.bx_video_off*/get bx_video_off() {
      return C[1342] || CT.C1342;
    },
    /*flutter_boxicons.Boxicons.bx_video_plus*/get bx_video_plus() {
      return C[1343] || CT.C1343;
    },
    /*flutter_boxicons.Boxicons.bx_video_recording*/get bx_video_recording() {
      return C[1344] || CT.C1344;
    },
    /*flutter_boxicons.Boxicons.bx_voicemail*/get bx_voicemail() {
      return C[1345] || CT.C1345;
    },
    /*flutter_boxicons.Boxicons.bx_volume*/get bx_volume() {
      return C[1346] || CT.C1346;
    },
    /*flutter_boxicons.Boxicons.bx_volume_full*/get bx_volume_full() {
      return C[1347] || CT.C1347;
    },
    /*flutter_boxicons.Boxicons.bx_volume_low*/get bx_volume_low() {
      return C[1348] || CT.C1348;
    },
    /*flutter_boxicons.Boxicons.bx_volume_mute*/get bx_volume_mute() {
      return C[1349] || CT.C1349;
    },
    /*flutter_boxicons.Boxicons.bx_walk*/get bx_walk() {
      return C[1350] || CT.C1350;
    },
    /*flutter_boxicons.Boxicons.bx_wallet*/get bx_wallet() {
      return C[1351] || CT.C1351;
    },
    /*flutter_boxicons.Boxicons.bx_wallet_alt*/get bx_wallet_alt() {
      return C[1352] || CT.C1352;
    },
    /*flutter_boxicons.Boxicons.bx_water*/get bx_water() {
      return C[1353] || CT.C1353;
    },
    /*flutter_boxicons.Boxicons.bx_webcam*/get bx_webcam() {
      return C[1354] || CT.C1354;
    },
    /*flutter_boxicons.Boxicons.bx_wifi*/get bx_wifi() {
      return C[1355] || CT.C1355;
    },
    /*flutter_boxicons.Boxicons.bx_wifi_0*/get bx_wifi_0() {
      return C[1356] || CT.C1356;
    },
    /*flutter_boxicons.Boxicons.bx_wifi_1*/get bx_wifi_1() {
      return C[1357] || CT.C1357;
    },
    /*flutter_boxicons.Boxicons.bx_wifi_2*/get bx_wifi_2() {
      return C[1358] || CT.C1358;
    },
    /*flutter_boxicons.Boxicons.bx_wifi_off*/get bx_wifi_off() {
      return C[1359] || CT.C1359;
    },
    /*flutter_boxicons.Boxicons.bx_wind*/get bx_wind() {
      return C[1360] || CT.C1360;
    },
    /*flutter_boxicons.Boxicons.bx_window*/get bx_window() {
      return C[1361] || CT.C1361;
    },
    /*flutter_boxicons.Boxicons.bx_window_alt*/get bx_window_alt() {
      return C[1362] || CT.C1362;
    },
    /*flutter_boxicons.Boxicons.bx_window_close*/get bx_window_close() {
      return C[1363] || CT.C1363;
    },
    /*flutter_boxicons.Boxicons.bx_window_open*/get bx_window_open() {
      return C[1364] || CT.C1364;
    },
    /*flutter_boxicons.Boxicons.bx_windows*/get bx_windows() {
      return C[1365] || CT.C1365;
    },
    /*flutter_boxicons.Boxicons.bx_wine*/get bx_wine() {
      return C[1366] || CT.C1366;
    },
    /*flutter_boxicons.Boxicons.bx_wink_smile*/get bx_wink_smile() {
      return C[1367] || CT.C1367;
    },
    /*flutter_boxicons.Boxicons.bx_wink_tongue*/get bx_wink_tongue() {
      return C[1368] || CT.C1368;
    },
    /*flutter_boxicons.Boxicons.bx_won*/get bx_won() {
      return C[1369] || CT.C1369;
    },
    /*flutter_boxicons.Boxicons.bx_world*/get bx_world() {
      return C[1370] || CT.C1370;
    },
    /*flutter_boxicons.Boxicons.bx_wrench*/get bx_wrench() {
      return C[1371] || CT.C1371;
    },
    /*flutter_boxicons.Boxicons.bx_x*/get bx_x() {
      return C[1372] || CT.C1372;
    },
    /*flutter_boxicons.Boxicons.bx_x_circle*/get bx_x_circle() {
      return C[1373] || CT.C1373;
    },
    /*flutter_boxicons.Boxicons.bx_yen*/get bx_yen() {
      return C[1374] || CT.C1374;
    },
    /*flutter_boxicons.Boxicons.bx_zoom_in*/get bx_zoom_in() {
      return C[1375] || CT.C1375;
    },
    /*flutter_boxicons.Boxicons.bx_zoom_out*/get bx_zoom_out() {
      return C[1376] || CT.C1376;
    },
    /*flutter_boxicons.Boxicons.bx_abacus*/get bx_abacus() {
      return C[1377] || CT.C1377;
    },
    /*flutter_boxicons.Boxicons.bx_accessibility*/get bx_accessibility() {
      return C[1378] || CT.C1378;
    },
    /*flutter_boxicons.Boxicons.bx_add_to_queue*/get bx_add_to_queue() {
      return C[1379] || CT.C1379;
    },
    /*flutter_boxicons.Boxicons.bx_adjust*/get bx_adjust() {
      return C[1380] || CT.C1380;
    },
    /*flutter_boxicons.Boxicons.bx_alarm*/get bx_alarm() {
      return C[1381] || CT.C1381;
    },
    /*flutter_boxicons.Boxicons.bxl_android*/get bxl_android() {
      return C[1382] || CT.C1382;
    },
    /*flutter_boxicons.Boxicons.bxl_angular*/get bxl_angular() {
      return C[1383] || CT.C1383;
    },
    /*flutter_boxicons.Boxicons.bxl_apple*/get bxl_apple() {
      return C[1384] || CT.C1384;
    },
    /*flutter_boxicons.Boxicons.bxl_audible*/get bxl_audible() {
      return C[1385] || CT.C1385;
    },
    /*flutter_boxicons.Boxicons.bxl_baidu*/get bxl_baidu() {
      return C[1386] || CT.C1386;
    },
    /*flutter_boxicons.Boxicons.bxl_behance*/get bxl_behance() {
      return C[1387] || CT.C1387;
    },
    /*flutter_boxicons.Boxicons.bxl_bing*/get bxl_bing() {
      return C[1388] || CT.C1388;
    },
    /*flutter_boxicons.Boxicons.bxl_bitcoin*/get bxl_bitcoin() {
      return C[1389] || CT.C1389;
    },
    /*flutter_boxicons.Boxicons.bxl_blender*/get bxl_blender() {
      return C[1390] || CT.C1390;
    },
    /*flutter_boxicons.Boxicons.bxl_blogger*/get bxl_blogger() {
      return C[1391] || CT.C1391;
    },
    /*flutter_boxicons.Boxicons.bxl_bootstrap*/get bxl_bootstrap() {
      return C[1392] || CT.C1392;
    },
    /*flutter_boxicons.Boxicons.bxl_chrome*/get bxl_chrome() {
      return C[1393] || CT.C1393;
    },
    /*flutter_boxicons.Boxicons.bxl_codepen*/get bxl_codepen() {
      return C[1394] || CT.C1394;
    },
    /*flutter_boxicons.Boxicons.bxl_c_plus_plus*/get bxl_c_plus_plus() {
      return C[1395] || CT.C1395;
    },
    /*flutter_boxicons.Boxicons.bxl_creative_commons*/get bxl_creative_commons() {
      return C[1396] || CT.C1396;
    },
    /*flutter_boxicons.Boxicons.bxl_css3*/get bxl_css3() {
      return C[1397] || CT.C1397;
    },
    /*flutter_boxicons.Boxicons.bxl_dailymotion*/get bxl_dailymotion() {
      return C[1398] || CT.C1398;
    },
    /*flutter_boxicons.Boxicons.bxl_deviantart*/get bxl_deviantart() {
      return C[1399] || CT.C1399;
    },
    /*flutter_boxicons.Boxicons.bxl_dev_to*/get bxl_dev_to() {
      return C[1400] || CT.C1400;
    },
    /*flutter_boxicons.Boxicons.bxl_digg*/get bxl_digg() {
      return C[1401] || CT.C1401;
    },
    /*flutter_boxicons.Boxicons.bxl_digitalocean*/get bxl_digitalocean() {
      return C[1402] || CT.C1402;
    },
    /*flutter_boxicons.Boxicons.bxl_discord*/get bxl_discord() {
      return C[1403] || CT.C1403;
    },
    /*flutter_boxicons.Boxicons.bxl_discourse*/get bxl_discourse() {
      return C[1404] || CT.C1404;
    },
    /*flutter_boxicons.Boxicons.bxl_django*/get bxl_django() {
      return C[1405] || CT.C1405;
    },
    /*flutter_boxicons.Boxicons.bxl_dribbble*/get bxl_dribbble() {
      return C[1406] || CT.C1406;
    },
    /*flutter_boxicons.Boxicons.bxl_dropbox*/get bxl_dropbox() {
      return C[1407] || CT.C1407;
    },
    /*flutter_boxicons.Boxicons.bxl_drupal*/get bxl_drupal() {
      return C[1408] || CT.C1408;
    },
    /*flutter_boxicons.Boxicons.bxl_ebay*/get bxl_ebay() {
      return C[1409] || CT.C1409;
    },
    /*flutter_boxicons.Boxicons.bxl_edge*/get bxl_edge() {
      return C[1410] || CT.C1410;
    },
    /*flutter_boxicons.Boxicons.bxl_etsy*/get bxl_etsy() {
      return C[1411] || CT.C1411;
    },
    /*flutter_boxicons.Boxicons.bxl_facebook*/get bxl_facebook() {
      return C[1412] || CT.C1412;
    },
    /*flutter_boxicons.Boxicons.bxl_facebook_circle*/get bxl_facebook_circle() {
      return C[1413] || CT.C1413;
    },
    /*flutter_boxicons.Boxicons.bxl_facebook_square*/get bxl_facebook_square() {
      return C[1414] || CT.C1414;
    },
    /*flutter_boxicons.Boxicons.bxl_figma*/get bxl_figma() {
      return C[1415] || CT.C1415;
    },
    /*flutter_boxicons.Boxicons.bxl_firebase*/get bxl_firebase() {
      return C[1416] || CT.C1416;
    },
    /*flutter_boxicons.Boxicons.bxl_firefox*/get bxl_firefox() {
      return C[1417] || CT.C1417;
    },
    /*flutter_boxicons.Boxicons.bxl_flickr*/get bxl_flickr() {
      return C[1418] || CT.C1418;
    },
    /*flutter_boxicons.Boxicons.bxl_flickr_square*/get bxl_flickr_square() {
      return C[1419] || CT.C1419;
    },
    /*flutter_boxicons.Boxicons.bxl_foursquare*/get bxl_foursquare() {
      return C[1420] || CT.C1420;
    },
    /*flutter_boxicons.Boxicons.bxl_git*/get bxl_git() {
      return C[1421] || CT.C1421;
    },
    /*flutter_boxicons.Boxicons.bxl_github*/get bxl_github() {
      return C[1422] || CT.C1422;
    },
    /*flutter_boxicons.Boxicons.bxl_gitlab*/get bxl_gitlab() {
      return C[1423] || CT.C1423;
    },
    /*flutter_boxicons.Boxicons.bxl_google*/get bxl_google() {
      return C[1424] || CT.C1424;
    },
    /*flutter_boxicons.Boxicons.bxl_google_cloud*/get bxl_google_cloud() {
      return C[1425] || CT.C1425;
    },
    /*flutter_boxicons.Boxicons.bxl_google_plus*/get bxl_google_plus() {
      return C[1426] || CT.C1426;
    },
    /*flutter_boxicons.Boxicons.bxl_google_plus_circle*/get bxl_google_plus_circle() {
      return C[1427] || CT.C1427;
    },
    /*flutter_boxicons.Boxicons.bxl_html5*/get bxl_html5() {
      return C[1428] || CT.C1428;
    },
    /*flutter_boxicons.Boxicons.bxl_imdb*/get bxl_imdb() {
      return C[1429] || CT.C1429;
    },
    /*flutter_boxicons.Boxicons.bxl_instagram*/get bxl_instagram() {
      return C[1430] || CT.C1430;
    },
    /*flutter_boxicons.Boxicons.bxl_instagram_alt*/get bxl_instagram_alt() {
      return C[1431] || CT.C1431;
    },
    /*flutter_boxicons.Boxicons.bxl_internet_explorer*/get bxl_internet_explorer() {
      return C[1432] || CT.C1432;
    },
    /*flutter_boxicons.Boxicons.bxl_invision*/get bxl_invision() {
      return C[1433] || CT.C1433;
    },
    /*flutter_boxicons.Boxicons.bxl_javascript*/get bxl_javascript() {
      return C[1434] || CT.C1434;
    },
    /*flutter_boxicons.Boxicons.bxl_joomla*/get bxl_joomla() {
      return C[1435] || CT.C1435;
    },
    /*flutter_boxicons.Boxicons.bxl_jquery*/get bxl_jquery() {
      return C[1436] || CT.C1436;
    },
    /*flutter_boxicons.Boxicons.bxl_jsfiddle*/get bxl_jsfiddle() {
      return C[1437] || CT.C1437;
    },
    /*flutter_boxicons.Boxicons.bxl_kickstarter*/get bxl_kickstarter() {
      return C[1438] || CT.C1438;
    },
    /*flutter_boxicons.Boxicons.bxl_kubernetes__*/get bxl_kubernetes__() {
      return C[1439] || CT.C1439;
    },
    /*flutter_boxicons.Boxicons.bxl_less*/get bxl_less() {
      return C[1440] || CT.C1440;
    },
    /*flutter_boxicons.Boxicons.bxl_linkedin*/get bxl_linkedin() {
      return C[1441] || CT.C1441;
    },
    /*flutter_boxicons.Boxicons.bxl_linkedin_square*/get bxl_linkedin_square() {
      return C[1442] || CT.C1442;
    },
    /*flutter_boxicons.Boxicons.bxl_magento*/get bxl_magento() {
      return C[1443] || CT.C1443;
    },
    /*flutter_boxicons.Boxicons.bxl_mailchimp*/get bxl_mailchimp() {
      return C[1444] || CT.C1444;
    },
    /*flutter_boxicons.Boxicons.bxl_markdown*/get bxl_markdown() {
      return C[1445] || CT.C1445;
    },
    /*flutter_boxicons.Boxicons.bxl_mastercard*/get bxl_mastercard() {
      return C[1446] || CT.C1446;
    },
    /*flutter_boxicons.Boxicons.bxl_medium*/get bxl_medium() {
      return C[1447] || CT.C1447;
    },
    /*flutter_boxicons.Boxicons.bxl_medium_old*/get bxl_medium_old() {
      return C[1448] || CT.C1448;
    },
    /*flutter_boxicons.Boxicons.bxl_medium_square*/get bxl_medium_square() {
      return C[1449] || CT.C1449;
    },
    /*flutter_boxicons.Boxicons.bxl_messenger*/get bxl_messenger() {
      return C[1450] || CT.C1450;
    },
    /*flutter_boxicons.Boxicons.bxl_microsoft*/get bxl_microsoft() {
      return C[1451] || CT.C1451;
    },
    /*flutter_boxicons.Boxicons.bxl_microsoft_teams*/get bxl_microsoft_teams() {
      return C[1452] || CT.C1452;
    },
    /*flutter_boxicons.Boxicons.bxl_nodejs*/get bxl_nodejs() {
      return C[1453] || CT.C1453;
    },
    /*flutter_boxicons.Boxicons.bxl_ok_ru*/get bxl_ok_ru() {
      return C[1454] || CT.C1454;
    },
    /*flutter_boxicons.Boxicons.bxl_opera*/get bxl_opera() {
      return C[1455] || CT.C1455;
    },
    /*flutter_boxicons.Boxicons.bxl_patreon*/get bxl_patreon() {
      return C[1456] || CT.C1456;
    },
    /*flutter_boxicons.Boxicons.bxl_paypal*/get bxl_paypal() {
      return C[1457] || CT.C1457;
    },
    /*flutter_boxicons.Boxicons.bxl_periscope*/get bxl_periscope() {
      return C[1458] || CT.C1458;
    },
    /*flutter_boxicons.Boxicons.bxl_pinterest*/get bxl_pinterest() {
      return C[1459] || CT.C1459;
    },
    /*flutter_boxicons.Boxicons.bxl_pinterest_alt*/get bxl_pinterest_alt() {
      return C[1460] || CT.C1460;
    },
    /*flutter_boxicons.Boxicons.bxl_play_store*/get bxl_play_store() {
      return C[1461] || CT.C1461;
    },
    /*flutter_boxicons.Boxicons.bxl_pocket*/get bxl_pocket() {
      return C[1462] || CT.C1462;
    },
    /*flutter_boxicons.Boxicons.bxl_product_hunt*/get bxl_product_hunt() {
      return C[1463] || CT.C1463;
    },
    /*flutter_boxicons.Boxicons.bxl_python*/get bxl_python() {
      return C[1464] || CT.C1464;
    },
    /*flutter_boxicons.Boxicons.bxl_quora*/get bxl_quora() {
      return C[1465] || CT.C1465;
    },
    /*flutter_boxicons.Boxicons.bxl_react*/get bxl_react() {
      return C[1466] || CT.C1466;
    },
    /*flutter_boxicons.Boxicons.bxl_redbubble*/get bxl_redbubble() {
      return C[1467] || CT.C1467;
    },
    /*flutter_boxicons.Boxicons.bxl_reddit*/get bxl_reddit() {
      return C[1468] || CT.C1468;
    },
    /*flutter_boxicons.Boxicons.bxl_redux*/get bxl_redux() {
      return C[1469] || CT.C1469;
    },
    /*flutter_boxicons.Boxicons.bxl_sass*/get bxl_sass() {
      return C[1470] || CT.C1470;
    },
    /*flutter_boxicons.Boxicons.bxl_shopify*/get bxl_shopify() {
      return C[1471] || CT.C1471;
    },
    /*flutter_boxicons.Boxicons.bxl_skype*/get bxl_skype() {
      return C[1472] || CT.C1472;
    },
    /*flutter_boxicons.Boxicons.bxl_slack*/get bxl_slack() {
      return C[1473] || CT.C1473;
    },
    /*flutter_boxicons.Boxicons.bxl_slack_old*/get bxl_slack_old() {
      return C[1474] || CT.C1474;
    },
    /*flutter_boxicons.Boxicons.bxl_snapchat*/get bxl_snapchat() {
      return C[1475] || CT.C1475;
    },
    /*flutter_boxicons.Boxicons.bxl_soundcloud*/get bxl_soundcloud() {
      return C[1476] || CT.C1476;
    },
    /*flutter_boxicons.Boxicons.bxl_spotify*/get bxl_spotify() {
      return C[1477] || CT.C1477;
    },
    /*flutter_boxicons.Boxicons.bxl_spring_boot*/get bxl_spring_boot() {
      return C[1478] || CT.C1478;
    },
    /*flutter_boxicons.Boxicons.bxl_squarespace*/get bxl_squarespace() {
      return C[1479] || CT.C1479;
    },
    /*flutter_boxicons.Boxicons.bxl_stack_overflow*/get bxl_stack_overflow() {
      return C[1480] || CT.C1480;
    },
    /*flutter_boxicons.Boxicons.bxl_stripe*/get bxl_stripe() {
      return C[1481] || CT.C1481;
    },
    /*flutter_boxicons.Boxicons.bxl_telegram*/get bxl_telegram() {
      return C[1482] || CT.C1482;
    },
    /*flutter_boxicons.Boxicons.bxl_trello*/get bxl_trello() {
      return C[1483] || CT.C1483;
    },
    /*flutter_boxicons.Boxicons.bxl_tumblr*/get bxl_tumblr() {
      return C[1484] || CT.C1484;
    },
    /*flutter_boxicons.Boxicons.bxl_tux*/get bxl_tux() {
      return C[1485] || CT.C1485;
    },
    /*flutter_boxicons.Boxicons.bxl_twitch*/get bxl_twitch() {
      return C[1486] || CT.C1486;
    },
    /*flutter_boxicons.Boxicons.bxl_twitter*/get bxl_twitter() {
      return C[1487] || CT.C1487;
    },
    /*flutter_boxicons.Boxicons.bxl_unsplash*/get bxl_unsplash() {
      return C[1488] || CT.C1488;
    },
    /*flutter_boxicons.Boxicons.bxl_vimeo*/get bxl_vimeo() {
      return C[1489] || CT.C1489;
    },
    /*flutter_boxicons.Boxicons.bxl_visa*/get bxl_visa() {
      return C[1490] || CT.C1490;
    },
    /*flutter_boxicons.Boxicons.bxl_vk*/get bxl_vk() {
      return C[1491] || CT.C1491;
    },
    /*flutter_boxicons.Boxicons.bxl_vuejs*/get bxl_vuejs() {
      return C[1492] || CT.C1492;
    },
    /*flutter_boxicons.Boxicons.bxl_whatsapp*/get bxl_whatsapp() {
      return C[1493] || CT.C1493;
    },
    /*flutter_boxicons.Boxicons.bxl_whatsapp_square*/get bxl_whatsapp_square() {
      return C[1494] || CT.C1494;
    },
    /*flutter_boxicons.Boxicons.bxl_wikipedia*/get bxl_wikipedia() {
      return C[1495] || CT.C1495;
    },
    /*flutter_boxicons.Boxicons.bxl_windows*/get bxl_windows() {
      return C[1496] || CT.C1496;
    },
    /*flutter_boxicons.Boxicons.bxl_wix*/get bxl_wix() {
      return C[1497] || CT.C1497;
    },
    /*flutter_boxicons.Boxicons.bxl_wordpress*/get bxl_wordpress() {
      return C[1498] || CT.C1498;
    },
    /*flutter_boxicons.Boxicons.bxl_yahoo*/get bxl_yahoo() {
      return C[1499] || CT.C1499;
    },
    /*flutter_boxicons.Boxicons.bxl_yelp*/get bxl_yelp() {
      return C[1500] || CT.C1500;
    },
    /*flutter_boxicons.Boxicons.bxl_youtube*/get bxl_youtube() {
      return C[1501] || CT.C1501;
    },
    /*flutter_boxicons.Boxicons.bxl_zoom*/get bxl_zoom() {
      return C[1502] || CT.C1502;
    },
    /*flutter_boxicons.Boxicons.bxl_500px*/get bxl_500px() {
      return C[1503] || CT.C1503;
    },
    /*flutter_boxicons.Boxicons.bxl_adobe*/get bxl_adobe() {
      return C[1504] || CT.C1504;
    },
    /*flutter_boxicons.Boxicons.bxl_airbnb*/get bxl_airbnb() {
      return C[1505] || CT.C1505;
    },
    /*flutter_boxicons.Boxicons.bxl_algolia*/get bxl_algolia() {
      return C[1506] || CT.C1506;
    },
    /*flutter_boxicons.Boxicons.bxl_amazon*/get bxl_amazon() {
      return C[1507] || CT.C1507;
    }
  }, false);
  ViewProf.ViewProfPage = class ViewProfPage extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new ViewProf.ViewProfPage.new({key: key});
    }
    createState() {
      return new ViewProf._MainPageState.new();
    }
  };
  (ViewProf.ViewProfPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    ViewProf.ViewProfPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = ViewProf.ViewProfPage.prototype;
  dart.addTypeTests(ViewProf.ViewProfPage);
  dart.addTypeCaches(ViewProf.ViewProfPage);
  dart.setMethodSignature(ViewProf.ViewProfPage, () => ({
    __proto__: dart.getMethods(ViewProf.ViewProfPage.__proto__),
    createState: dart.fnType(ViewProf._MainPageState, [])
  }));
  dart.setLibraryUri(ViewProf.ViewProfPage, I[20]);
  var Widget_key = dart.privateName(framework, "Widget.key");
  var Text_selectionColor = dart.privateName(text$, "Text.selectionColor");
  var Text_textHeightBehavior = dart.privateName(text$, "Text.textHeightBehavior");
  var Text_textWidthBasis = dart.privateName(text$, "Text.textWidthBasis");
  var Text_semanticsLabel = dart.privateName(text$, "Text.semanticsLabel");
  var Text_maxLines = dart.privateName(text$, "Text.maxLines");
  var Text_textScaleFactor = dart.privateName(text$, "Text.textScaleFactor");
  var Text_overflow = dart.privateName(text$, "Text.overflow");
  var Text_softWrap = dart.privateName(text$, "Text.softWrap");
  var Text_locale = dart.privateName(text$, "Text.locale");
  var Text_textDirection = dart.privateName(text$, "Text.textDirection");
  var Text_textAlign = dart.privateName(text$, "Text.textAlign");
  var Text_strutStyle = dart.privateName(text$, "Text.strutStyle");
  var Text_style = dart.privateName(text$, "Text.style");
  var Text_textSpan = dart.privateName(text$, "Text.textSpan");
  var Text_data = dart.privateName(text$, "Text.data");
  ViewProf._MainPageState = class _MainPageState extends framework.State$(ViewProf.ViewProfPage) {
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[1508] || CT.C1508, backgroundColor: new ui.Color.fromRGBO(86, 63, 232, 1)}), body: C[1509] || CT.C1509, bottomNavigationBar: new botnav.BottomNav.new()});
    }
    static ['_#new#tearOff']() {
      return new ViewProf._MainPageState.new();
    }
  };
  (ViewProf._MainPageState.new = function() {
    ViewProf._MainPageState.__proto__.new.call(this);
    ;
  }).prototype = ViewProf._MainPageState.prototype;
  dart.addTypeTests(ViewProf._MainPageState);
  dart.addTypeCaches(ViewProf._MainPageState);
  dart.setMethodSignature(ViewProf._MainPageState, () => ({
    __proto__: dart.getMethods(ViewProf._MainPageState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(ViewProf._MainPageState, I[20]);
  ViewProf.ProfilePage = class ProfilePage extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new ViewProf.ProfilePage.new({key: key});
    }
    createState() {
      return new ViewProf._ProfilePageState.new();
    }
  };
  (ViewProf.ProfilePage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    ViewProf.ProfilePage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = ViewProf.ProfilePage.prototype;
  dart.addTypeTests(ViewProf.ProfilePage);
  dart.addTypeCaches(ViewProf.ProfilePage);
  dart.setMethodSignature(ViewProf.ProfilePage, () => ({
    __proto__: dart.getMethods(ViewProf.ProfilePage.__proto__),
    createState: dart.fnType(ViewProf._ProfilePageState, [])
  }));
  dart.setLibraryUri(ViewProf.ProfilePage, I[20]);
  var Color_value = dart.privateName(ui, "Color.value");
  var _appliedColor = dart.privateName(ViewProf, "_appliedColor");
  var _mathColor = dart.privateName(ViewProf, "_mathColor");
  var _premiumColor = dart.privateName(ViewProf, "_premiumColor");
  var _isPremiumButtonLocked = dart.privateName(ViewProf, "_isPremiumButtonLocked");
  var _changeColor = dart.privateName(ViewProf, "_changeColor");
  var _showPremiumPopup = dart.privateName(ViewProf, "_showPremiumPopup");
  var EdgeInsets_bottom = dart.privateName(edge_insets, "EdgeInsets.bottom");
  var EdgeInsets_right = dart.privateName(edge_insets, "EdgeInsets.right");
  var EdgeInsets_top = dart.privateName(edge_insets, "EdgeInsets.top");
  var EdgeInsets_left = dart.privateName(edge_insets, "EdgeInsets.left");
  ViewProf._ProfilePageState = class _ProfilePageState extends framework.State$(ViewProf.ProfilePage) {
    [_changeColor](button) {
      this.setState(dart.fn(() => {
        if (button === "Applied") {
          this[_appliedColor] = C[1511] || CT.C1511;
          this[_mathColor] = this.untouched;
        } else if (button === "Math") {
          this[_appliedColor] = this.untouched;
          this[_mathColor] = C[1511] || CT.C1511;
        }
      }, T$.VoidTovoid()));
    }
    [_showPremiumPopup]() {
      dialog.showDialog(dart.dynamic, {context: this.context, builder: dart.fn(context => new dialog.AlertDialog.new({title: C[1512] || CT.C1512, content: C[1513] || CT.C1513, actions: T$.JSArrayOfWidget().of([new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => navigator.Navigator.of(context).pop(T$.ObjectN()), T$.VoidTovoid()), child: C[1514] || CT.C1514}), new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => {
                navigator.Navigator.of(context).pop(T$.ObjectN());
                navigator.Navigator.push(dart.dynamic, context, new page$.MaterialPageRoute.new({builder: dart.fn(context => new transaction.TransactionPage.new(), T$.BuildContextToTransactionPage())}));
              }, T$.VoidTovoid()), child: C[1515] || CT.C1515})])}), T$.BuildContextToAlertDialog())});
    }
    build(context) {
      return new single_child_scroll_view.SingleChildScrollView.new({child: new container.Container.new({padding: C[1516] || CT.C1516, color: C[1517] || CT.C1517, child: new basic.Column.new({children: T$.JSArrayOfWidget().of([C[1518] || CT.C1518, new ViewProf.ProfileContent.new({appliedColor: this[_appliedColor], mathColor: this[_mathColor], premiumColor: this[_premiumColor], isPremiumButtonLocked: this[_isPremiumButtonLocked], onButtonPressed: dart.bind(this, _changeColor), onPremiumPressed: dart.bind(this, _showPremiumPopup)})])})})});
    }
    static ['_#new#tearOff']() {
      return new ViewProf._ProfilePageState.new();
    }
  };
  (ViewProf._ProfilePageState.new = function() {
    this.untouched = C[1510] || CT.C1510;
    this[_appliedColor] = C[1510] || CT.C1510;
    this[_mathColor] = C[1510] || CT.C1510;
    this[_premiumColor] = new ui.Color.fromARGB(255, 201, 196, 232);
    this[_isPremiumButtonLocked] = true;
    ViewProf._ProfilePageState.__proto__.new.call(this);
    ;
  }).prototype = ViewProf._ProfilePageState.prototype;
  dart.addTypeTests(ViewProf._ProfilePageState);
  dart.addTypeCaches(ViewProf._ProfilePageState);
  dart.setMethodSignature(ViewProf._ProfilePageState, () => ({
    __proto__: dart.getMethods(ViewProf._ProfilePageState.__proto__),
    [_changeColor]: dart.fnType(dart.void, [core.String]),
    [_showPremiumPopup]: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(ViewProf._ProfilePageState, I[20]);
  dart.setFieldSignature(ViewProf._ProfilePageState, () => ({
    __proto__: dart.getFields(ViewProf._ProfilePageState.__proto__),
    untouched: dart.fieldType(ui.Color),
    [_appliedColor]: dart.fieldType(ui.Color),
    [_mathColor]: dart.fieldType(ui.Color),
    [_premiumColor]: dart.fieldType(ui.Color),
    [_isPremiumButtonLocked]: dart.fieldType(core.bool)
  }));
  var Shadow_blurRadius = dart.privateName(ui, "Shadow.blurRadius");
  var OffsetBase__dy = dart.privateName(ui, "OffsetBase._dy");
  var OffsetBase__dx = dart.privateName(ui, "OffsetBase._dx");
  var Shadow_offset = dart.privateName(ui, "Shadow.offset");
  var Shadow_color = dart.privateName(ui, "Shadow.color");
  var _Enum__name = dart.privateName(core, "_Enum._name");
  var _Enum_index = dart.privateName(core, "_Enum.index");
  var BoxShadow_blurStyle = dart.privateName(box_shadow, "BoxShadow.blurStyle");
  var BoxShadow_spreadRadius = dart.privateName(box_shadow, "BoxShadow.spreadRadius");
  var SingleChildRenderObjectWidget_child = dart.privateName(framework, "SingleChildRenderObjectWidget.child");
  var Padding_padding = dart.privateName(basic, "Padding.padding");
  ViewProf.ProfileHeader = class ProfileHeader extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new ViewProf.ProfileHeader.new({key: key});
    }
    build(context) {
      return new container.Container.new({height: 350, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white, borderRadius: new border_radius.BorderRadius.circular(20), boxShadow: C[1519] || CT.C1519}), child: C[1524] || CT.C1524});
    }
  };
  (ViewProf.ProfileHeader.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    ViewProf.ProfileHeader.__proto__.new.call(this, {key: key});
    ;
  }).prototype = ViewProf.ProfileHeader.prototype;
  dart.addTypeTests(ViewProf.ProfileHeader);
  dart.addTypeCaches(ViewProf.ProfileHeader);
  dart.setMethodSignature(ViewProf.ProfileHeader, () => ({
    __proto__: dart.getMethods(ViewProf.ProfileHeader.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(ViewProf.ProfileHeader, I[20]);
  var appliedColor$ = dart.privateName(ViewProf, "ProfileContent.appliedColor");
  var mathColor$ = dart.privateName(ViewProf, "ProfileContent.mathColor");
  var premiumColor$ = dart.privateName(ViewProf, "ProfileContent.premiumColor");
  var isPremiumButtonLocked$ = dart.privateName(ViewProf, "ProfileContent.isPremiumButtonLocked");
  var onButtonPressed$ = dart.privateName(ViewProf, "ProfileContent.onButtonPressed");
  var onPremiumPressed$ = dart.privateName(ViewProf, "ProfileContent.onPremiumPressed");
  var _buildActionButton = dart.privateName(ViewProf, "_buildActionButton");
  var SizedBox_height = dart.privateName(basic, "SizedBox.height");
  var SizedBox_width = dart.privateName(basic, "SizedBox.width");
  ViewProf.ProfileContent = class ProfileContent extends framework.StatelessWidget {
    get appliedColor() {
      return this[appliedColor$];
    }
    set appliedColor(value) {
      super.appliedColor = value;
    }
    get mathColor() {
      return this[mathColor$];
    }
    set mathColor(value) {
      super.mathColor = value;
    }
    get premiumColor() {
      return this[premiumColor$];
    }
    set premiumColor(value) {
      super.premiumColor = value;
    }
    get isPremiumButtonLocked() {
      return this[isPremiumButtonLocked$];
    }
    set isPremiumButtonLocked(value) {
      super.isPremiumButtonLocked = value;
    }
    get onButtonPressed() {
      return this[onButtonPressed$];
    }
    set onButtonPressed(value) {
      super.onButtonPressed = value;
    }
    get onPremiumPressed() {
      return this[onPremiumPressed$];
    }
    set onPremiumPressed(value) {
      super.onPremiumPressed = value;
    }
    static ['_#new#tearOff'](opts) {
      let appliedColor = opts && 'appliedColor' in opts ? opts.appliedColor : null;
      let mathColor = opts && 'mathColor' in opts ? opts.mathColor : null;
      let premiumColor = opts && 'premiumColor' in opts ? opts.premiumColor : null;
      let isPremiumButtonLocked = opts && 'isPremiumButtonLocked' in opts ? opts.isPremiumButtonLocked : null;
      let onButtonPressed = opts && 'onButtonPressed' in opts ? opts.onButtonPressed : null;
      let onPremiumPressed = opts && 'onPremiumPressed' in opts ? opts.onPremiumPressed : null;
      let key = opts && 'key' in opts ? opts.key : null;
      return new ViewProf.ProfileContent.new({appliedColor: appliedColor, mathColor: mathColor, premiumColor: premiumColor, isPremiumButtonLocked: isPremiumButtonLocked, onButtonPressed: onButtonPressed, onPremiumPressed: onPremiumPressed, key: key});
    }
    build(context) {
      return new container.Container.new({height: 200, decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white, borderRadius: new border_radius.BorderRadius.circular(20), boxShadow: C[1519] || CT.C1519}), child: new basic.Padding.new({padding: C[1516] || CT.C1516, child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceEvenly, children: T$.JSArrayOfWidget().of([this[_buildActionButton]("Applied", this.appliedColor, this.onButtonPressed), C[1526] || CT.C1526, this[_buildActionButton]("Math", this.mathColor, this.onButtonPressed), C[1526] || CT.C1526, new basic.Expanded.new({child: new elevated_button.ElevatedButton.new({onPressed: this.isPremiumButtonLocked ? this.onPremiumPressed : null, child: C[1527] || CT.C1527, style: elevated_button.ElevatedButton.styleFrom({backgroundColor: this.premiumColor})})})])})})});
    }
    [_buildActionButton](label, color, onPressed) {
      return new basic.Expanded.new({child: new elevated_button.ElevatedButton.new({onPressed: dart.fn(() => onPressed(label), T$.VoidTovoid()), child: new text$.Text.new(label), style: elevated_button.ElevatedButton.styleFrom({backgroundColor: color})})});
    }
  };
  (ViewProf.ProfileContent.new = function(opts) {
    let appliedColor = opts && 'appliedColor' in opts ? opts.appliedColor : null;
    let mathColor = opts && 'mathColor' in opts ? opts.mathColor : null;
    let premiumColor = opts && 'premiumColor' in opts ? opts.premiumColor : null;
    let isPremiumButtonLocked = opts && 'isPremiumButtonLocked' in opts ? opts.isPremiumButtonLocked : null;
    let onButtonPressed = opts && 'onButtonPressed' in opts ? opts.onButtonPressed : null;
    let onPremiumPressed = opts && 'onPremiumPressed' in opts ? opts.onPremiumPressed : null;
    let key = opts && 'key' in opts ? opts.key : null;
    this[appliedColor$] = appliedColor;
    this[mathColor$] = mathColor;
    this[premiumColor$] = premiumColor;
    this[isPremiumButtonLocked$] = isPremiumButtonLocked;
    this[onButtonPressed$] = onButtonPressed;
    this[onPremiumPressed$] = onPremiumPressed;
    ViewProf.ProfileContent.__proto__.new.call(this, {key: key});
    ;
  }).prototype = ViewProf.ProfileContent.prototype;
  dart.addTypeTests(ViewProf.ProfileContent);
  dart.addTypeCaches(ViewProf.ProfileContent);
  dart.setMethodSignature(ViewProf.ProfileContent, () => ({
    __proto__: dart.getMethods(ViewProf.ProfileContent.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_buildActionButton]: dart.fnType(basic.Expanded, [core.String, ui.Color, dart.fnType(dart.dynamic, [core.String])])
  }));
  dart.setLibraryUri(ViewProf.ProfileContent, I[20]);
  dart.setFieldSignature(ViewProf.ProfileContent, () => ({
    __proto__: dart.getFields(ViewProf.ProfileContent.__proto__),
    appliedColor: dart.finalFieldType(ui.Color),
    mathColor: dart.finalFieldType(ui.Color),
    premiumColor: dart.finalFieldType(ui.Color),
    isPremiumButtonLocked: dart.finalFieldType(core.bool),
    onButtonPressed: dart.finalFieldType(dart.fnType(dart.dynamic, [core.String])),
    onPremiumPressed: dart.finalFieldType(dart.fnType(dart.void, []))
  }));
  ViewProf.ProfileInfo = class ProfileInfo extends framework.StatefulWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new ViewProf.ProfileInfo.new({key: key});
    }
    createState() {
      return new ViewProf._ProfileInfoState.new();
    }
  };
  (ViewProf.ProfileInfo.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    ViewProf.ProfileInfo.__proto__.new.call(this, {key: key});
    ;
  }).prototype = ViewProf.ProfileInfo.prototype;
  dart.addTypeTests(ViewProf.ProfileInfo);
  dart.addTypeCaches(ViewProf.ProfileInfo);
  dart.setMethodSignature(ViewProf.ProfileInfo, () => ({
    __proto__: dart.getMethods(ViewProf.ProfileInfo.__proto__),
    createState: dart.fnType(ViewProf._ProfileInfoState, [])
  }));
  dart.setLibraryUri(ViewProf.ProfileInfo, I[20]);
  var SnackBar_clipBehavior = dart.privateName(snack_bar, "SnackBar.clipBehavior");
  var SnackBar_dismissDirection = dart.privateName(snack_bar, "SnackBar.dismissDirection");
  var SnackBar_onVisible = dart.privateName(snack_bar, "SnackBar.onVisible");
  var SnackBar_animation = dart.privateName(snack_bar, "SnackBar.animation");
  var Duration__duration = dart.privateName(core, "Duration._duration");
  var SnackBar_duration = dart.privateName(snack_bar, "SnackBar.duration");
  var SnackBar_closeIconColor = dart.privateName(snack_bar, "SnackBar.closeIconColor");
  var SnackBar_showCloseIcon = dart.privateName(snack_bar, "SnackBar.showCloseIcon");
  var SnackBar_action = dart.privateName(snack_bar, "SnackBar.action");
  var SnackBar_behavior = dart.privateName(snack_bar, "SnackBar.behavior");
  var SnackBar_shape = dart.privateName(snack_bar, "SnackBar.shape");
  var SnackBar_width = dart.privateName(snack_bar, "SnackBar.width");
  var SnackBar_padding = dart.privateName(snack_bar, "SnackBar.padding");
  var SnackBar_margin = dart.privateName(snack_bar, "SnackBar.margin");
  var SnackBar_elevation = dart.privateName(snack_bar, "SnackBar.elevation");
  var SnackBar_backgroundColor = dart.privateName(snack_bar, "SnackBar.backgroundColor");
  var SnackBar_content = dart.privateName(snack_bar, "SnackBar.content");
  var TextStyle_overflow = dart.privateName(text_style, "TextStyle.overflow");
  var TextStyle_fontVariations = dart.privateName(text_style, "TextStyle.fontVariations");
  var TextStyle_fontFeatures = dart.privateName(text_style, "TextStyle.fontFeatures");
  var TextStyle_shadows = dart.privateName(text_style, "TextStyle.shadows");
  var TextStyle_debugLabel = dart.privateName(text_style, "TextStyle.debugLabel");
  var TextStyle_decorationThickness = dart.privateName(text_style, "TextStyle.decorationThickness");
  var TextStyle_decorationStyle = dart.privateName(text_style, "TextStyle.decorationStyle");
  var TextStyle_decorationColor = dart.privateName(text_style, "TextStyle.decorationColor");
  var TextStyle_decoration = dart.privateName(text_style, "TextStyle.decoration");
  var TextStyle_background = dart.privateName(text_style, "TextStyle.background");
  var TextStyle_foreground = dart.privateName(text_style, "TextStyle.foreground");
  var TextStyle_locale = dart.privateName(text_style, "TextStyle.locale");
  var TextStyle_leadingDistribution = dart.privateName(text_style, "TextStyle.leadingDistribution");
  var TextStyle_height = dart.privateName(text_style, "TextStyle.height");
  var TextStyle_textBaseline = dart.privateName(text_style, "TextStyle.textBaseline");
  var TextStyle_wordSpacing = dart.privateName(text_style, "TextStyle.wordSpacing");
  var TextStyle_letterSpacing = dart.privateName(text_style, "TextStyle.letterSpacing");
  var TextStyle_fontStyle = dart.privateName(text_style, "TextStyle.fontStyle");
  var FontWeight_value = dart.privateName(ui, "FontWeight.value");
  var FontWeight_index = dart.privateName(ui, "FontWeight.index");
  var TextStyle_fontWeight = dart.privateName(text_style, "TextStyle.fontWeight");
  var TextStyle_fontSize = dart.privateName(text_style, "TextStyle.fontSize");
  var TextStyle__package = dart.privateName(text_style, "TextStyle._package");
  var TextStyle__fontFamilyFallback = dart.privateName(text_style, "TextStyle._fontFamilyFallback");
  var TextStyle_fontFamily = dart.privateName(text_style, "TextStyle.fontFamily");
  var TextStyle_backgroundColor = dart.privateName(text_style, "TextStyle.backgroundColor");
  var TextStyle_color = dart.privateName(text_style, "TextStyle.color");
  var TextStyle_inherit = dart.privateName(text_style, "TextStyle.inherit");
  var CircleAvatar_maxRadius = dart.privateName(circle_avatar, "CircleAvatar.maxRadius");
  var CircleAvatar_minRadius = dart.privateName(circle_avatar, "CircleAvatar.minRadius");
  var CircleAvatar_radius = dart.privateName(circle_avatar, "CircleAvatar.radius");
  var CircleAvatar_onForegroundImageError = dart.privateName(circle_avatar, "CircleAvatar.onForegroundImageError");
  var CircleAvatar_onBackgroundImageError = dart.privateName(circle_avatar, "CircleAvatar.onBackgroundImageError");
  var CircleAvatar_foregroundImage = dart.privateName(circle_avatar, "CircleAvatar.foregroundImage");
  var CircleAvatar_backgroundImage = dart.privateName(circle_avatar, "CircleAvatar.backgroundImage");
  var CircleAvatar_foregroundColor = dart.privateName(circle_avatar, "CircleAvatar.foregroundColor");
  var CircleAvatar_backgroundColor = dart.privateName(circle_avatar, "CircleAvatar.backgroundColor");
  var Align_heightFactor = dart.privateName(basic, "Align.heightFactor");
  var Align_widthFactor = dart.privateName(basic, "Align.widthFactor");
  var Alignment_y = dart.privateName(alignment, "Alignment.y");
  var Alignment_x = dart.privateName(alignment, "Alignment.x");
  var Align_alignment = dart.privateName(basic, "Align.alignment");
  var CircleAvatar_child = dart.privateName(circle_avatar, "CircleAvatar.child");
  ViewProf._ProfileInfoState = class _ProfileInfoState extends framework.State$(ViewProf.ProfileInfo) {
    addFriend() {
      this.setState(dart.fn(() => {
        this.friendsCount = this.friendsCount + 1;
        this.isFriend = true;
      }, T$.VoidTovoid()));
    }
    unfriend() {
      this.setState(dart.fn(() => {
        if (this.friendsCount > 0) {
          this.friendsCount = this.friendsCount - 1;
          this.isFriend = false;
        }
      }, T$.VoidTovoid()));
    }
    sendMessage() {
      scaffold.ScaffoldMessenger.of(this.context).showSnackBar(C[1528] || CT.C1528);
    }
    build(context) {
      return new basic.Column.new({children: T$.JSArrayOfWidget().of([C[1533] || CT.C1533, C[1538] || CT.C1538, C[1539] || CT.C1539, C[1545] || CT.C1545, C[1546] || CT.C1546, C[1545] || CT.C1545, new basic.Column.new({children: T$.JSArrayOfWidget().of([new text$.Text.new("Friends: " + dart.str(this.friendsCount), {style: C[1535] || CT.C1535}), C[1538] || CT.C1538, new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceEvenly, children: T$.JSArrayOfWidget().of([new elevated_button.ElevatedButton.new({style: elevated_button.ElevatedButton.styleFrom({backgroundColor: this.isFriend ? C[1511] || CT.C1511 : C[1510] || CT.C1510}), onPressed: this.isFriend ? dart.bind(this, 'unfriend') : dart.bind(this, 'addFriend'), child: new text$.Text.new(this.isFriend ? "Unfriend" : "Add Friend")}), new elevated_button.ElevatedButton.new({style: elevated_button.ElevatedButton.styleFrom({backgroundColor: C[1510] || CT.C1510}), onPressed: dart.bind(this, 'sendMessage'), child: C[1549] || CT.C1549})])})])})])});
    }
    static ['_#new#tearOff']() {
      return new ViewProf._ProfileInfoState.new();
    }
  };
  (ViewProf._ProfileInfoState.new = function() {
    this.friendsCount = 0;
    this.isFriend = false;
    ViewProf._ProfileInfoState.__proto__.new.call(this);
    ;
  }).prototype = ViewProf._ProfileInfoState.prototype;
  dart.addTypeTests(ViewProf._ProfileInfoState);
  dart.addTypeCaches(ViewProf._ProfileInfoState);
  dart.setMethodSignature(ViewProf._ProfileInfoState, () => ({
    __proto__: dart.getMethods(ViewProf._ProfileInfoState.__proto__),
    addFriend: dart.fnType(dart.void, []),
    unfriend: dart.fnType(dart.void, []),
    sendMessage: dart.fnType(dart.void, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(ViewProf._ProfileInfoState, I[20]);
  dart.setFieldSignature(ViewProf._ProfileInfoState, () => ({
    __proto__: dart.getFields(ViewProf._ProfileInfoState.__proto__),
    friendsCount: dart.fieldType(core.int),
    isFriend: dart.fieldType(core.bool)
  }));
  ViewProf.ViewProf = class ViewProf$ extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new ViewProf.ViewProf.new({key: key});
    }
    build(context) {
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({title: C[1550] || CT.C1550, backgroundColor: C[1551] || CT.C1551}), body: C[1525] || CT.C1525, bottomNavigationBar: new botnav.BottomNav.new()});
    }
  };
  (ViewProf.ViewProf.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    ViewProf.ViewProf.__proto__.new.call(this, {key: key});
    ;
  }).prototype = ViewProf.ViewProf.prototype;
  dart.addTypeTests(ViewProf.ViewProf);
  dart.addTypeCaches(ViewProf.ViewProf);
  dart.setMethodSignature(ViewProf.ViewProf, () => ({
    __proto__: dart.getMethods(ViewProf.ViewProf.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(ViewProf.ViewProf, I[20]);
  var query$ = dart.privateName(search, "SearchPage.query");
  search.SearchPage = class SearchPage extends framework.StatelessWidget {
    get query() {
      return this[query$];
    }
    set query(value) {
      super.query = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let query = opts && 'query' in opts ? opts.query : null;
      return new search.SearchPage.new({key: key, query: query});
    }
    build(context) {
      return new scaffold.Scaffold.new({body: new single_child_scroll_view.SingleChildScrollView.new({child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new search.SearchBar.new({initialQuery: this.query}), new basic.SizedBox.new({height: 16}), new basic.Column.new({children: T$.ListOfWidget().generate(20, dart.fn(index => new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceEvenly, children: T$.JSArrayOfWidget().of([this.buildResultCard(), this.buildResultCard()])}), T$.intToRow()))})])})}), bottomNavigationBar: new botnav.BottomNav.new()});
    }
    buildResultCard() {
      return new container.Container.new({width: 120, height: 215.33, margin: C[1516] || CT.C1516, decoration: new shape_decoration.ShapeDecoration.new({color: new ui.Color.new(4294111485), shape: new rounded_rectangle_border.RoundedRectangleBorder.new({side: new borders.BorderSide.new({width: 1, color: new ui.Color.new(4280750015)}), borderRadius: new border_radius.BorderRadius.circular(12)})})});
    }
  };
  (search.SearchPage.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let query = opts && 'query' in opts ? opts.query : null;
    this[query$] = query;
    search.SearchPage.__proto__.new.call(this, {key: key});
    ;
  }).prototype = search.SearchPage.prototype;
  dart.addTypeTests(search.SearchPage);
  dart.addTypeCaches(search.SearchPage);
  dart.setMethodSignature(search.SearchPage, () => ({
    __proto__: dart.getMethods(search.SearchPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    buildResultCard: dart.fnType(framework.Widget, [])
  }));
  dart.setLibraryUri(search.SearchPage, I[21]);
  dart.setFieldSignature(search.SearchPage, () => ({
    __proto__: dart.getFields(search.SearchPage.__proto__),
    query: dart.finalFieldType(core.String)
  }));
  var initialQuery$ = dart.privateName(search, "SearchBar.initialQuery");
  search.SearchBar = class SearchBar extends framework.StatefulWidget {
    get initialQuery() {
      return this[initialQuery$];
    }
    set initialQuery(value) {
      super.initialQuery = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let initialQuery = opts && 'initialQuery' in opts ? opts.initialQuery : null;
      return new search.SearchBar.new({key: key, initialQuery: initialQuery});
    }
    createState() {
      return new search._SearchBarState.new();
    }
  };
  (search.SearchBar.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let initialQuery = opts && 'initialQuery' in opts ? opts.initialQuery : null;
    this[initialQuery$] = initialQuery;
    search.SearchBar.__proto__.new.call(this, {key: key});
    ;
  }).prototype = search.SearchBar.prototype;
  dart.addTypeTests(search.SearchBar);
  dart.addTypeCaches(search.SearchBar);
  dart.setMethodSignature(search.SearchBar, () => ({
    __proto__: dart.getMethods(search.SearchBar.__proto__),
    createState: dart.fnType(search._SearchBarState, [])
  }));
  dart.setLibraryUri(search.SearchBar, I[21]);
  dart.setFieldSignature(search.SearchBar, () => ({
    __proto__: dart.getFields(search.SearchBar.__proto__),
    initialQuery: dart.finalFieldType(core.String)
  }));
  var _focusNode = dart.privateName(search, "_focusNode");
  var _isFocused = dart.privateName(search, "_isFocused");
  var _searchText = dart.privateName(search, "_searchText");
  var _suggestions = dart.privateName(search, "_suggestions");
  search._SearchBarState = class _SearchBarState extends framework.State$(search.SearchBar) {
    initState() {
      super.initState();
      this[_focusNode].addListener(dart.fn(() => {
        this.setState(dart.fn(() => {
          this[_isFocused] = this[_focusNode].hasFocus;
        }, T$.VoidTovoid()));
      }, T$.VoidTovoid()));
      this[_searchText] = this.widget.initialQuery;
    }
    dispose() {
      this[_focusNode].dispose();
      super.dispose();
    }
    build(context) {
      return new container.Container.new({width: media_query.MediaQuery.of(context).size.width, padding: C[1552] || CT.C1552, decoration: new box_decoration.BoxDecoration.new({color: new ui.Color.new(4294111485), border: box_border.Border.all({color: new ui.Color.new(4280750015)}), borderRadius: new border_radius.BorderRadius.circular(8)}), child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: (() => {
            let t9 = T$.JSArrayOfWidget().of([new text_field.TextField.new({focusNode: this[_focusNode], cursorColor: this[_isFocused] ? new ui.Color.new(4280815807) : new ui.Color.new(4281545523), style: new text_style.TextStyle.new({color: new ui.Color.new(4281545523)}), decoration: new input_decorator.InputDecoration.new({prefixIcon: new icon$.Icon.new(icons.Icons.search, {color: this[_isFocused] ? new ui.Color.new(4280815807) : new ui.Color.new(4289305599)}), border: input_border.InputBorder.none, hintText: "Search...", hintStyle: new text_style.TextStyle.new({color: new ui.Color.new(4281545523)})}), onChanged: dart.fn(text => {
                  this.setState(dart.fn(() => {
                    this[_searchText] = text;
                  }, T$.VoidTovoid()));
                }, T$.StringTovoid()), controller: new editable_text.TextEditingController.new({text: this[_searchText]})})]);
            if (this[_isFocused] && this[_searchText][$isNotEmpty]) t9.push(new container.Container.new({height: 80, margin: C[1553] || CT.C1553, child: new basic.Column.new({children: this[_suggestions][$map](gesture_detector.GestureDetector, dart.fn(suggestion => new gesture_detector.GestureDetector.new({onTap: dart.fn(() => {
                    this.setState(dart.fn(() => {
                      this[_searchText] = suggestion;
                    }, T$.VoidTovoid()));
                  }, T$.VoidTovoid()), child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new text$.Text.new(suggestion, {style: new text_style.TextStyle.new({color: new ui.Color.new(4281545523)})}), new divider.Divider.new({thickness: 1, color: new ui.Color.new(4280750015)})])})}), T$.StringToGestureDetector()))[$toList]()})}));
            return t9;
          })()})});
    }
    static ['_#new#tearOff']() {
      return new search._SearchBarState.new();
    }
  };
  (search._SearchBarState.new = function() {
    this[_focusNode] = new focus_manager.FocusNode.new();
    this[_isFocused] = false;
    this[_searchText] = "";
    this[_suggestions] = T$.JSArrayOfString().of(["Search suggestion 1", "Search suggestion 2"]);
    search._SearchBarState.__proto__.new.call(this);
    ;
  }).prototype = search._SearchBarState.prototype;
  dart.addTypeTests(search._SearchBarState);
  dart.addTypeCaches(search._SearchBarState);
  dart.setMethodSignature(search._SearchBarState, () => ({
    __proto__: dart.getMethods(search._SearchBarState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(search._SearchBarState, I[21]);
  dart.setFieldSignature(search._SearchBarState, () => ({
    __proto__: dart.getFields(search._SearchBarState.__proto__),
    [_focusNode]: dart.finalFieldType(focus_manager.FocusNode),
    [_isFocused]: dart.fieldType(core.bool),
    [_searchText]: dart.fieldType(core.String),
    [_suggestions]: dart.fieldType(core.List$(core.String))
  }));
  var _buildBottomNavigation = dart.privateName(botnav, "_buildBottomNavigation");
  var _buildNavItem = dart.privateName(botnav, "_buildNavItem");
  botnav.BottomNav = class BottomNav extends framework.StatelessWidget {
    build(context) {
      return this[_buildBottomNavigation](media_query.MediaQuery.of(context).size.width, context);
    }
    [_buildBottomNavigation](width, context) {
      return new container.Container.new({height: 43, width: width, padding: new edge_insets.EdgeInsets.symmetric({horizontal: 15}), decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white, borderRadius: new border_radius.BorderRadius.vertical({top: new ui.Radius.circular(10)})}), child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceAround, children: T$.JSArrayOfWidget().of([this[_buildNavItem](context, flutter_boxicons.Boxicons.bx_home, "Home", new feed$.FeedPage.new()), this[_buildNavItem](context, flutter_boxicons.Boxicons.bx_book, "My Courses", new courses.CoursePage.new()), this[_buildNavItem](context, flutter_boxicons.Boxicons.bx_message, "Inbox", new under_cons.UnderCons.new()), this[_buildNavItem](context, flutter_boxicons.Boxicons.bx_user, "Profile", new under_cons.UnderCons.new())])})});
    }
    [_buildNavItem](context, icon, label, page) {
      return new gesture_detector.GestureDetector.new({onTap: dart.fn(() => {
          navigator.Navigator.push(dart.dynamic, context, new page$.MaterialPageRoute.new({builder: dart.fn(context => page, T$.BuildContextToWidget())}));
        }, T$.VoidTovoid()), child: new basic.Column.new({mainAxisSize: flex.MainAxisSize.max, mainAxisAlignment: flex.MainAxisAlignment.spaceAround, children: T$.JSArrayOfWidget().of([new icon$.Icon.new(icon, {color: new ui.Color.fromRGBO(86, 63, 232, 1)}), new basic.SizedBox.new({height: 5}), new text$.Text.new(label, {style: new text_style.TextStyle.new({color: colors.Colors.black, fontFamily: "Inter", fontSize: 12})})])})});
    }
    static ['_#new#tearOff']() {
      return new botnav.BottomNav.new();
    }
  };
  (botnav.BottomNav.new = function() {
    botnav.BottomNav.__proto__.new.call(this);
    ;
  }).prototype = botnav.BottomNav.prototype;
  dart.addTypeTests(botnav.BottomNav);
  dart.addTypeCaches(botnav.BottomNav);
  dart.setMethodSignature(botnav.BottomNav, () => ({
    __proto__: dart.getMethods(botnav.BottomNav.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_buildBottomNavigation]: dart.fnType(framework.Widget, [core.double, framework.BuildContext]),
    [_buildNavItem]: dart.fnType(framework.Widget, [framework.BuildContext, icon_data.IconData, core.String, framework.Widget])
  }));
  dart.setLibraryUri(botnav.BottomNav, I[22]);
  var cameras = dart.privateName(camera_web$, "CameraPlugin.cameras");
  var camerasMetadata = dart.privateName(camera_web$, "CameraPlugin.camerasMetadata");
  var cameraEventStreamController = dart.privateName(camera_web$, "CameraPlugin.cameraEventStreamController");
  var window = dart.privateName(camera_web$, "CameraPlugin.window");
  var _textureCounter = dart.privateName(camera_web$, "_textureCounter");
  var _cameraVideoErrorSubscriptions = dart.privateName(camera_web$, "_cameraVideoErrorSubscriptions");
  var _cameraVideoAbortSubscriptions = dart.privateName(camera_web$, "_cameraVideoAbortSubscriptions");
  var _cameraEndedSubscriptions = dart.privateName(camera_web$, "_cameraEndedSubscriptions");
  var _cameraVideoRecordingErrorSubscriptions = dart.privateName(camera_web$, "_cameraVideoRecordingErrorSubscriptions");
  var _cameraService = dart.privateName(camera_web$, "_cameraService");
  var _cameraEvents = dart.privateName(camera_web$, "_cameraEvents");
  var VideoConstraints_deviceId = dart.privateName(camera_options, "VideoConstraints.deviceId");
  var VideoConstraints_height = dart.privateName(camera_options, "VideoConstraints.height");
  var VideoConstraints_width = dart.privateName(camera_options, "VideoConstraints.width");
  var VideoConstraints_facingMode = dart.privateName(camera_options, "VideoConstraints.facingMode");
  var CameraOptions_video = dart.privateName(camera_options, "CameraOptions.video");
  var AudioConstraints_enabled = dart.privateName(camera_options, "AudioConstraints.enabled");
  var CameraOptions_audio = dart.privateName(camera_options, "CameraOptions.audio");
  var _getVideoStreamForDevice = dart.privateName(camera_web$, "_getVideoStreamForDevice");
  var _addCameraErrorEvent = dart.privateName(camera_web$, "_addCameraErrorEvent");
  plugin_platform_interface.PlatformInterface = class PlatformInterface extends core.Object {
    static verify(instance, token) {
      plugin_platform_interface.PlatformInterface._verify(instance, token, {preventConstObject: true});
    }
    static verifyToken(instance, token) {
      plugin_platform_interface.PlatformInterface._verify(instance, token, {preventConstObject: false});
    }
    static _verify(instance, token, opts) {
      let preventConstObject = opts && 'preventConstObject' in opts ? opts.preventConstObject : null;
      if (plugin_platform_interface.MockPlatformInterfaceMixin.is(instance)) {
        let assertionsEnabled = false;
        if (!dart.fn(() => {
          assertionsEnabled = true;
          return true;
        }, T$.VoidTobool())()) dart.assertFailed(null, I[23], 92, 14, "() {\n        assertionsEnabled = true;\n        return true;\n      }()");
        if (!assertionsEnabled) {
          dart.throw(new core.AssertionError.new("`MockPlatformInterfaceMixin` is not intended for use in release builds."));
        }
        return;
      }
      if (preventConstObject && plugin_platform_interface.PlatformInterface._instanceTokens._get(instance) === (C[4] || CT.C4)) {
        dart.throw(new core.AssertionError.new("`const Object()` cannot be used as the token."));
      }
      if (token !== plugin_platform_interface.PlatformInterface._instanceTokens._get(instance)) {
        dart.throw(new core.AssertionError.new("Platform interfaces must not be implemented with `implements`"));
      }
    }
  };
  (plugin_platform_interface.PlatformInterface.new = function(opts) {
    let token = opts && 'token' in opts ? opts.token : null;
    plugin_platform_interface.PlatformInterface._instanceTokens._set(this, token);
  }).prototype = plugin_platform_interface.PlatformInterface.prototype;
  dart.addTypeTests(plugin_platform_interface.PlatformInterface);
  dart.addTypeCaches(plugin_platform_interface.PlatformInterface);
  dart.setStaticMethodSignature(plugin_platform_interface.PlatformInterface, () => ['verify', 'verifyToken', '_verify']);
  dart.setLibraryUri(plugin_platform_interface.PlatformInterface, I[24]);
  dart.setStaticFieldSignature(plugin_platform_interface.PlatformInterface, () => ['_instanceTokens']);
  dart.defineLazy(plugin_platform_interface.PlatformInterface, {
    /*plugin_platform_interface.PlatformInterface._instanceTokens*/get _instanceTokens() {
      return new (T$.ExpandoOfObject()).new();
    }
  }, false);
  camera_platform.CameraPlatform = class CameraPlatform extends plugin_platform_interface.PlatformInterface {
    static get instance() {
      return camera_platform.CameraPlatform._instance;
    }
    static set instance(instance) {
      plugin_platform_interface.PlatformInterface.verify(instance, camera_platform.CameraPlatform._token);
      camera_platform.CameraPlatform._instance = instance;
    }
    availableCameras() {
      dart.throw(new core.UnimplementedError.new("availableCameras() is not implemented."));
    }
    createCamera(cameraDescription, resolutionPreset, opts) {
      let enableAudio = opts && 'enableAudio' in opts ? opts.enableAudio : false;
      dart.throw(new core.UnimplementedError.new("createCamera() is not implemented."));
    }
    createCameraWithSettings(cameraDescription, mediaSettings) {
      return this.createCamera(cameraDescription, mediaSettings.resolutionPreset, {enableAudio: mediaSettings.enableAudio});
    }
    initializeCamera(cameraId, opts) {
      let imageFormatGroup = opts && 'imageFormatGroup' in opts ? opts.imageFormatGroup : C[1557] || CT.C1557;
      dart.throw(new core.UnimplementedError.new("initializeCamera() is not implemented."));
    }
    onCameraInitialized(cameraId) {
      dart.throw(new core.UnimplementedError.new("onCameraInitialized() is not implemented."));
    }
    onCameraResolutionChanged(cameraId) {
      dart.throw(new core.UnimplementedError.new("onResolutionChanged() is not implemented."));
    }
    onCameraClosing(cameraId) {
      dart.throw(new core.UnimplementedError.new("onCameraClosing() is not implemented."));
    }
    onCameraError(cameraId) {
      dart.throw(new core.UnimplementedError.new("onCameraError() is not implemented."));
    }
    onVideoRecordedEvent(cameraId) {
      dart.throw(new core.UnimplementedError.new("onCameraTimeLimitReached() is not implemented."));
    }
    onDeviceOrientationChanged() {
      dart.throw(new core.UnimplementedError.new("onDeviceOrientationChanged() is not implemented."));
    }
    lockCaptureOrientation(cameraId, orientation) {
      dart.throw(new core.UnimplementedError.new("lockCaptureOrientation() is not implemented."));
    }
    unlockCaptureOrientation(cameraId) {
      dart.throw(new core.UnimplementedError.new("unlockCaptureOrientation() is not implemented."));
    }
    takePicture(cameraId) {
      dart.throw(new core.UnimplementedError.new("takePicture() is not implemented."));
    }
    prepareForVideoRecording() {
      dart.throw(new core.UnimplementedError.new("prepareForVideoRecording() is not implemented."));
    }
    startVideoRecording(cameraId, opts) {
      let maxVideoDuration = opts && 'maxVideoDuration' in opts ? opts.maxVideoDuration : null;
      dart.throw(new core.UnimplementedError.new("startVideoRecording() is not implemented."));
    }
    startVideoCapturing(options) {
      return this.startVideoRecording(options.cameraId, {maxVideoDuration: options.maxDuration});
    }
    stopVideoRecording(cameraId) {
      dart.throw(new core.UnimplementedError.new("stopVideoRecording() is not implemented."));
    }
    pauseVideoRecording(cameraId) {
      dart.throw(new core.UnimplementedError.new("pauseVideoRecording() is not implemented."));
    }
    resumeVideoRecording(cameraId) {
      dart.throw(new core.UnimplementedError.new("resumeVideoRecording() is not implemented."));
    }
    onStreamedFrameAvailable(cameraId, opts) {
      let options = opts && 'options' in opts ? opts.options : null;
      dart.throw(new core.UnimplementedError.new("onStreamedFrameAvailable() is not implemented."));
    }
    setFlashMode(cameraId, mode) {
      dart.throw(new core.UnimplementedError.new("setFlashMode() is not implemented."));
    }
    setExposureMode(cameraId, mode) {
      dart.throw(new core.UnimplementedError.new("setExposureMode() is not implemented."));
    }
    setExposurePoint(cameraId, point) {
      dart.throw(new core.UnimplementedError.new("setExposurePoint() is not implemented."));
    }
    getMinExposureOffset(cameraId) {
      dart.throw(new core.UnimplementedError.new("getMinExposureOffset() is not implemented."));
    }
    getMaxExposureOffset(cameraId) {
      dart.throw(new core.UnimplementedError.new("getMaxExposureOffset() is not implemented."));
    }
    getExposureOffsetStepSize(cameraId) {
      dart.throw(new core.UnimplementedError.new("getMinExposureOffset() is not implemented."));
    }
    setExposureOffset(cameraId, offset) {
      dart.throw(new core.UnimplementedError.new("setExposureOffset() is not implemented."));
    }
    setFocusMode(cameraId, mode) {
      dart.throw(new core.UnimplementedError.new("setFocusMode() is not implemented."));
    }
    setFocusPoint(cameraId, point) {
      dart.throw(new core.UnimplementedError.new("setFocusPoint() is not implemented."));
    }
    getMaxZoomLevel(cameraId) {
      dart.throw(new core.UnimplementedError.new("getMaxZoomLevel() is not implemented."));
    }
    getMinZoomLevel(cameraId) {
      dart.throw(new core.UnimplementedError.new("getMinZoomLevel() is not implemented."));
    }
    setZoomLevel(cameraId, zoom) {
      dart.throw(new core.UnimplementedError.new("setZoomLevel() is not implemented."));
    }
    pausePreview(cameraId) {
      dart.throw(new core.UnimplementedError.new("pausePreview() is not implemented."));
    }
    resumePreview(cameraId) {
      dart.throw(new core.UnimplementedError.new("pausePreview() is not implemented."));
    }
    setDescriptionWhileRecording(description) {
      dart.throw(new core.UnimplementedError.new("setDescriptionWhileRecording() is not implemented."));
    }
    buildPreview(cameraId) {
      dart.throw(new core.UnimplementedError.new("buildView() has not been implemented."));
    }
    dispose(cameraId) {
      dart.throw(new core.UnimplementedError.new("dispose() is not implemented."));
    }
  };
  (camera_platform.CameraPlatform.new = function() {
    camera_platform.CameraPlatform.__proto__.new.call(this, {token: camera_platform.CameraPlatform._token});
    ;
  }).prototype = camera_platform.CameraPlatform.prototype;
  dart.addTypeTests(camera_platform.CameraPlatform);
  dart.addTypeCaches(camera_platform.CameraPlatform);
  dart.setMethodSignature(camera_platform.CameraPlatform, () => ({
    __proto__: dart.getMethods(camera_platform.CameraPlatform.__proto__),
    availableCameras: dart.fnType(async.Future$(core.List$(camera_description.CameraDescription)), []),
    createCamera: dart.fnType(async.Future$(core.int), [camera_description.CameraDescription, dart.nullable(resolution_preset.ResolutionPreset)], {enableAudio: core.bool}, {}),
    createCameraWithSettings: dart.fnType(async.Future$(core.int), [camera_description.CameraDescription, media_settings.MediaSettings]),
    initializeCamera: dart.fnType(async.Future$(dart.void), [core.int], {imageFormatGroup: image_format_group.ImageFormatGroup}, {}),
    onCameraInitialized: dart.fnType(async.Stream$(camera_event.CameraInitializedEvent), [core.int]),
    onCameraResolutionChanged: dart.fnType(async.Stream$(camera_event.CameraResolutionChangedEvent), [core.int]),
    onCameraClosing: dart.fnType(async.Stream$(camera_event.CameraClosingEvent), [core.int]),
    onCameraError: dart.fnType(async.Stream$(camera_event.CameraErrorEvent), [core.int]),
    onVideoRecordedEvent: dart.fnType(async.Stream$(camera_event.VideoRecordedEvent), [core.int]),
    onDeviceOrientationChanged: dart.fnType(async.Stream$(device_event.DeviceOrientationChangedEvent), []),
    lockCaptureOrientation: dart.fnType(async.Future$(dart.void), [core.int, system_chrome.DeviceOrientation]),
    unlockCaptureOrientation: dart.fnType(async.Future$(dart.void), [core.int]),
    takePicture: dart.fnType(async.Future$(html$.XFile), [core.int]),
    prepareForVideoRecording: dart.fnType(async.Future$(dart.void), []),
    startVideoRecording: dart.fnType(async.Future$(dart.void), [core.int], {maxVideoDuration: dart.nullable(core.Duration)}, {}),
    startVideoCapturing: dart.fnType(async.Future$(dart.void), [video_capture_options.VideoCaptureOptions]),
    stopVideoRecording: dart.fnType(async.Future$(html$.XFile), [core.int]),
    pauseVideoRecording: dart.fnType(async.Future$(dart.void), [core.int]),
    resumeVideoRecording: dart.fnType(async.Future$(dart.void), [core.int]),
    onStreamedFrameAvailable: dart.fnType(async.Stream$(camera_image_data.CameraImageData), [core.int], {options: dart.nullable(camera_image_data.CameraImageStreamOptions)}, {}),
    setFlashMode: dart.fnType(async.Future$(dart.void), [core.int, flash_mode.FlashMode]),
    setExposureMode: dart.fnType(async.Future$(dart.void), [core.int, exposure_mode.ExposureMode]),
    setExposurePoint: dart.fnType(async.Future$(dart.void), [core.int, dart.nullable(math.Point$(core.double))]),
    getMinExposureOffset: dart.fnType(async.Future$(core.double), [core.int]),
    getMaxExposureOffset: dart.fnType(async.Future$(core.double), [core.int]),
    getExposureOffsetStepSize: dart.fnType(async.Future$(core.double), [core.int]),
    setExposureOffset: dart.fnType(async.Future$(core.double), [core.int, core.double]),
    setFocusMode: dart.fnType(async.Future$(dart.void), [core.int, focus_mode.FocusMode]),
    setFocusPoint: dart.fnType(async.Future$(dart.void), [core.int, dart.nullable(math.Point$(core.double))]),
    getMaxZoomLevel: dart.fnType(async.Future$(core.double), [core.int]),
    getMinZoomLevel: dart.fnType(async.Future$(core.double), [core.int]),
    setZoomLevel: dart.fnType(async.Future$(dart.void), [core.int, core.double]),
    pausePreview: dart.fnType(async.Future$(dart.void), [core.int]),
    resumePreview: dart.fnType(async.Future$(dart.void), [core.int]),
    setDescriptionWhileRecording: dart.fnType(async.Future$(dart.void), [camera_description.CameraDescription]),
    buildPreview: dart.fnType(framework.Widget, [core.int]),
    dispose: dart.fnType(async.Future$(dart.void), [core.int])
  }));
  dart.setStaticGetterSignature(camera_platform.CameraPlatform, () => ['instance']);
  dart.setStaticSetterSignature(camera_platform.CameraPlatform, () => ['instance']);
  dart.setLibraryUri(camera_platform.CameraPlatform, I[25]);
  dart.setStaticFieldSignature(camera_platform.CameraPlatform, () => ['_token', '_instance']);
  dart.defineLazy(camera_platform.CameraPlatform, {
    /*camera_platform.CameraPlatform._token*/get _token() {
      return new core.Object.new();
    },
    /*camera_platform.CameraPlatform._instance*/get _instance() {
      return new method_channel_camera.MethodChannelCamera.new();
    },
    set _instance(value) {}
  }, false);
  camera_web$.CameraPlugin = class CameraPlugin extends camera_platform.CameraPlatform {
    get cameras() {
      return this[cameras];
    }
    set cameras(value) {
      super.cameras = value;
    }
    get camerasMetadata() {
      return this[camerasMetadata];
    }
    set camerasMetadata(value) {
      super.camerasMetadata = value;
    }
    get cameraEventStreamController() {
      return this[cameraEventStreamController];
    }
    set cameraEventStreamController(value) {
      super.cameraEventStreamController = value;
    }
    get window() {
      return this[window];
    }
    set window(value) {
      this[window] = value;
    }
    static ['_#new#tearOff'](opts) {
      let cameraService = opts && 'cameraService' in opts ? opts.cameraService : null;
      return new camera_web$.CameraPlugin.new({cameraService: cameraService});
    }
    static registerWith(registrar) {
      camera_platform.CameraPlatform.instance = new camera_web$.CameraPlugin.new({cameraService: new camera_service.CameraService.new()});
    }
    [_cameraEvents](cameraId) {
      return this.cameraEventStreamController.stream.where(dart.fn(event => event.cameraId === cameraId, T$.CameraEventTobool()));
    }
    availableCameras() {
      return async.async(T$.ListOfCameraDescription(), (function* availableCameras() {
        let t10, t10$;
        try {
          let mediaDevices = (t10 = this.window, t10 == null ? null : t10[$navigator].mediaDevices);
          let cameras = T$.JSArrayOfCameraDescription().of([]);
          if (mediaDevices == null) {
            dart.throw(new message_codec.PlatformException.new({code: camera_error_code.CameraErrorCode.notSupported.toString(), message: "The camera is not supported on this device."}));
          }
          let cameraStream = (yield this[_cameraService].getMediaStreamForOptions(C[1554] || CT.C1554));
          cameraStream[$getVideoTracks]()[$forEach](dart.fn(videoTrack => videoTrack.stop(), T$.MediaStreamTrackTovoid()));
          let devices = (yield mediaDevices[$enumerateDevices]());
          let videoInputDevices = devices[$whereType](html.MediaDeviceInfo)[$where](dart.fn(device => device.kind === "videoinput", T$.MediaDeviceInfoTobool()))[$where](dart.fn(device => device.deviceId != null && dart.nullCheck(device.deviceId)[$isNotEmpty], T$.MediaDeviceInfoTobool()));
          for (let videoInputDevice of videoInputDevices) {
            let videoStream = (yield this[_getVideoStreamForDevice](dart.nullCheck(videoInputDevice.deviceId)));
            let videoTracks = videoStream[$getVideoTracks]();
            if (videoTracks[$isNotEmpty]) {
              let facingMode = this[_cameraService].getFacingModeForVideoTrack(videoTracks[$first]);
              let lensDirection = facingMode != null ? this[_cameraService].mapFacingModeToLensDirection(facingMode) : camera_description.CameraLensDirection.external;
              let cameraLabel = (t10$ = videoInputDevice.label, t10$ == null ? "" : t10$);
              let camera = new camera_description.CameraDescription.new({name: cameraLabel, lensDirection: lensDirection, sensorOrientation: 0});
              let cameraMetadata = new camera_metadata.CameraMetadata.new({deviceId: dart.nullCheck(videoInputDevice.deviceId), facingMode: facingMode});
              cameras[$add](camera);
              this.camerasMetadata[$_set](camera, cameraMetadata);
              for (let videoTrack of videoTracks) {
                videoTrack.stop();
              }
            } else {
              continue;
            }
          }
          return cameras;
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (html.DomException.is(ex)) {
            let e = ex;
            dart.throw(new camera_exception.CameraException.new(e[$name], e.message));
          } else if (message_codec.PlatformException.is(ex)) {
            let e = ex;
            dart.throw(new camera_exception.CameraException.new(e.code, e.message));
          } else if (camera_web_exception.CameraWebException.is(ex)) {
            let e = ex;
            this[_addCameraErrorEvent](e);
            dart.throw(new camera_exception.CameraException.new(e.code.toString(), e.description));
          } else
            throw e$;
        }
      }).bind(this));
    }
    createCamera(cameraDescription, resolutionPreset, opts) {
      let enableAudio = opts && 'enableAudio' in opts ? opts.enableAudio : false;
      return async.async(core.int, (function* createCamera() {
        let t12, t12$;
        try {
          if (!this.camerasMetadata[$containsKey](cameraDescription)) {
            dart.throw(new message_codec.PlatformException.new({code: camera_error_code.CameraErrorCode.missingMetadata.toString(), message: "Missing camera metadata. Make sure to call `availableCameras` before creating a camera."}));
          }
          let textureId = (t12 = this[_textureCounter], this[_textureCounter] = t12 + 1, t12);
          let cameraMetadata = dart.nullCheck(this.camerasMetadata[$_get](cameraDescription));
          let cameraType = cameraMetadata.facingMode != null ? this[_cameraService].mapFacingModeToCameraType(dart.nullCheck(cameraMetadata.facingMode)) : null;
          let videoSize = this[_cameraService].mapResolutionPresetToSize((t12$ = resolutionPreset, t12$ == null ? resolution_preset.ResolutionPreset.max : t12$));
          let camera = new camera$.Camera.new({textureId: textureId, cameraService: this[_cameraService], options: new camera_options.CameraOptions.new({audio: new camera_options.AudioConstraints.new({enabled: enableAudio}), video: new camera_options.VideoConstraints.new({facingMode: cameraType != null ? camera_options.FacingModeConstraint.new(cameraType) : null, width: new camera_options.VideoSizeConstraint.new({ideal: videoSize.width[$toInt]()}), height: new camera_options.VideoSizeConstraint.new({ideal: videoSize.height[$toInt]()}), deviceId: cameraMetadata.deviceId})})});
          this.cameras[$_set](textureId, camera);
          return textureId;
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (message_codec.PlatformException.is(e)) {
            dart.throw(new camera_exception.CameraException.new(e.code, e.message));
          } else
            throw e$;
        }
      }).bind(this));
    }
    initializeCamera(cameraId, opts) {
      let imageFormatGroup = opts && 'imageFormatGroup' in opts ? opts.imageFormatGroup : C[1557] || CT.C1557;
      return async.async(dart.void, (function* initializeCamera() {
        try {
          let camera = this.getCamera(cameraId);
          yield camera.initialize();
          this[_cameraVideoErrorSubscriptions][$_set](cameraId, camera.videoElement[$onError].listen(dart.fn(_ => {
            let error = dart.nullCheck(camera.videoElement.error);
            let errorCode = camera_error_code.CameraErrorCode.fromMediaError(error);
            let errorMessage = error.message !== "" ? error.message : camera_web$._kDefaultErrorMessage;
            this.cameraEventStreamController.add(new camera_event.CameraErrorEvent.new(cameraId, "Error code: " + dart.str(errorCode) + ", error message: " + dart.str(errorMessage)));
          }, T$.EventTovoid())));
          this[_cameraVideoAbortSubscriptions][$_set](cameraId, camera.videoElement[$onAbort].listen(dart.fn(_ => {
            this.cameraEventStreamController.add(new camera_event.CameraErrorEvent.new(cameraId, "Error code: " + dart.str(camera_error_code.CameraErrorCode.abort) + ", error message: The video element's source has not fully loaded."));
          }, T$.EventTovoid())));
          yield camera.play();
          this[_cameraEndedSubscriptions][$_set](cameraId, camera.onEnded.listen(dart.fn(_ => {
            this.cameraEventStreamController.add(new camera_event.CameraClosingEvent.new(cameraId));
          }, T$.MediaStreamTrackTovoid())));
          let cameraSize = camera.getVideoSize();
          this.cameraEventStreamController.add(new camera_event.CameraInitializedEvent.new(cameraId, cameraSize.width, cameraSize.height, exposure_mode.ExposureMode.auto, false, focus_mode.FocusMode.auto, false));
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (html.DomException.is(ex)) {
            let e = ex;
            dart.throw(new message_codec.PlatformException.new({code: e[$name], message: e.message}));
          } else if (camera_web_exception.CameraWebException.is(ex)) {
            let e = ex;
            this[_addCameraErrorEvent](e);
            dart.throw(new message_codec.PlatformException.new({code: e.code.toString(), message: e.description}));
          } else
            throw e$;
        }
      }).bind(this));
    }
    onCameraInitialized(cameraId) {
      return where['Where|whereType'](camera_event.CameraEvent, camera_event.CameraInitializedEvent, this[_cameraEvents](cameraId));
    }
    onCameraResolutionChanged(cameraId) {
      return C[1558] || CT.C1558;
    }
    onCameraClosing(cameraId) {
      return where['Where|whereType'](camera_event.CameraEvent, camera_event.CameraClosingEvent, this[_cameraEvents](cameraId));
    }
    onCameraError(cameraId) {
      return where['Where|whereType'](camera_event.CameraEvent, camera_event.CameraErrorEvent, this[_cameraEvents](cameraId));
    }
    onVideoRecordedEvent(cameraId) {
      return this.getCamera(cameraId).onVideoRecordedEvent;
    }
    onDeviceOrientationChanged() {
      let t16, t15;
      let orientation = (t15 = this.window, t15 == null ? null : (t16 = t15.screen, t16 == null ? null : t16.orientation));
      if (orientation != null) {
        let initialOrientationEvent = html.Event.new("change");
        return concatenate['Concatenate|startWith'](html.Event, orientation[$onChange], initialOrientationEvent).map(device_event.DeviceOrientationChangedEvent, dart.fn(_ => {
          let deviceOrientation = this[_cameraService].mapOrientationTypeToDeviceOrientation(dart.nullCheck(orientation.type));
          return new device_event.DeviceOrientationChangedEvent.new(deviceOrientation);
        }, T$.EventToDeviceOrientationChangedEvent()));
      } else {
        return C[1559] || CT.C1559;
      }
    }
    lockCaptureOrientation(cameraId, orientation) {
      return async.async(dart.void, (function* lockCaptureOrientation() {
        let t16, t15, t15$;
        try {
          let screenOrientation = (t15 = this.window, t15 == null ? null : (t16 = t15.screen, t16 == null ? null : t16.orientation));
          let documentElement = (t15$ = this.window, t15$ == null ? null : t15$[$document].documentElement);
          if (screenOrientation != null && documentElement != null) {
            let orientationType = this[_cameraService].mapDeviceOrientationToOrientationType(orientation);
            function fullScreen() {
              return documentElement[$requestFullscreen]();
            }
            dart.fn(fullScreen, T$.VoidTodynamic());
            yield fullScreen();
            yield screenOrientation[$lock](orientationType);
          } else {
            dart.throw(new message_codec.PlatformException.new({code: camera_error_code.CameraErrorCode.orientationNotSupported.toString(), message: "Orientation is not supported in the current browser."}));
          }
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (html.DomException.is(e)) {
            dart.throw(new message_codec.PlatformException.new({code: e[$name], message: e.message}));
          } else
            throw e$;
        }
      }).bind(this));
    }
    unlockCaptureOrientation(cameraId) {
      return async.async(dart.void, (function* unlockCaptureOrientation() {
        let t17, t16, t16$;
        try {
          let orientation = (t16 = this.window, t16 == null ? null : (t17 = t16.screen, t17 == null ? null : t17.orientation));
          let documentElement = (t16$ = this.window, t16$ == null ? null : t16$[$document].documentElement);
          if (orientation != null && documentElement != null) {
            orientation.unlock();
          } else {
            dart.throw(new message_codec.PlatformException.new({code: camera_error_code.CameraErrorCode.orientationNotSupported.toString(), message: "Orientation is not supported in the current browser."}));
          }
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (html.DomException.is(e)) {
            dart.throw(new message_codec.PlatformException.new({code: e[$name], message: e.message}));
          } else
            throw e$;
        }
      }).bind(this));
    }
    takePicture(cameraId) {
      try {
        return this.getCamera(cameraId).takePicture();
      } catch (e$) {
        let ex = dart.getThrown(e$);
        if (html.DomException.is(ex)) {
          let e = ex;
          dart.throw(new message_codec.PlatformException.new({code: e[$name], message: e.message}));
        } else if (camera_web_exception.CameraWebException.is(ex)) {
          let e = ex;
          this[_addCameraErrorEvent](e);
          dart.throw(new message_codec.PlatformException.new({code: e.code.toString(), message: e.description}));
        } else
          throw e$;
      }
    }
    prepareForVideoRecording() {
      return async.async(dart.void, function* prepareForVideoRecording() {
      });
    }
    startVideoRecording(cameraId, opts) {
      let maxVideoDuration = opts && 'maxVideoDuration' in opts ? opts.maxVideoDuration : null;
      return this.startVideoCapturing(new video_capture_options.VideoCaptureOptions.new(cameraId, {maxDuration: maxVideoDuration}));
    }
    startVideoCapturing(options) {
      if (options.streamCallback != null || options.streamOptions != null) {
        dart.throw(new core.UnimplementedError.new("Streaming is not currently supported on web"));
      }
      try {
        let camera = this.getCamera(options.cameraId);
        this[_cameraVideoRecordingErrorSubscriptions][$_set](options.cameraId, camera.onVideoRecordingError.listen(dart.fn(errorEvent => {
          this.cameraEventStreamController.add(new camera_event.CameraErrorEvent.new(options.cameraId, "Error code: " + errorEvent[$type] + ", error message: " + dart.str(errorEvent.message) + "."));
        }, T$.ErrorEventTovoid())));
        return camera.startVideoRecording({maxVideoDuration: options.maxDuration});
      } catch (e$) {
        let ex = dart.getThrown(e$);
        if (html.DomException.is(ex)) {
          let e = ex;
          dart.throw(new message_codec.PlatformException.new({code: e[$name], message: e.message}));
        } else if (camera_web_exception.CameraWebException.is(ex)) {
          let e = ex;
          this[_addCameraErrorEvent](e);
          dart.throw(new message_codec.PlatformException.new({code: e.code.toString(), message: e.description}));
        } else
          throw e$;
      }
    }
    stopVideoRecording(cameraId) {
      return async.async(html$.XFile, (function* stopVideoRecording() {
        let t21;
        try {
          let videoRecording = (yield this.getCamera(cameraId).stopVideoRecording());
          yield (t21 = this[_cameraVideoRecordingErrorSubscriptions][$_get](cameraId), t21 == null ? null : t21.cancel());
          return videoRecording;
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (html.DomException.is(ex)) {
            let e = ex;
            dart.throw(new message_codec.PlatformException.new({code: e[$name], message: e.message}));
          } else if (camera_web_exception.CameraWebException.is(ex)) {
            let e = ex;
            this[_addCameraErrorEvent](e);
            dart.throw(new message_codec.PlatformException.new({code: e.code.toString(), message: e.description}));
          } else
            throw e$;
        }
      }).bind(this));
    }
    pauseVideoRecording(cameraId) {
      try {
        return this.getCamera(cameraId).pauseVideoRecording();
      } catch (e$) {
        let ex = dart.getThrown(e$);
        if (html.DomException.is(ex)) {
          let e = ex;
          dart.throw(new message_codec.PlatformException.new({code: e[$name], message: e.message}));
        } else if (camera_web_exception.CameraWebException.is(ex)) {
          let e = ex;
          this[_addCameraErrorEvent](e);
          dart.throw(new message_codec.PlatformException.new({code: e.code.toString(), message: e.description}));
        } else
          throw e$;
      }
    }
    resumeVideoRecording(cameraId) {
      try {
        return this.getCamera(cameraId).resumeVideoRecording();
      } catch (e$) {
        let ex = dart.getThrown(e$);
        if (html.DomException.is(ex)) {
          let e = ex;
          dart.throw(new message_codec.PlatformException.new({code: e[$name], message: e.message}));
        } else if (camera_web_exception.CameraWebException.is(ex)) {
          let e = ex;
          this[_addCameraErrorEvent](e);
          dart.throw(new message_codec.PlatformException.new({code: e.code.toString(), message: e.description}));
        } else
          throw e$;
      }
    }
    setFlashMode(cameraId, mode) {
      return async.async(dart.void, (function* setFlashMode() {
        try {
          this.getCamera(cameraId).setFlashMode(mode);
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (html.DomException.is(ex)) {
            let e = ex;
            dart.throw(new message_codec.PlatformException.new({code: e[$name], message: e.message}));
          } else if (camera_web_exception.CameraWebException.is(ex)) {
            let e = ex;
            this[_addCameraErrorEvent](e);
            dart.throw(new message_codec.PlatformException.new({code: e.code.toString(), message: e.description}));
          } else
            throw e$;
        }
      }).bind(this));
    }
    setExposureMode(cameraId, mode) {
      dart.throw(new core.UnimplementedError.new("setExposureMode() is not implemented."));
    }
    setExposurePoint(cameraId, point) {
      dart.throw(new core.UnimplementedError.new("setExposurePoint() is not implemented."));
    }
    getMinExposureOffset(cameraId) {
      dart.throw(new core.UnimplementedError.new("getMinExposureOffset() is not implemented."));
    }
    getMaxExposureOffset(cameraId) {
      dart.throw(new core.UnimplementedError.new("getMaxExposureOffset() is not implemented."));
    }
    getExposureOffsetStepSize(cameraId) {
      dart.throw(new core.UnimplementedError.new("getExposureOffsetStepSize() is not implemented."));
    }
    setExposureOffset(cameraId, offset) {
      dart.throw(new core.UnimplementedError.new("setExposureOffset() is not implemented."));
    }
    setFocusMode(cameraId, mode) {
      dart.throw(new core.UnimplementedError.new("setFocusMode() is not implemented."));
    }
    setFocusPoint(cameraId, point) {
      dart.throw(new core.UnimplementedError.new("setFocusPoint() is not implemented."));
    }
    getMaxZoomLevel(cameraId) {
      return async.async(core.double, (function* getMaxZoomLevel() {
        try {
          return this.getCamera(cameraId).getMaxZoomLevel();
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (html.DomException.is(ex)) {
            let e = ex;
            dart.throw(new message_codec.PlatformException.new({code: e[$name], message: e.message}));
          } else if (camera_web_exception.CameraWebException.is(ex)) {
            let e = ex;
            this[_addCameraErrorEvent](e);
            dart.throw(new message_codec.PlatformException.new({code: e.code.toString(), message: e.description}));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getMinZoomLevel(cameraId) {
      return async.async(core.double, (function* getMinZoomLevel() {
        try {
          return this.getCamera(cameraId).getMinZoomLevel();
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (html.DomException.is(ex)) {
            let e = ex;
            dart.throw(new message_codec.PlatformException.new({code: e[$name], message: e.message}));
          } else if (camera_web_exception.CameraWebException.is(ex)) {
            let e = ex;
            this[_addCameraErrorEvent](e);
            dart.throw(new message_codec.PlatformException.new({code: e.code.toString(), message: e.description}));
          } else
            throw e$;
        }
      }).bind(this));
    }
    setZoomLevel(cameraId, zoom) {
      return async.async(dart.void, (function* setZoomLevel() {
        try {
          this.getCamera(cameraId).setZoomLevel(zoom);
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (html.DomException.is(ex)) {
            let e = ex;
            dart.throw(new camera_exception.CameraException.new(e[$name], e.message));
          } else if (message_codec.PlatformException.is(ex)) {
            let e = ex;
            dart.throw(new camera_exception.CameraException.new(e.code, e.message));
          } else if (camera_web_exception.CameraWebException.is(ex)) {
            let e = ex;
            this[_addCameraErrorEvent](e);
            dart.throw(new camera_exception.CameraException.new(e.code.toString(), e.description));
          } else
            throw e$;
        }
      }).bind(this));
    }
    pausePreview(cameraId) {
      return async.async(dart.void, (function* pausePreview() {
        try {
          this.getCamera(cameraId).pause();
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (html.DomException.is(e)) {
            dart.throw(new message_codec.PlatformException.new({code: e[$name], message: e.message}));
          } else
            throw e$;
        }
      }).bind(this));
    }
    resumePreview(cameraId) {
      return async.async(dart.void, (function* resumePreview() {
        try {
          yield this.getCamera(cameraId).play();
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (html.DomException.is(ex)) {
            let e = ex;
            dart.throw(new message_codec.PlatformException.new({code: e[$name], message: e.message}));
          } else if (camera_web_exception.CameraWebException.is(ex)) {
            let e = ex;
            this[_addCameraErrorEvent](e);
            dart.throw(new message_codec.PlatformException.new({code: e.code.toString(), message: e.description}));
          } else
            throw e$;
        }
      }).bind(this));
    }
    buildPreview(cameraId) {
      return new platform_view.HtmlElementView.new({viewType: this.getCamera(cameraId).getViewType()});
    }
    dispose(cameraId) {
      return async.async(dart.void, (function* dispose() {
        let t38, t38$, t38$0, t38$1;
        try {
          yield this.getCamera(cameraId).dispose();
          yield (t38 = this[_cameraVideoErrorSubscriptions][$_get](cameraId), t38 == null ? null : t38.cancel());
          yield (t38$ = this[_cameraVideoAbortSubscriptions][$_get](cameraId), t38$ == null ? null : t38$.cancel());
          yield (t38$0 = this[_cameraEndedSubscriptions][$_get](cameraId), t38$0 == null ? null : t38$0.cancel());
          yield (t38$1 = this[_cameraVideoRecordingErrorSubscriptions][$_get](cameraId), t38$1 == null ? null : t38$1.cancel());
          this.cameras[$remove](cameraId);
          this[_cameraVideoErrorSubscriptions][$remove](cameraId);
          this[_cameraVideoAbortSubscriptions][$remove](cameraId);
          this[_cameraEndedSubscriptions][$remove](cameraId);
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (html.DomException.is(e)) {
            dart.throw(new message_codec.PlatformException.new({code: e[$name], message: e.message}));
          } else
            throw e$;
        }
      }).bind(this));
    }
    [_getVideoStreamForDevice](deviceId) {
      let cameraOptions = new camera_options.CameraOptions.new({video: new camera_options.VideoConstraints.new({deviceId: deviceId})});
      return this[_cameraService].getMediaStreamForOptions(cameraOptions);
    }
    getCamera(cameraId) {
      let camera = this.cameras[$_get](cameraId);
      if (camera == null) {
        dart.throw(new message_codec.PlatformException.new({code: camera_error_code.CameraErrorCode.notFound.toString(), message: "No camera found for the given camera id " + dart.str(cameraId) + "."}));
      }
      return camera;
    }
    [_addCameraErrorEvent](exception) {
      this.cameraEventStreamController.add(new camera_event.CameraErrorEvent.new(exception.cameraId, "Error code: " + dart.str(exception.code) + ", error message: " + exception.description));
    }
  };
  (camera_web$.CameraPlugin.new = function(opts) {
    let cameraService = opts && 'cameraService' in opts ? opts.cameraService : null;
    this[cameras] = new (T$.IdentityMapOfint$Camera()).new();
    this[_textureCounter] = 1;
    this[camerasMetadata] = new (T$.LinkedMapOfCameraDescription$CameraMetadata()).new();
    this[cameraEventStreamController] = T$.StreamControllerOfCameraEvent().broadcast();
    this[_cameraVideoErrorSubscriptions] = new (T$.IdentityMapOfint$StreamSubscriptionOfEvent()).new();
    this[_cameraVideoAbortSubscriptions] = new (T$.IdentityMapOfint$StreamSubscriptionOfEvent()).new();
    this[_cameraEndedSubscriptions] = new (T$.IdentityMapOfint$StreamSubscriptionOfMediaStreamTrack()).new();
    this[_cameraVideoRecordingErrorSubscriptions] = new (T$.IdentityMapOfint$StreamSubscriptionOfErrorEvent()).new();
    this[window] = html.window;
    this[_cameraService] = cameraService;
    camera_web$.CameraPlugin.__proto__.new.call(this);
    ;
  }).prototype = camera_web$.CameraPlugin.prototype;
  dart.addTypeTests(camera_web$.CameraPlugin);
  dart.addTypeCaches(camera_web$.CameraPlugin);
  dart.setMethodSignature(camera_web$.CameraPlugin, () => ({
    __proto__: dart.getMethods(camera_web$.CameraPlugin.__proto__),
    [_cameraEvents]: dart.fnType(async.Stream$(camera_event.CameraEvent), [core.int]),
    [_getVideoStreamForDevice]: dart.fnType(async.Future$(html.MediaStream), [core.String]),
    getCamera: dart.fnType(camera$.Camera, [core.int]),
    [_addCameraErrorEvent]: dart.fnType(dart.void, [camera_web_exception.CameraWebException])
  }));
  dart.setStaticMethodSignature(camera_web$.CameraPlugin, () => ['registerWith']);
  dart.setLibraryUri(camera_web$.CameraPlugin, I[26]);
  dart.setFieldSignature(camera_web$.CameraPlugin, () => ({
    __proto__: dart.getFields(camera_web$.CameraPlugin.__proto__),
    [_cameraService]: dart.finalFieldType(camera_service.CameraService),
    cameras: dart.finalFieldType(core.Map$(core.int, camera$.Camera)),
    [_textureCounter]: dart.fieldType(core.int),
    camerasMetadata: dart.finalFieldType(core.Map$(camera_description.CameraDescription, camera_metadata.CameraMetadata)),
    cameraEventStreamController: dart.finalFieldType(async.StreamController$(camera_event.CameraEvent)),
    [_cameraVideoErrorSubscriptions]: dart.finalFieldType(core.Map$(core.int, async.StreamSubscription$(html.Event))),
    [_cameraVideoAbortSubscriptions]: dart.finalFieldType(core.Map$(core.int, async.StreamSubscription$(html.Event))),
    [_cameraEndedSubscriptions]: dart.finalFieldType(core.Map$(core.int, async.StreamSubscription$(html.MediaStreamTrack))),
    [_cameraVideoRecordingErrorSubscriptions]: dart.finalFieldType(core.Map$(core.int, async.StreamSubscription$(html.ErrorEvent))),
    window: dart.fieldType(dart.nullable(html.Window))
  }));
  dart.defineLazy(camera_web$, {
    /*camera_web$._kDefaultErrorMessage*/get _kDefaultErrorMessage() {
      return "No further diagnostic information can be determined or provided.";
    }
  }, false);
  const StatelessElement_SingleChildWidgetElementMixin$36$ = class StatelessElement_SingleChildWidgetElementMixin extends framework.StatelessElement {};
  (StatelessElement_SingleChildWidgetElementMixin$36$.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatelessElement_SingleChildWidgetElementMixin$36$.__proto__.new.call(this, widget);
  }).prototype = StatelessElement_SingleChildWidgetElementMixin$36$.prototype;
  dart.applyMixin(StatelessElement_SingleChildWidgetElementMixin$36$, nested.SingleChildWidgetElementMixin);
  nested._NestedElement = class _NestedElement extends StatelessElement_SingleChildWidgetElementMixin$36$ {
    static ['_#new#tearOff'](widget) {
      return new nested._NestedElement.new(widget);
    }
    get widget() {
      return nested.Nested.as(super.widget);
    }
    build() {
      let t39, t39$, t39$0;
      let nestedHook = null;
      let nextNode = (t39$ = (t39 = this[_parent], t39 == null ? null : t39.injectedChild), t39$ == null ? this.widget[_child$] : t39$);
      for (let child of this.widget[_children][$reversed]) {
        nextNode = nestedHook = new nested._NestedHook.new({owner: this, wrappedWidget: child, injectedChild: nextNode});
      }
      if (nestedHook != null) {
        for (let node of this.nodes) {
          t39$0 = node;
          (() => {
            t39$0.wrappedChild = dart.nullCheck(nestedHook).wrappedWidget;
            t39$0.injectedChild = nestedHook.injectedChild;
            return t39$0;
          })();
          let next = nestedHook.injectedChild;
          if (nested._NestedHook.is(next)) {
            nestedHook = next;
          } else {
            break;
          }
        }
      }
      return dart.nullCheck(nextNode);
    }
  };
  (nested._NestedElement.new = function(widget) {
    this.nodes = T$.LinkedHashSetOf_NestedHookElement().new();
    nested._NestedElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._NestedElement.prototype;
  dart.addTypeTests(nested._NestedElement);
  dart.addTypeCaches(nested._NestedElement);
  dart.setGetterSignature(nested._NestedElement, () => ({
    __proto__: dart.getGetters(nested._NestedElement.__proto__),
    widget: nested.Nested
  }));
  dart.setLibraryUri(nested._NestedElement, I[4]);
  dart.setFieldSignature(nested._NestedElement, () => ({
    __proto__: dart.getFields(nested._NestedElement.__proto__),
    nodes: dart.finalFieldType(core.Set$(nested._NestedHookElement))
  }));
  nested._NestedHook = class _NestedHook extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let injectedChild = opts && 'injectedChild' in opts ? opts.injectedChild : null;
      let wrappedWidget = opts && 'wrappedWidget' in opts ? opts.wrappedWidget : null;
      let owner = opts && 'owner' in opts ? opts.owner : null;
      return new nested._NestedHook.new({injectedChild: injectedChild, wrappedWidget: wrappedWidget, owner: owner});
    }
    createElement() {
      return new nested._NestedHookElement.new(this);
    }
    build(context) {
      return dart.throw(new core.StateError.new("handled internally"));
    }
  };
  (nested._NestedHook.new = function(opts) {
    let injectedChild = opts && 'injectedChild' in opts ? opts.injectedChild : null;
    let wrappedWidget = opts && 'wrappedWidget' in opts ? opts.wrappedWidget : null;
    let owner = opts && 'owner' in opts ? opts.owner : null;
    this.injectedChild = injectedChild;
    this.wrappedWidget = wrappedWidget;
    this.owner = owner;
    nested._NestedHook.__proto__.new.call(this);
    ;
  }).prototype = nested._NestedHook.prototype;
  dart.addTypeTests(nested._NestedHook);
  dart.addTypeCaches(nested._NestedHook);
  dart.setMethodSignature(nested._NestedHook, () => ({
    __proto__: dart.getMethods(nested._NestedHook.__proto__),
    createElement: dart.fnType(nested._NestedHookElement, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(nested._NestedHook, I[4]);
  dart.setFieldSignature(nested._NestedHook, () => ({
    __proto__: dart.getFields(nested._NestedHook.__proto__),
    wrappedWidget: dart.finalFieldType(nested.SingleChildWidget),
    injectedChild: dart.finalFieldType(dart.nullable(framework.Widget)),
    owner: dart.finalFieldType(nested._NestedElement)
  }));
  var _injectedChild = dart.privateName(nested, "_injectedChild");
  var _wrappedChild = dart.privateName(nested, "_wrappedChild");
  nested._NestedHookElement = class _NestedHookElement extends framework.StatelessElement {
    static ['_#new#tearOff'](widget) {
      return new nested._NestedHookElement.new(widget);
    }
    get widget() {
      return nested._NestedHook.as(super.widget);
    }
    get injectedChild() {
      return this[_injectedChild];
    }
    set injectedChild(value) {
      let previous = this[_injectedChild];
      if (nested._NestedHook.is(value) && nested._NestedHook.is(previous) && framework.Widget.canUpdate(value.wrappedWidget, previous.wrappedWidget)) {
        return;
      }
      if (!dart.equals(previous, value)) {
        this[_injectedChild] = value;
        this.visitChildren(dart.fn(e => e.markNeedsBuild(), T$.ElementTovoid()));
      }
    }
    get wrappedChild() {
      return this[_wrappedChild];
    }
    set wrappedChild(value) {
      if (!dart.equals(this[_wrappedChild], value)) {
        this[_wrappedChild] = value;
        this.markNeedsBuild();
      }
    }
    mount(parent, newSlot) {
      this.widget.owner.nodes.add(this);
      this[_wrappedChild] = this.widget.wrappedWidget;
      this[_injectedChild] = this.widget.injectedChild;
      super.mount(parent, newSlot);
    }
    unmount() {
      this.widget.owner.nodes.remove(this);
      super.unmount();
    }
    build() {
      return dart.nullCheck(this.wrappedChild);
    }
  };
  (nested._NestedHookElement.new = function(widget) {
    this[_injectedChild] = null;
    this[_wrappedChild] = null;
    nested._NestedHookElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._NestedHookElement.prototype;
  dart.addTypeTests(nested._NestedHookElement);
  dart.addTypeCaches(nested._NestedHookElement);
  dart.setMethodSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getMethods(nested._NestedHookElement.__proto__),
    mount: dart.fnType(dart.void, [dart.nullable(framework.Element), dart.dynamic])
  }));
  dart.setGetterSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getGetters(nested._NestedHookElement.__proto__),
    widget: nested._NestedHook,
    injectedChild: dart.nullable(framework.Widget),
    wrappedChild: dart.nullable(nested.SingleChildWidget)
  }));
  dart.setSetterSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getSetters(nested._NestedHookElement.__proto__),
    injectedChild: dart.nullable(framework.Widget),
    wrappedChild: dart.nullable(nested.SingleChildWidget)
  }));
  dart.setLibraryUri(nested._NestedHookElement, I[4]);
  dart.setFieldSignature(nested._NestedHookElement, () => ({
    __proto__: dart.getFields(nested._NestedHookElement.__proto__),
    [_injectedChild]: dart.fieldType(dart.nullable(framework.Widget)),
    [_wrappedChild]: dart.fieldType(dart.nullable(nested.SingleChildWidget))
  }));
  nested.SingleChildWidget = class SingleChildWidget extends core.Object {};
  (nested.SingleChildWidget.new = function() {
    ;
  }).prototype = nested.SingleChildWidget.prototype;
  dart.addTypeTests(nested.SingleChildWidget);
  dart.addTypeCaches(nested.SingleChildWidget);
  nested.SingleChildWidget[dart.implements] = () => [framework.Widget];
  dart.setLibraryUri(nested.SingleChildWidget, I[4]);
  const StatefulElement_SingleChildWidgetElementMixin$36 = class StatefulElement_SingleChildWidgetElementMixin extends framework.StatefulElement {};
  (StatefulElement_SingleChildWidgetElementMixin$36.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatefulElement_SingleChildWidgetElementMixin$36.__proto__.new.call(this, widget);
  }).prototype = StatefulElement_SingleChildWidgetElementMixin$36.prototype;
  dart.applyMixin(StatefulElement_SingleChildWidgetElementMixin$36, nested.SingleChildWidgetElementMixin);
  nested.SingleChildStatefulElement = class SingleChildStatefulElement extends StatefulElement_SingleChildWidgetElementMixin$36 {
    static ['_#new#tearOff'](widget) {
      return new nested.SingleChildStatefulElement.new(widget);
    }
    get widget() {
      return nested.SingleChildStatefulWidget.as(super.widget);
    }
    get state() {
      return T$.SingleChildStateOfSingleChildStatefulWidget().as(super.state);
    }
    build() {
      if (this[_parent] != null) {
        return this.state.buildWithChild(this, dart.nullCheck(dart.nullCheck(this[_parent]).injectedChild));
      }
      return super.build();
    }
  };
  (nested.SingleChildStatefulElement.new = function(widget) {
    nested.SingleChildStatefulElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested.SingleChildStatefulElement.prototype;
  dart.addTypeTests(nested.SingleChildStatefulElement);
  dart.addTypeCaches(nested.SingleChildStatefulElement);
  dart.setGetterSignature(nested.SingleChildStatefulElement, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatefulElement.__proto__),
    widget: nested.SingleChildStatefulWidget,
    state: nested.SingleChildState$(nested.SingleChildStatefulWidget)
  }));
  dart.setLibraryUri(nested.SingleChildStatefulElement, I[4]);
  var builder$7 = dart.privateName(nested, "SingleChildBuilder.builder");
  nested.SingleChildBuilder = class SingleChildBuilder extends nested.SingleChildStatelessWidget {
    get builder() {
      return this[builder$7];
    }
    set builder(value) {
      super.builder = value;
    }
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      let builder = opts && 'builder' in opts ? opts.builder : null;
      let child = opts && 'child' in opts ? opts.child : null;
      return new nested.SingleChildBuilder.new({key: key, builder: builder, child: child});
    }
    buildWithChild(context, child) {
      let t40, t39;
      t39 = context;
      t40 = child;
      return this.builder(t39, t40);
    }
  };
  (nested.SingleChildBuilder.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    let builder = opts && 'builder' in opts ? opts.builder : null;
    let child = opts && 'child' in opts ? opts.child : null;
    this[builder$7] = builder;
    nested.SingleChildBuilder.__proto__.new.call(this, {key: key, child: child});
    ;
  }).prototype = nested.SingleChildBuilder.prototype;
  dart.addTypeTests(nested.SingleChildBuilder);
  dart.addTypeCaches(nested.SingleChildBuilder);
  dart.setMethodSignature(nested.SingleChildBuilder, () => ({
    __proto__: dart.getMethods(nested.SingleChildBuilder.__proto__),
    buildWithChild: dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)])
  }));
  dart.setLibraryUri(nested.SingleChildBuilder, I[4]);
  dart.setFieldSignature(nested.SingleChildBuilder, () => ({
    __proto__: dart.getFields(nested.SingleChildBuilder.__proto__),
    builder: dart.finalFieldType(dart.fnType(framework.Widget, [framework.BuildContext, dart.nullable(framework.Widget)]))
  }));
  nested.SingleChildStatelessWidgetMixin = class SingleChildStatelessWidgetMixin extends core.Object {};
  nested.SingleChildStatelessWidgetMixin[dart.mixinOn] = Object => class SingleChildStatelessWidgetMixin extends Object {
    get [_child$]() {
      return this.child;
    }
    createElement() {
      return new nested.SingleChildStatelessElement.new(this);
    }
    build(context) {
      return this.buildWithChild(context, this.child);
    }
  };
  (nested.SingleChildStatelessWidgetMixin[dart.mixinNew] = function() {
  }).prototype = nested.SingleChildStatelessWidgetMixin.prototype;
  dart.addTypeTests(nested.SingleChildStatelessWidgetMixin);
  dart.addTypeCaches(nested.SingleChildStatelessWidgetMixin);
  nested.SingleChildStatelessWidgetMixin[dart.implements] = () => [framework.StatelessWidget, nested.SingleChildStatelessWidget, core.Object];
  dart.setMethodSignature(nested.SingleChildStatelessWidgetMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatelessWidgetMixin.__proto__),
    createElement: dart.fnType(nested.SingleChildStatelessElement, []),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setGetterSignature(nested.SingleChildStatelessWidgetMixin, () => ({
    __proto__: dart.getGetters(nested.SingleChildStatelessWidgetMixin.__proto__),
    [_child$]: dart.nullable(framework.Widget)
  }));
  dart.setLibraryUri(nested.SingleChildStatelessWidgetMixin, I[4]);
  nested.SingleChildStatefulWidgetMixin = class SingleChildStatefulWidgetMixin extends framework.StatefulWidget {};
  nested.SingleChildStatefulWidgetMixin[dart.mixinOn] = StatefulWidget => class SingleChildStatefulWidgetMixin extends StatefulWidget {
    createElement() {
      return new nested._SingleChildStatefulMixinElement.new(this);
    }
  };
  dart.addTypeTests(nested.SingleChildStatefulWidgetMixin);
  dart.addTypeCaches(nested.SingleChildStatefulWidgetMixin);
  nested.SingleChildStatefulWidgetMixin[dart.implements] = () => [nested.SingleChildWidget, framework.StatefulWidget];
  dart.setMethodSignature(nested.SingleChildStatefulWidgetMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildStatefulWidgetMixin.__proto__),
    createElement: dart.fnType(nested._SingleChildStatefulMixinElement, [])
  }));
  dart.setLibraryUri(nested.SingleChildStatefulWidgetMixin, I[4]);
  const _is_SingleChildStateMixin_default = Symbol('_is_SingleChildStateMixin_default');
  nested.SingleChildStateMixin$ = dart.generic(T => {
    class SingleChildStateMixin extends framework.State$(T) {}
    SingleChildStateMixin[dart.mixinOn] = State => class SingleChildStateMixin extends State {
      build(context) {
        return this.buildWithChild(context, dart.nullCheck(nested.SingleChildStatefulWidgetMixin.as(this.widget).child));
      }
    };
    dart.addTypeTests(SingleChildStateMixin);
    SingleChildStateMixin.prototype[_is_SingleChildStateMixin_default] = true;
    dart.addTypeCaches(SingleChildStateMixin);
    SingleChildStateMixin[dart.implements] = () => [framework.State$(T)];
    dart.setMethodSignature(SingleChildStateMixin, () => ({
      __proto__: dart.getMethods(SingleChildStateMixin.__proto__),
      build: dart.fnType(framework.Widget, [framework.BuildContext])
    }));
    dart.setLibraryUri(SingleChildStateMixin, I[4]);
    return SingleChildStateMixin;
  });
  nested.SingleChildStateMixin = nested.SingleChildStateMixin$();
  dart.addTypeTests(nested.SingleChildStateMixin, _is_SingleChildStateMixin_default);
  const StatefulElement_SingleChildWidgetElementMixin$36$ = class StatefulElement_SingleChildWidgetElementMixin extends framework.StatefulElement {};
  (StatefulElement_SingleChildWidgetElementMixin$36$.new = function(widget) {
    nested.SingleChildWidgetElementMixin[dart.mixinNew].call(this);
    StatefulElement_SingleChildWidgetElementMixin$36$.__proto__.new.call(this, widget);
  }).prototype = StatefulElement_SingleChildWidgetElementMixin$36$.prototype;
  dart.applyMixin(StatefulElement_SingleChildWidgetElementMixin$36$, nested.SingleChildWidgetElementMixin);
  nested._SingleChildStatefulMixinElement = class _SingleChildStatefulMixinElement extends StatefulElement_SingleChildWidgetElementMixin$36$ {
    static ['_#new#tearOff'](widget) {
      return new nested._SingleChildStatefulMixinElement.new(widget);
    }
    get widget() {
      return nested.SingleChildStatefulWidgetMixin.as(super.widget);
    }
    get state() {
      return T$.SingleChildStateMixinOfStatefulWidget().as(super.state);
    }
    build() {
      if (this[_parent] != null) {
        return this.state.buildWithChild(this, dart.nullCheck(dart.nullCheck(this[_parent]).injectedChild));
      }
      return super.build();
    }
  };
  (nested._SingleChildStatefulMixinElement.new = function(widget) {
    nested._SingleChildStatefulMixinElement.__proto__.new.call(this, widget);
    ;
  }).prototype = nested._SingleChildStatefulMixinElement.prototype;
  dart.addTypeTests(nested._SingleChildStatefulMixinElement);
  dart.addTypeCaches(nested._SingleChildStatefulMixinElement);
  dart.setGetterSignature(nested._SingleChildStatefulMixinElement, () => ({
    __proto__: dart.getGetters(nested._SingleChildStatefulMixinElement.__proto__),
    widget: nested.SingleChildStatefulWidgetMixin,
    state: nested.SingleChildStateMixin$(framework.StatefulWidget)
  }));
  dart.setLibraryUri(nested._SingleChildStatefulMixinElement, I[4]);
  nested.SingleChildInheritedElementMixin = class SingleChildInheritedElementMixin extends core.Object {};
  nested.SingleChildInheritedElementMixin[dart.mixinOn] = _SingleChildInheritedElementMixin$36InheritedElement$36SingleChildWidgetElementMixin => class SingleChildInheritedElementMixin extends _SingleChildInheritedElementMixin$36InheritedElement$36SingleChildWidgetElementMixin {
    build() {
      if (this[_parent] != null) {
        return dart.nullCheck(dart.nullCheck(this[_parent]).injectedChild);
      }
      return super.build();
    }
  };
  dart.addTypeTests(nested.SingleChildInheritedElementMixin);
  dart.addTypeCaches(nested.SingleChildInheritedElementMixin);
  nested.SingleChildInheritedElementMixin[dart.implements] = () => [nested.SingleChildWidgetElementMixin, framework.InheritedElement];
  dart.setMethodSignature(nested.SingleChildInheritedElementMixin, () => ({
    __proto__: dart.getMethods(nested.SingleChildInheritedElementMixin.__proto__),
    build: dart.fnType(framework.Widget, [])
  }));
  dart.setLibraryUri(nested.SingleChildInheritedElementMixin, I[4]);
  transaction.TransactionPage = class TransactionPage extends framework.StatelessWidget {
    build(context) {
      let screenHeight = media_query.MediaQuery.of(context).size.height;
      return new scaffold.Scaffold.new({appBar: new app_bar.AppBar.new({backgroundColor: new ui.Color.fromRGBO(238, 236, 246, 1), elevation: 0, leading: new icon_button.IconButton.new({icon: new icon$.Icon.new(flutter_boxicons.Boxicons.bx_arrow_back, {color: colors.Colors.black}), onPressed: dart.fn(() => {
              navigator.Navigator.pop(T$.ObjectN(), context);
            }, T$.VoidTovoid())}), title: new text$.Text.new("Transaction Summary", {style: new text_style.TextStyle.new({color: colors.Colors.black, fontSize: 19})}), centerTitle: true}), body: new container.Container.new({width: 1 / 0, height: 1 / 0, color: new ui.Color.fromRGBO(238, 236, 246, 1), child: new single_child_scroll_view.SingleChildScrollView.new({child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new basic.SizedBox.new({height: screenHeight * 0.02}), new transaction.TotalAmountContainer.new(), new basic.SizedBox.new({height: 20}), new transaction.TransactFromSection.new(), new basic.SizedBox.new({height: 20}), new action_button.ActionButton.new({label: "Transact", onTap: dart.fn(() => {
                    core.print("Top Up clicked");
                  }, T$.VoidTovoid()), isPrimary: true}), new basic.SizedBox.new({height: 20})])})})})});
    }
    static ['_#new#tearOff']() {
      return new transaction.TransactionPage.new();
    }
  };
  (transaction.TransactionPage.new = function() {
    transaction.TransactionPage.__proto__.new.call(this);
    ;
  }).prototype = transaction.TransactionPage.prototype;
  dart.addTypeTests(transaction.TransactionPage);
  dart.addTypeCaches(transaction.TransactionPage);
  dart.setMethodSignature(transaction.TransactionPage, () => ({
    __proto__: dart.getMethods(transaction.TransactionPage.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(transaction.TransactionPage, I[27]);
  transaction.TotalAmountContainer = class TotalAmountContainer extends framework.StatelessWidget {
    build(context) {
      return new container.Container.new({width: 310, padding: new edge_insets.EdgeInsets.all(15), decoration: new box_decoration.BoxDecoration.new({borderRadius: new border_radius.BorderRadius.circular(10), border: box_border.Border.all({color: new ui.Color.fromRGBO(86, 63, 232, 1), width: 1}), color: new ui.Color.fromRGBO(236, 234, 245, 1)}), child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new text$.Text.new("Total Amount", {style: new text_style.TextStyle.new({fontSize: 16, color: colors.Colors.black})}), new text$.Text.new(" 0.0001 ETH", {style: new text_style.TextStyle.new({fontSize: 40, fontWeight: ui.FontWeight.bold, color: colors.Colors.black})}), new container.Container.new({margin: new edge_insets.EdgeInsets.only({top: 10}), child: new basic.Column.new({crossAxisAlignment: flex.CrossAxisAlignment.start, children: T$.JSArrayOfWidget().of([new text$.Text.new("Transfer to : JustRice", {style: new text_style.TextStyle.new({fontSize: 14, color: colors.Colors.black})}), new basic.SizedBox.new({height: 10}), new text$.Text.new("Name : FreedWasCooking", {style: new text_style.TextStyle.new({fontSize: 14, fontWeight: ui.FontWeight.bold, color: colors.Colors.black})}), new basic.SizedBox.new({height: 10}), new text$.Text.new("Public ID : 0912334285", {style: new text_style.TextStyle.new({fontSize: 14, color: colors.Colors.black})})])})})])})});
    }
    static ['_#new#tearOff']() {
      return new transaction.TotalAmountContainer.new();
    }
  };
  (transaction.TotalAmountContainer.new = function() {
    transaction.TotalAmountContainer.__proto__.new.call(this);
    ;
  }).prototype = transaction.TotalAmountContainer.prototype;
  dart.addTypeTests(transaction.TotalAmountContainer);
  dart.addTypeCaches(transaction.TotalAmountContainer);
  dart.setMethodSignature(transaction.TotalAmountContainer, () => ({
    __proto__: dart.getMethods(transaction.TotalAmountContainer.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(transaction.TotalAmountContainer, I[27]);
  transaction.TransactFromSection = class TransactFromSection extends framework.StatelessWidget {
    build(context) {
      return new basic.Column.new({children: T$.JSArrayOfWidget().of([new basic.Row.new({children: T$.JSArrayOfWidget().of([new basic.SizedBox.new({width: 15}), new text$.Text.new("Transact from", {style: new text_style.TextStyle.new({fontSize: 14, color: colors.Colors.black})}), new spacer.Spacer.new()])}), new basic.SizedBox.new({height: 10}), new container.Container.new({width: 310, padding: new edge_insets.EdgeInsets.all(15), decoration: new box_decoration.BoxDecoration.new({borderRadius: new border_radius.BorderRadius.circular(10), border: box_border.Border.all({color: new ui.Color.fromRGBO(86, 63, 232, 1), width: 1}), color: new ui.Color.fromRGBO(236, 234, 245, 1)}), child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, children: T$.JSArrayOfWidget().of([new icon$.Icon.new(flutter_boxicons.Boxicons.bx_wallet, {size: 40, color: colors.Colors.black}), new basic.SizedBox.new({height: 10}), new text$.Text.new("Metamask (****)", {style: new text_style.TextStyle.new({fontSize: 16, color: colors.Colors.black})})])})})])});
    }
    static ['_#new#tearOff']() {
      return new transaction.TransactFromSection.new();
    }
  };
  (transaction.TransactFromSection.new = function() {
    transaction.TransactFromSection.__proto__.new.call(this);
    ;
  }).prototype = transaction.TransactFromSection.prototype;
  dart.addTypeTests(transaction.TransactFromSection);
  dart.addTypeCaches(transaction.TransactFromSection);
  dart.setMethodSignature(transaction.TransactFromSection, () => ({
    __proto__: dart.getMethods(transaction.TransactFromSection.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(transaction.TransactFromSection, I[27]);
  under_cons.UnderCons = class UnderCons extends framework.StatelessWidget {
    static ['_#new#tearOff'](opts) {
      let key = opts && 'key' in opts ? opts.key : null;
      return new under_cons.UnderCons.new({key: key});
    }
    build(context) {
      return new gesture_detector.GestureDetector.new({onTap: dart.fn(() => {
          navigator.Navigator.push(dart.dynamic, context, new page$.MaterialPageRoute.new({builder: dart.fn(context => new feed$.FeedPage.new(), T$.BuildContextToFeedPage())}));
        }, T$.VoidTovoid()), child: new container.Container.new({decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white}), child: new basic.Column.new({mainAxisAlignment: flex.MainAxisAlignment.center, crossAxisAlignment: flex.CrossAxisAlignment.center, children: T$.JSArrayOfWidget().of([new text$.Text.new("Under", {style: new text_style.TextStyle.new({color: new ui.Color.new(4280949390), decoration: ui.TextDecoration.none})}), new icon$.Icon.new(flutter_boxicons.Boxicons.bx_cloud_rain, {size: 140, color: new ui.Color.fromRGBO(86, 63, 232, 1)}), new text$.Text.new("Construction", {style: new text_style.TextStyle.new({color: new ui.Color.new(4280949390), decoration: ui.TextDecoration.none})})])})})});
    }
  };
  (under_cons.UnderCons.new = function(opts) {
    let key = opts && 'key' in opts ? opts.key : null;
    under_cons.UnderCons.__proto__.new.call(this, {key: key});
    ;
  }).prototype = under_cons.UnderCons.prototype;
  dart.addTypeTests(under_cons.UnderCons);
  dart.addTypeCaches(under_cons.UnderCons);
  dart.setMethodSignature(under_cons.UnderCons, () => ({
    __proto__: dart.getMethods(under_cons.UnderCons.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(under_cons.UnderCons, I[28]);
  courses.CoursePage = class CoursePage extends framework.StatefulWidget {
    createState() {
      return new courses._CoursePageState.new();
    }
    static ['_#new#tearOff']() {
      return new courses.CoursePage.new();
    }
  };
  (courses.CoursePage.new = function() {
    courses.CoursePage.__proto__.new.call(this);
    ;
  }).prototype = courses.CoursePage.prototype;
  dart.addTypeTests(courses.CoursePage);
  dart.addTypeCaches(courses.CoursePage);
  dart.setMethodSignature(courses.CoursePage, () => ({
    __proto__: dart.getMethods(courses.CoursePage.__proto__),
    createState: dart.fnType(courses._CoursePageState, [])
  }));
  dart.setLibraryUri(courses.CoursePage, I[29]);
  var _topNav = dart.privateName(courses, "_topNav");
  var _courseCardContainer = dart.privateName(courses, "_courseCardContainer");
  var _buildVersion = dart.privateName(courses, "_buildVersion");
  var _CourseCard = dart.privateName(courses, "_CourseCard");
  courses._CoursePageState = class _CoursePageState extends framework.State$(courses.CoursePage) {
    build(context) {
      let screenSize = media_query.MediaQuery.of(context).size;
      let isLargeScreen = screenSize.width > 600;
      return new scaffold.Scaffold.new({body: new container.Container.new({padding: new edge_insets.EdgeInsets.all(8), child: new basic.Column.new({children: T$.JSArrayOfWidget().of([this[_topNav](isLargeScreen), this[_courseCardContainer](), this[_buildVersion](), new botnav.BottomNav.new()])})})});
    }
    [_buildVersion]() {
      return new basic.Padding.new({padding: C[1560] || CT.C1560, child: new text$.Text.new("v0.1 (Beta)", {textAlign: ui.TextAlign.center, style: new text_style.TextStyle.new({color: new ui.Color.fromRGBO(51, 51, 51, 1), fontFamily: "Inter", fontSize: 12, height: 1.54})})});
    }
    [_courseCardContainer]() {
      return new basic.Expanded.new({child: new single_child_scroll_view.SingleChildScrollView.new({child: new basic.Column.new({children: T$.JSArrayOfWidget().of([new basic.SizedBox.new({height: 20}), this[_CourseCard]("Discreet Math", 14, new ui.Color.fromRGBO(39, 15, 191, 1), flutter_boxicons.Boxicons.bx_calculator), this[_CourseCard]("Discreet Math", 14, new ui.Color.fromRGBO(39, 15, 191, 1), flutter_boxicons.Boxicons.bx_calculator), this[_CourseCard]("Discreet Math", 14, new ui.Color.fromRGBO(39, 15, 191, 1), flutter_boxicons.Boxicons.bx_calculator), this[_CourseCard]("Discreet Math", 14, new ui.Color.fromRGBO(39, 15, 191, 1), flutter_boxicons.Boxicons.bx_calculator), this[_CourseCard]("Discreet Math", 14, new ui.Color.fromRGBO(39, 15, 191, 1), flutter_boxicons.Boxicons.bx_calculator), this[_CourseCard]("Discreet Math", 14, new ui.Color.fromRGBO(39, 15, 191, 1), flutter_boxicons.Boxicons.bx_calculator), this[_CourseCard]("Discreet Math", 14, new ui.Color.fromRGBO(39, 15, 191, 1), flutter_boxicons.Boxicons.bx_calculator)])})})});
    }
    [_topNav](isLargeScreen) {
      return new container.Container.new({padding: new edge_insets.EdgeInsets.all(isLargeScreen ? 24 : 16), decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.white, borderRadius: new border_radius.BorderRadius.only({bottomLeft: new ui.Radius.circular(12), bottomRight: new ui.Radius.circular(12)})}), child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T$.JSArrayOfWidget().of([new text$.Text.new("Courses", {style: new text_style.TextStyle.new({color: new ui.Color.fromRGBO(39, 15, 191, 1), fontFamily: "Inter", fontSize: isLargeScreen ? 28 : 20, height: 1.2})}), new icon$.Icon.new(flutter_boxicons.Boxicons.bx_book_bookmark, {color: new ui.Color.fromRGBO(39, 15, 191, 1)})])})});
    }
    [_CourseCard](title, count, color, icon) {
      return new basic.Column.new({children: T$.JSArrayOfWidget().of([this.buildCourseCard(title, count, color, icon), new basic.SizedBox.new({height: 15})])});
    }
    buildCourseCard(title, count, color, icon) {
      return new container.Container.new({decoration: new box_decoration.BoxDecoration.new({borderRadius: new border_radius.BorderRadius.circular(12), color: new ui.Color.fromRGBO(184, 172, 255, 1)}), padding: new edge_insets.EdgeInsets.symmetric({horizontal: 20, vertical: 10}), child: new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.spaceBetween, children: T$.JSArrayOfWidget().of([new container.Container.new({width: 24, height: 24, child: new basic.Stack.new({children: T$.JSArrayOfWidget().of([new basic.Positioned.new({top: 1, left: 1, child: new icon$.Icon.new(icon, {size: 20, color: color})})])})}), new basic.SizedBox.new({height: 5}), new text$.Text.new(title, {style: new text_style.TextStyle.new({color: new ui.Color.fromRGBO(39, 15, 191, 1), fontFamily: "Inter", fontSize: 14})}), new basic.SizedBox.new({height: 5}), new text$.Text.new(count[$toString](), {style: new text_style.TextStyle.new({color: new ui.Color.fromRGBO(39, 15, 191, 1), fontFamily: "Inter", fontSize: 14})})])})});
    }
    static ['_#new#tearOff']() {
      return new courses._CoursePageState.new();
    }
  };
  (courses._CoursePageState.new = function() {
    courses._CoursePageState.__proto__.new.call(this);
    ;
  }).prototype = courses._CoursePageState.prototype;
  dart.addTypeTests(courses._CoursePageState);
  dart.addTypeCaches(courses._CoursePageState);
  dart.setMethodSignature(courses._CoursePageState, () => ({
    __proto__: dart.getMethods(courses._CoursePageState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_buildVersion]: dart.fnType(framework.Widget, []),
    [_courseCardContainer]: dart.fnType(framework.Widget, []),
    [_topNav]: dart.fnType(framework.Widget, [core.bool]),
    [_CourseCard]: dart.fnType(framework.Widget, [core.String, core.int, ui.Color, icon_data.IconData]),
    buildCourseCard: dart.fnType(framework.Widget, [core.String, core.int, ui.Color, icon_data.IconData])
  }));
  dart.setLibraryUri(courses._CoursePageState, I[29]);
  feed$.FeedPage = class FeedPage extends framework.StatefulWidget {
    createState() {
      return new feed$._FeedWidgetState.new();
    }
    static ['_#new#tearOff']() {
      return new feed$.FeedPage.new();
    }
  };
  (feed$.FeedPage.new = function() {
    feed$.FeedPage.__proto__.new.call(this);
    ;
  }).prototype = feed$.FeedPage.prototype;
  dart.addTypeTests(feed$.FeedPage);
  dart.addTypeCaches(feed$.FeedPage);
  dart.setMethodSignature(feed$.FeedPage, () => ({
    __proto__: dart.getMethods(feed$.FeedPage.__proto__),
    createState: dart.fnType(feed$._FeedWidgetState, [])
  }));
  dart.setLibraryUri(feed$.FeedPage, I[30]);
  var _searchController$ = dart.privateName(feed$, "_searchController");
  var _buildUserInfo$ = dart.privateName(feed$, "_buildUserInfo");
  var _buildStats$ = dart.privateName(feed$, "_buildStats");
  var _buildSearchBar$ = dart.privateName(feed$, "_buildSearchBar");
  var _buildUserProfile$ = dart.privateName(feed$, "_buildUserProfile");
  var _buildOriginalSoundText$ = dart.privateName(feed$, "_buildOriginalSoundText");
  var _buildUsername$ = dart.privateName(feed$, "_buildUsername");
  var _buildFollowButton$ = dart.privateName(feed$, "_buildFollowButton");
  var _buildStatIcon$ = dart.privateName(feed$, "_buildStatIcon");
  var _navigateToSearchResults$ = dart.privateName(feed$, "_navigateToSearchResults");
  feed$._FeedWidgetState = class _FeedWidgetState extends framework.State$(feed$.FeedPage) {
    initState() {
      super.initState();
      T$.FutureOfvoid().microtask(dart.fn(() => provider$.Provider.of(video_provider.VideoProvider, this.context, {listen: false}).loadJsonData(), T$.VoidToFutureOfvoid()));
    }
    build(context) {
      let videoData = provider$.Provider.of(video_provider.VideoProvider, context).videoData;
      return new scaffold.Scaffold.new({body: videoData == null ? new basic.Center.new({child: new progress_indicator.CircularProgressIndicator.new()}) : new container.Container.new({decoration: new box_decoration.BoxDecoration.new({color: new ui.Color.fromRGBO(51, 51, 51, 1)}), child: new basic.Stack.new({children: T$.JSArrayOfWidget().of([new basic.Positioned.new({top: media_query.MediaQuery.of(context).size.height * 0.8, left: media_query.MediaQuery.of(context).size.width * 0.05, child: this[_buildUserInfo$](videoData.data.uploader)}), new basic.Positioned.new({bottom: media_query.MediaQuery.of(context).size.height * 0.1, right: media_query.MediaQuery.of(context).size.width * 0.05, child: this[_buildStats$](videoData.data)}), new basic.Positioned.new({bottom: 0, left: 0, child: new botnav.BottomNav.new()}), new basic.Positioned.new({top: 3, left: 0, right: 0, child: this[_buildSearchBar$]()})])})})});
    }
    [_buildUserInfo$](username) {
      return new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([this[_buildUserProfile$](username), new basic.SizedBox.new({height: 10}), this[_buildOriginalSoundText$]()])});
    }
    [_buildUserProfile$](username) {
      return new basic.Row.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([this[_buildUsername$](username), new basic.SizedBox.new({width: 15}), this[_buildFollowButton$]()])});
    }
    [_buildUsername$](username) {
      return new gesture_detector.GestureDetector.new({onTap: dart.fn(() => {
          navigator.Navigator.push(dart.dynamic, this.context, new page$.MaterialPageRoute.new({builder: dart.fn(context => new ViewProf.ViewProfPage.new(), T$.BuildContextToViewProfPage())}));
        }, T$.VoidTovoid()), child: new basic.Row.new({children: T$.JSArrayOfWidget().of([new container.Container.new({width: 22, height: 22, decoration: new box_decoration.BoxDecoration.new({color: new ui.Color.fromRGBO(217, 217, 217, 1), borderRadius: new border_radius.BorderRadius.circular(22)})}), new basic.SizedBox.new({width: 5}), new text$.Text.new(username, {style: new text_style.TextStyle.new({color: colors.Colors.white, fontFamily: "Inter", fontSize: 10, height: 1.6})})])})});
    }
    [_buildFollowButton$]() {
      return new container.Container.new({padding: new edge_insets.EdgeInsets.symmetric({horizontal: 10}), decoration: new box_decoration.BoxDecoration.new({borderRadius: new border_radius.BorderRadius.circular(12), border: box_border.Border.all({color: colors.Colors.white, width: 0.5})}), child: new basic.Center.new({child: new text$.Text.new("Follow", {textAlign: ui.TextAlign.center, style: new text_style.TextStyle.new({color: colors.Colors.white, fontFamily: "Inter", fontSize: 8, height: 2})})})});
    }
    [_buildOriginalSoundText$]() {
      return new basic.Row.new({mainAxisAlignment: flex.MainAxisAlignment.start, children: T$.JSArrayOfWidget().of([new icon$.Icon.new(flutter_boxicons.Boxicons.bx_music, {color: colors.Colors.white, size: 16}), new basic.SizedBox.new({width: 10}), new text$.Text.new("Original Sound", {textAlign: ui.TextAlign.left, style: new text_style.TextStyle.new({color: colors.Colors.white, fontFamily: "Inter", fontSize: 10})})])});
    }
    formatCount(count) {
      if (count >= 1000) {
        return (count / 1000)[$toStringAsFixed](1) + "K";
      }
      return count[$toString]();
    }
    [_buildStats$](videoData) {
      return new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([this[_buildStatIcon$](flutter_boxicons.Boxicons.bx_heart, this.formatCount(videoData.likeCount)), new basic.SizedBox.new({height: 20}), this[_buildStatIcon$](flutter_boxicons.Boxicons.bx_message_rounded_dots, this.formatCount(videoData.commentCount)), new basic.SizedBox.new({height: 20}), this[_buildStatIcon$](flutter_boxicons.Boxicons.bx_bookmark, this.formatCount(videoData.bookmarkCount)), new basic.SizedBox.new({height: 20}), this[_buildStatIcon$](flutter_boxicons.Boxicons.bx_share, this.formatCount(videoData.shareCount))])});
    }
    [_buildStatIcon$](icon, text) {
      return new basic.Column.new({mainAxisSize: flex.MainAxisSize.min, children: T$.JSArrayOfWidget().of([new icon$.Icon.new(icon, {color: colors.Colors.white}), new basic.SizedBox.new({width: 7}), new text$.Text.new(text, {style: new text_style.TextStyle.new({color: colors.Colors.white, fontFamily: "Inter", fontSize: 11})})])});
    }
    [_buildSearchBar$]() {
      return new container.Container.new({padding: new edge_insets.EdgeInsets.symmetric({horizontal: 16}), child: new basic.Row.new({children: T$.JSArrayOfWidget().of([new container.Container.new({height: 50, child: new single_child_scroll_view.SingleChildScrollView.new({scrollDirection: basic_types.Axis.horizontal, child: new basic.Row.new({children: T$.ListOfWidget().generate(3, dart.fn(index => new container.Container.new({margin: new edge_insets.EdgeInsets.symmetric({horizontal: 4}), padding: new edge_insets.EdgeInsets.symmetric({horizontal: 10, vertical: 10}), decoration: new box_decoration.BoxDecoration.new({color: colors.Colors.grey._get(200), borderRadius: new border_radius.BorderRadius.circular(20)}), child: new text$.Text.new("Item " + dart.str(index + 1), {style: new text_style.TextStyle.new({color: colors.Colors.black})})}), T$.intToContainer()))})})}), new basic.SizedBox.new({width: 15}), new basic.Expanded.new({child: new text_field.TextField.new({controller: this[_searchController$], onSubmitted: dart.fn(value => {
                  if (value[$isNotEmpty]) {
                    this[_navigateToSearchResults$](value);
                  }
                }, T$.StringTovoid()), decoration: new input_decorator.InputDecoration.new({filled: true, fillColor: colors.Colors.white, hintText: this.hintText, border: new input_border.OutlineInputBorder.new({borderRadius: new border_radius.BorderRadius.circular(30), borderSide: borders.BorderSide.none}), prefixIcon: new icon$.Icon.new(icons.Icons.search, {color: colors.Colors.grey}), contentPadding: new edge_insets.EdgeInsets.symmetric({vertical: 6})})})})])})});
    }
    [_navigateToSearchResults$](query) {
      navigator.Navigator.push(dart.dynamic, this.context, new page$.MaterialPageRoute.new({builder: dart.fn(context => new search.SearchPage.new({query: query}), T$.BuildContextToSearchPage())}));
    }
    static ['_#new#tearOff']() {
      return new feed$._FeedWidgetState.new();
    }
  };
  (feed$._FeedWidgetState.new = function() {
    this[_searchController$] = new editable_text.TextEditingController.new();
    this.hintText = "Search...";
    feed$._FeedWidgetState.__proto__.new.call(this);
    ;
  }).prototype = feed$._FeedWidgetState.prototype;
  dart.addTypeTests(feed$._FeedWidgetState);
  dart.addTypeCaches(feed$._FeedWidgetState);
  dart.setMethodSignature(feed$._FeedWidgetState, () => ({
    __proto__: dart.getMethods(feed$._FeedWidgetState.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext]),
    [_buildUserInfo$]: dart.fnType(framework.Widget, [core.String]),
    [_buildUserProfile$]: dart.fnType(framework.Widget, [core.String]),
    [_buildUsername$]: dart.fnType(framework.Widget, [core.String]),
    [_buildFollowButton$]: dart.fnType(framework.Widget, []),
    [_buildOriginalSoundText$]: dart.fnType(framework.Widget, []),
    formatCount: dart.fnType(core.String, [core.int]),
    [_buildStats$]: dart.fnType(framework.Widget, [video.VideoData]),
    [_buildStatIcon$]: dart.fnType(framework.Widget, [icon_data.IconData, core.String]),
    [_buildSearchBar$]: dart.fnType(framework.Widget, []),
    [_navigateToSearchResults$]: dart.fnType(dart.void, [core.String])
  }));
  dart.setLibraryUri(feed$._FeedWidgetState, I[30]);
  dart.setFieldSignature(feed$._FeedWidgetState, () => ({
    __proto__: dart.getFields(feed$._FeedWidgetState.__proto__),
    [_searchController$]: dart.finalFieldType(editable_text.TextEditingController),
    hintText: dart.finalFieldType(core.String)
  }));
  var textureId$ = dart.privateName(camera$, "Camera.textureId");
  var options$ = dart.privateName(camera$, "Camera.options");
  var stream = dart.privateName(camera$, "Camera.stream");
  var onEndedController = dart.privateName(camera$, "Camera.onEndedController");
  var videoRecordingErrorController = dart.privateName(camera$, "Camera.videoRecordingErrorController");
  var flashMode = dart.privateName(camera$, "Camera.flashMode");
  var window$ = dart.privateName(camera$, "Camera.window");
  var mediaRecorder = dart.privateName(camera$, "Camera.mediaRecorder");
  var isVideoTypeSupported = dart.privateName(camera$, "Camera.isVideoTypeSupported");
  var blobBuilder = dart.privateName(camera$, "Camera.blobBuilder");
  var videoRecorderController = dart.privateName(camera$, "Camera.videoRecorderController");
  var __Camera_videoElement = dart.privateName(camera$, "_#Camera#videoElement");
  var __Camera_divElement = dart.privateName(camera$, "_#Camera#divElement");
  var _onEndedSubscription = dart.privateName(camera$, "_onEndedSubscription");
  var _onVideoRecordingErrorSubscription = dart.privateName(camera$, "_onVideoRecordingErrorSubscription");
  var _videoData$ = dart.privateName(camera$, "_videoData");
  var _videoAvailableCompleter = dart.privateName(camera$, "_videoAvailableCompleter");
  var _videoDataAvailableListener = dart.privateName(camera$, "_videoDataAvailableListener");
  var _videoRecordingStoppedListener = dart.privateName(camera$, "_videoRecordingStoppedListener");
  var _cameraService$ = dart.privateName(camera$, "_cameraService");
  var _applyDefaultVideoStyles = dart.privateName(camera$, "_applyDefaultVideoStyles");
  var _setTorchMode = dart.privateName(camera$, "_setTorchMode");
  var _videoMimeType = dart.privateName(camera$, "_videoMimeType");
  var _onVideoDataAvailable = dart.privateName(camera$, "_onVideoDataAvailable");
  var _onVideoRecordingStopped = dart.privateName(camera$, "_onVideoRecordingStopped");
  var _videoRecordingNotStartedException = dart.privateName(camera$, "_videoRecordingNotStartedException");
  camera$.Camera = class Camera extends core.Object {
    get textureId() {
      return this[textureId$];
    }
    set textureId(value) {
      super.textureId = value;
    }
    get options() {
      return this[options$];
    }
    set options(value) {
      super.options = value;
    }
    get stream() {
      return this[stream];
    }
    set stream(value) {
      this[stream] = value;
    }
    get onEndedController() {
      return this[onEndedController];
    }
    set onEndedController(value) {
      super.onEndedController = value;
    }
    get videoRecordingErrorController() {
      return this[videoRecordingErrorController];
    }
    set videoRecordingErrorController(value) {
      super.videoRecordingErrorController = value;
    }
    get flashMode() {
      return this[flashMode];
    }
    set flashMode(value) {
      this[flashMode] = value;
    }
    get window() {
      return this[window$];
    }
    set window(value) {
      this[window$] = value;
    }
    get mediaRecorder() {
      return this[mediaRecorder];
    }
    set mediaRecorder(value) {
      this[mediaRecorder] = value;
    }
    get isVideoTypeSupported() {
      return this[isVideoTypeSupported];
    }
    set isVideoTypeSupported(value) {
      this[isVideoTypeSupported] = value;
    }
    get blobBuilder() {
      return this[blobBuilder];
    }
    set blobBuilder(value) {
      this[blobBuilder] = value;
    }
    get videoRecorderController() {
      return this[videoRecorderController];
    }
    set videoRecorderController(value) {
      super.videoRecorderController = value;
    }
    static ['_#new#tearOff'](opts) {
      let textureId = opts && 'textureId' in opts ? opts.textureId : null;
      let cameraService = opts && 'cameraService' in opts ? opts.cameraService : null;
      let options = opts && 'options' in opts ? opts.options : C[1554] || CT.C1554;
      return new camera$.Camera.new({textureId: textureId, cameraService: cameraService, options: options});
    }
    get videoElement() {
      let t39;
      t39 = this[__Camera_videoElement];
      return t39 == null ? dart.throw(new _internal.LateError.fieldNI("videoElement")) : t39;
    }
    set videoElement(videoElement$35param) {
      if (this[__Camera_videoElement] == null)
        this[__Camera_videoElement] = videoElement$35param;
      else
        dart.throw(new _internal.LateError.fieldAI("videoElement"));
    }
    get divElement() {
      let t39;
      t39 = this[__Camera_divElement];
      return t39 == null ? dart.throw(new _internal.LateError.fieldNI("divElement")) : t39;
    }
    set divElement(divElement$35param) {
      if (this[__Camera_divElement] == null)
        this[__Camera_divElement] = divElement$35param;
      else
        dart.throw(new _internal.LateError.fieldAI("divElement"));
    }
    get onEnded() {
      return this.onEndedController.stream;
    }
    get onVideoRecordingError() {
      return this.videoRecordingErrorController.stream;
    }
    get onVideoRecordedEvent() {
      return this.videoRecorderController.stream;
    }
    initialize() {
      return async.async(dart.void, (function* initialize() {
        let t39, t39$;
        this.stream = (yield this[_cameraService$].getMediaStreamForOptions(this.options, {cameraId: this.textureId}));
        this.videoElement = html.VideoElement.new();
        this.divElement = (t39 = html.DivElement.new(), (() => {
          t39[$style][$setProperty]("object-fit", "cover");
          t39[$append](this.videoElement);
          return t39;
        })());
        ui.platformViewRegistry.registerViewFactory(camera$._getViewType(this.textureId), dart.fn(_ => this.divElement, T$.intToDivElement()));
        t39$ = this.videoElement;
        (() => {
          t39$[$autoplay] = false;
          t39$[$muted] = true;
          t39$.srcObject = this.stream;
          t39$[$setAttribute]("playsinline", "");
          return t39$;
        })();
        this[_applyDefaultVideoStyles](this.videoElement);
        let videoTracks = dart.nullCheck(this.stream)[$getVideoTracks]();
        if (videoTracks[$isNotEmpty]) {
          let defaultVideoTrack = videoTracks[$first];
          this[_onEndedSubscription] = defaultVideoTrack[$onEnded].listen(dart.fn(_ => {
            this.onEndedController.add(defaultVideoTrack);
          }, T$.EventTovoid()));
        }
      }).bind(this));
    }
    play() {
      return async.async(dart.void, (function* play() {
        if (this.videoElement.srcObject == null) {
          this.stream = (yield this[_cameraService$].getMediaStreamForOptions(this.options, {cameraId: this.textureId}));
          this.videoElement.srcObject = this.stream;
        }
        yield this.videoElement[$play]();
      }).bind(this));
    }
    pause() {
      this.videoElement.pause();
    }
    stop() {
      let t39;
      let videoTracks = dart.nullCheck(this.stream)[$getVideoTracks]();
      if (videoTracks[$isNotEmpty]) {
        this.onEndedController.add(videoTracks[$first]);
      }
      let tracks = (t39 = this.stream, t39 == null ? null : t39[$getTracks]());
      if (tracks != null) {
        for (let track of tracks) {
          track.stop();
        }
      }
      this.videoElement.srcObject = null;
      this.stream = null;
    }
    takePicture() {
      return async.async(html$.XFile, (function* takePicture() {
        let t39;
        let shouldEnableTorchMode = this.flashMode === flash_mode.FlashMode.auto || this.flashMode === flash_mode.FlashMode.always;
        if (shouldEnableTorchMode) {
          this[_setTorchMode]({enabled: true});
        }
        let videoWidth = this.videoElement[$videoWidth];
        let videoHeight = this.videoElement[$videoHeight];
        let canvas = html.CanvasElement.new({width: videoWidth, height: videoHeight});
        let isBackCamera = this.getLensDirection() === camera_description.CameraLensDirection.back;
        if (!isBackCamera) {
          t39 = canvas[$context2D];
          (() => {
            t39.translate(videoWidth, 0);
            t39.scale(-1, 1);
            return t39;
          })();
        }
        canvas[$context2D][$drawImageScaled](this.videoElement, 0, 0, videoWidth, videoHeight);
        let blob = (yield canvas[$toBlob]("image/jpeg"));
        if (shouldEnableTorchMode) {
          this[_setTorchMode]({enabled: false});
        }
        return new html$.XFile.new(html.Url.createObjectUrl(blob));
      }).bind(this));
    }
    getVideoSize() {
      let t39, t39$;
      let videoTracks = (t39$ = (t39 = this.videoElement.srcObject, t39 == null ? null : t39[$getVideoTracks]()), t39$ == null ? T$.JSArrayOfMediaStreamTrack().of([]) : t39$);
      if (videoTracks[$isEmpty]) {
        return ui.Size.zero;
      }
      let defaultVideoTrack = videoTracks[$first];
      let defaultVideoTrackSettings = defaultVideoTrack[$getSettings]();
      let width = T$.doubleN().as(defaultVideoTrackSettings[$_get]("width"));
      let height = T$.doubleN().as(defaultVideoTrackSettings[$_get]("height"));
      if (width != null && height != null) {
        return new ui.Size.new(width, height);
      } else {
        return ui.Size.zero;
      }
    }
    setFlashMode(mode) {
      let t39, t39$, t39$0, t39$1;
      let mediaDevices = (t39 = this.window, t39 == null ? null : t39[$navigator].mediaDevices);
      let supportedConstraints = (t39$ = mediaDevices, t39$ == null ? null : t39$[$getSupportedConstraints]());
      let torchModeSupported = (t39$1 = T$.boolN().as((t39$0 = supportedConstraints, t39$0 == null ? null : t39$0[$_get]("torch"))), t39$1 == null ? false : t39$1);
      if (!torchModeSupported) {
        dart.throw(new camera_web_exception.CameraWebException.new(this.textureId, camera_error_code.CameraErrorCode.torchModeNotSupported, "The torch mode is not supported in the current browser."));
      }
      this.flashMode = mode;
      this[_setTorchMode]({enabled: mode === flash_mode.FlashMode.torch});
    }
    [_setTorchMode](opts) {
      let t39, t39$, t39$0;
      let enabled = opts && 'enabled' in opts ? opts.enabled : null;
      let videoTracks = (t39$ = (t39 = this.stream, t39 == null ? null : t39[$getVideoTracks]()), t39$ == null ? T$.JSArrayOfMediaStreamTrack().of([]) : t39$);
      if (videoTracks[$isNotEmpty]) {
        let defaultVideoTrack = videoTracks[$first];
        let canEnableTorchMode = (t39$0 = T$.boolN().as(defaultVideoTrack[$getCapabilities]()[$_get]("torch")), t39$0 == null ? false : t39$0);
        if (canEnableTorchMode) {
          defaultVideoTrack[$applyConstraints](new (T$.IdentityMapOfString$Object()).from(["advanced", T$.JSArrayOfObject().of([new (T$.IdentityMapOfString$Object()).from(["torch", enabled])])]));
        } else {
          dart.throw(new camera_web_exception.CameraWebException.new(this.textureId, camera_error_code.CameraErrorCode.torchModeNotSupported, "The torch mode is not supported by the current camera."));
        }
      } else {
        dart.throw(new camera_web_exception.CameraWebException.new(this.textureId, camera_error_code.CameraErrorCode.notStarted, "The camera has not been initialized or started."));
      }
    }
    getMaxZoomLevel() {
      return this[_cameraService$].getZoomLevelCapabilityForCamera(this).maximum;
    }
    getMinZoomLevel() {
      return this[_cameraService$].getZoomLevelCapabilityForCamera(this).minimum;
    }
    setZoomLevel(zoom) {
      let zoomLevelCapability = this[_cameraService$].getZoomLevelCapabilityForCamera(this);
      if (zoom < zoomLevelCapability.minimum || zoom > zoomLevelCapability.maximum) {
        dart.throw(new camera_web_exception.CameraWebException.new(this.textureId, camera_error_code.CameraErrorCode.zoomLevelInvalid, "The provided zoom level must be in the range of " + dart.str(zoomLevelCapability.minimum) + " to " + dart.str(zoomLevelCapability.maximum) + "."));
      }
      zoomLevelCapability.videoTrack[$applyConstraints](new (T$.IdentityMapOfString$Object()).from(["advanced", T$.JSArrayOfObject().of([new (T$.IdentityMapOfString$Object()).from(["zoom", zoom])])]));
    }
    getLensDirection() {
      let t39, t39$;
      let videoTracks = (t39$ = (t39 = this.videoElement.srcObject, t39 == null ? null : t39[$getVideoTracks]()), t39$ == null ? T$.JSArrayOfMediaStreamTrack().of([]) : t39$);
      if (videoTracks[$isEmpty]) {
        return null;
      }
      let defaultVideoTrack = videoTracks[$first];
      let defaultVideoTrackSettings = defaultVideoTrack[$getSettings]();
      let facingMode = T$.StringN().as(defaultVideoTrackSettings[$_get]("facingMode"));
      if (facingMode != null) {
        return this[_cameraService$].mapFacingModeToLensDirection(facingMode);
      } else {
        return null;
      }
    }
    getViewType() {
      return camera$._getViewType(this.textureId);
    }
    startVideoRecording(opts) {
      let maxVideoDuration = opts && 'maxVideoDuration' in opts ? opts.maxVideoDuration : null;
      return async.async(dart.void, (function* startVideoRecording() {
        if (maxVideoDuration != null && maxVideoDuration.inMilliseconds <= 0) {
          dart.throw(new camera_web_exception.CameraWebException.new(this.textureId, camera_error_code.CameraErrorCode.notSupported, "The maximum video duration must be greater than 0 milliseconds."));
        }
        this.mediaRecorder == null ? this.mediaRecorder = html.MediaRecorder.new(dart.nullCheck(this.videoElement.srcObject), new (T$.IdentityMapOfString$Object()).from(["mimeType", this[_videoMimeType]])) : null;
        this[_videoAvailableCompleter] = T$.CompleterOfXFile().new();
        this[_videoDataAvailableListener] = dart.fn(event => this[_onVideoDataAvailable](event, maxVideoDuration), T$.EventTovoid());
        this[_videoRecordingStoppedListener] = dart.fn(event => this[_onVideoRecordingStopped](event, maxVideoDuration), T$.EventTovoid());
        dart.nullCheck(this.mediaRecorder)[$addEventListener]("dataavailable", this[_videoDataAvailableListener]);
        dart.nullCheck(this.mediaRecorder)[$addEventListener]("stop", this[_videoRecordingStoppedListener]);
        this[_onVideoRecordingErrorSubscription] = dart.nullCheck(this.mediaRecorder)[$onError].listen(dart.fn(event => {
          let error = html.ErrorEvent.as(event);
          this.videoRecordingErrorController.add(error);
        }, T$.EventTovoid()));
        if (maxVideoDuration != null) {
          dart.nullCheck(this.mediaRecorder).start(maxVideoDuration.inMilliseconds);
        } else {
          dart.nullCheck(this.mediaRecorder).start();
        }
      }).bind(this));
    }
    [_onVideoDataAvailable](event, maxVideoDuration = null) {
      let blob = html.BlobEvent.as(event).data;
      if (blob != null) {
        this[_videoData$][$add](blob);
      }
      if (maxVideoDuration != null && dart.nullCheck(this.mediaRecorder).state === "recording") {
        dart.nullCheck(this.mediaRecorder).stop();
      }
    }
    [_onVideoRecordingStopped](event, maxVideoDuration = null) {
      return async.async(dart.void, (function* _onVideoRecordingStopped() {
        let t40, t39, t39$, t39$0;
        if (this[_videoData$][$isNotEmpty]) {
          let videoType = this[_videoData$][$first][$type];
          let videoBlob = (t39 = this[_videoData$], t40 = videoType, this.blobBuilder(t39, t40));
          let file = new html$.XFile.new(html.Url.createObjectUrl(videoBlob), {mimeType: this[_videoMimeType], name: videoBlob[$hashCode][$toString]()});
          this.videoRecorderController.add(new camera_event.VideoRecordedEvent.new(this.textureId, file, maxVideoDuration));
          t39$ = this[_videoAvailableCompleter];
          t39$ == null ? null : t39$.complete(file);
        }
        dart.nullCheck(this.mediaRecorder)[$removeEventListener]("dataavailable", this[_videoDataAvailableListener]);
        dart.nullCheck(this.mediaRecorder)[$removeEventListener]("stop", this[_videoDataAvailableListener]);
        yield (t39$0 = this[_onVideoRecordingErrorSubscription], t39$0 == null ? null : t39$0.cancel());
        this.mediaRecorder = null;
        this[_videoDataAvailableListener] = null;
        this[_videoRecordingStoppedListener] = null;
        this[_videoData$][$clear]();
      }).bind(this));
    }
    pauseVideoRecording() {
      return async.async(dart.void, (function* pauseVideoRecording() {
        if (this.mediaRecorder == null) {
          dart.throw(this[_videoRecordingNotStartedException]);
        }
        dart.nullCheck(this.mediaRecorder).pause();
      }).bind(this));
    }
    resumeVideoRecording() {
      return async.async(dart.void, (function* resumeVideoRecording() {
        if (this.mediaRecorder == null) {
          dart.throw(this[_videoRecordingNotStartedException]);
        }
        dart.nullCheck(this.mediaRecorder).resume();
      }).bind(this));
    }
    stopVideoRecording() {
      return async.async(html$.XFile, (function* stopVideoRecording() {
        if (this.mediaRecorder == null || this[_videoAvailableCompleter] == null) {
          dart.throw(this[_videoRecordingNotStartedException]);
        }
        dart.nullCheck(this.mediaRecorder).stop();
        return dart.nullCheck(this[_videoAvailableCompleter]).future;
      }).bind(this));
    }
    dispose() {
      return async.async(dart.void, (function* dispose() {
        let t39, t39$, t39$0;
        this.stop();
        yield this.videoRecorderController.close();
        this.mediaRecorder = null;
        this[_videoDataAvailableListener] = null;
        t39 = this.videoElement;
        (() => {
          t39.srcObject = null;
          t39.load();
          return t39;
        })();
        yield (t39$ = this[_onEndedSubscription], t39$ == null ? null : t39$.cancel());
        this[_onEndedSubscription] = null;
        yield this.onEndedController.close();
        yield (t39$0 = this[_onVideoRecordingErrorSubscription], t39$0 == null ? null : t39$0.cancel());
        this[_onVideoRecordingErrorSubscription] = null;
        yield this.videoRecordingErrorController.close();
      }).bind(this));
    }
    get [_videoMimeType]() {
      let types = C[1562] || CT.C1562;
      return types[$firstWhere](dart.fn(type => {
        let t39;
        t39 = type;
        return this.isVideoTypeSupported(t39);
      }, T$.StringTobool()), {orElse: dart.fn(() => dart.throw(new camera_web_exception.CameraWebException.new(this.textureId, camera_error_code.CameraErrorCode.notSupported, "The browser does not support any of the following video types: " + types[$join](",") + ".")), T$.VoidToNever())});
    }
    get [_videoRecordingNotStartedException]() {
      return new camera_web_exception.CameraWebException.new(this.textureId, camera_error_code.CameraErrorCode.videoRecordingNotStarted, "The video recorder is uninitialized. The recording might not have been started. Make sure to call `startVideoRecording` first.");
    }
    [_applyDefaultVideoStyles](element) {
      let t39;
      let isBackCamera = this.getLensDirection() === camera_description.CameraLensDirection.back;
      if (!isBackCamera) {
        element[$style][$transform] = "scaleX(-1)";
      }
      t39 = element[$style];
      (() => {
        t39[$transformOrigin] = "center";
        t39[$pointerEvents] = "none";
        t39[$width] = "100%";
        t39[$height] = "100%";
        t39[$objectFit] = "cover";
        return t39;
      })();
    }
  };
  (camera$.Camera.new = function(opts) {
    let textureId = opts && 'textureId' in opts ? opts.textureId : null;
    let cameraService = opts && 'cameraService' in opts ? opts.cameraService : null;
    let options = opts && 'options' in opts ? opts.options : C[1554] || CT.C1554;
    this[__Camera_videoElement] = null;
    this[__Camera_divElement] = null;
    this[stream] = null;
    this[onEndedController] = T$.StreamControllerOfMediaStreamTrack().broadcast();
    this[_onEndedSubscription] = null;
    this[videoRecordingErrorController] = T$.StreamControllerOfErrorEvent().broadcast();
    this[_onVideoRecordingErrorSubscription] = null;
    this[flashMode] = null;
    this[window$] = html.window;
    this[mediaRecorder] = null;
    this[isVideoTypeSupported] = C[1561] || CT.C1561;
    this[_videoData$] = T$.JSArrayOfBlob().of([]);
    this[_videoAvailableCompleter] = null;
    this[_videoDataAvailableListener] = null;
    this[_videoRecordingStoppedListener] = null;
    this[blobBuilder] = dart.fn((blobs, type) => html.Blob.new(blobs, type), T$.ListOfBlobAndStringToBlob());
    this[videoRecorderController] = T$.StreamControllerOfVideoRecordedEvent().broadcast();
    this[textureId$] = textureId;
    this[options$] = options;
    this[_cameraService$] = cameraService;
    ;
  }).prototype = camera$.Camera.prototype;
  dart.addTypeTests(camera$.Camera);
  dart.addTypeCaches(camera$.Camera);
  dart.setMethodSignature(camera$.Camera, () => ({
    __proto__: dart.getMethods(camera$.Camera.__proto__),
    initialize: dart.fnType(async.Future$(dart.void), []),
    play: dart.fnType(async.Future$(dart.void), []),
    pause: dart.fnType(dart.void, []),
    stop: dart.fnType(dart.void, []),
    takePicture: dart.fnType(async.Future$(html$.XFile), []),
    getVideoSize: dart.fnType(ui.Size, []),
    setFlashMode: dart.fnType(dart.void, [flash_mode.FlashMode]),
    [_setTorchMode]: dart.fnType(dart.void, [], {}, {enabled: core.bool}),
    getMaxZoomLevel: dart.fnType(core.double, []),
    getMinZoomLevel: dart.fnType(core.double, []),
    setZoomLevel: dart.fnType(dart.void, [core.double]),
    getLensDirection: dart.fnType(dart.nullable(camera_description.CameraLensDirection), []),
    getViewType: dart.fnType(core.String, []),
    startVideoRecording: dart.fnType(async.Future$(dart.void), [], {maxVideoDuration: dart.nullable(core.Duration)}, {}),
    [_onVideoDataAvailable]: dart.fnType(dart.void, [html.Event], [dart.nullable(core.Duration)]),
    [_onVideoRecordingStopped]: dart.fnType(async.Future$(dart.void), [html.Event], [dart.nullable(core.Duration)]),
    pauseVideoRecording: dart.fnType(async.Future$(dart.void), []),
    resumeVideoRecording: dart.fnType(async.Future$(dart.void), []),
    stopVideoRecording: dart.fnType(async.Future$(html$.XFile), []),
    dispose: dart.fnType(async.Future$(dart.void), []),
    [_applyDefaultVideoStyles]: dart.fnType(dart.void, [html.VideoElement])
  }));
  dart.setGetterSignature(camera$.Camera, () => ({
    __proto__: dart.getGetters(camera$.Camera.__proto__),
    videoElement: html.VideoElement,
    divElement: html.DivElement,
    onEnded: async.Stream$(html.MediaStreamTrack),
    onVideoRecordingError: async.Stream$(html.ErrorEvent),
    onVideoRecordedEvent: async.Stream$(camera_event.VideoRecordedEvent),
    [_videoMimeType]: core.String,
    [_videoRecordingNotStartedException]: camera_web_exception.CameraWebException
  }));
  dart.setSetterSignature(camera$.Camera, () => ({
    __proto__: dart.getSetters(camera$.Camera.__proto__),
    videoElement: html.VideoElement,
    divElement: html.DivElement
  }));
  dart.setLibraryUri(camera$.Camera, I[31]);
  dart.setFieldSignature(camera$.Camera, () => ({
    __proto__: dart.getFields(camera$.Camera.__proto__),
    textureId: dart.finalFieldType(core.int),
    options: dart.finalFieldType(camera_options.CameraOptions),
    [__Camera_videoElement]: dart.fieldType(dart.nullable(html.VideoElement)),
    [__Camera_divElement]: dart.fieldType(dart.nullable(html.DivElement)),
    stream: dart.fieldType(dart.nullable(html.MediaStream)),
    onEndedController: dart.finalFieldType(async.StreamController$(html.MediaStreamTrack)),
    [_onEndedSubscription]: dart.fieldType(dart.nullable(async.StreamSubscription$(html.Event))),
    videoRecordingErrorController: dart.finalFieldType(async.StreamController$(html.ErrorEvent)),
    [_onVideoRecordingErrorSubscription]: dart.fieldType(dart.nullable(async.StreamSubscription$(html.Event))),
    flashMode: dart.fieldType(dart.nullable(flash_mode.FlashMode)),
    [_cameraService$]: dart.finalFieldType(camera_service.CameraService),
    window: dart.fieldType(dart.nullable(html.Window)),
    mediaRecorder: dart.fieldType(dart.nullable(html.MediaRecorder)),
    isVideoTypeSupported: dart.fieldType(dart.fnType(core.bool, [core.String])),
    [_videoData$]: dart.finalFieldType(core.List$(html.Blob)),
    [_videoAvailableCompleter]: dart.fieldType(dart.nullable(async.Completer$(html$.XFile))),
    [_videoDataAvailableListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [html.Event]))),
    [_videoRecordingStoppedListener]: dart.fieldType(dart.nullable(dart.fnType(dart.void, [html.Event]))),
    blobBuilder: dart.fieldType(dart.fnType(html.Blob, [core.List$(html.Blob), core.String])),
    videoRecorderController: dart.finalFieldType(async.StreamController$(camera_event.VideoRecordedEvent))
  }));
  dart.setStaticFieldSignature(camera$.Camera, () => ['_torchModeKey']);
  dart.defineLazy(camera$.Camera, {
    /*camera$.Camera._torchModeKey*/get _torchModeKey() {
      return "torch";
    }
  }, false);
  camera$._getViewType = function _getViewType(cameraId) {
    return "plugins.flutter.io/camera_" + dart.str(cameraId);
  };
  var window$0 = dart.privateName(camera_service, "CameraService.window");
  var jsUtil = dart.privateName(camera_service, "CameraService.jsUtil");
  camera_service.CameraService = class CameraService extends core.Object {
    get window() {
      return this[window$0];
    }
    set window(value) {
      this[window$0] = value;
    }
    get jsUtil() {
      return this[jsUtil];
    }
    set jsUtil(value) {
      this[jsUtil] = value;
    }
    getMediaStreamForOptions(options, opts) {
      let cameraId = opts && 'cameraId' in opts ? opts.cameraId : 0;
      return async.async(html.MediaStream, (function* getMediaStreamForOptions() {
        let t39;
        let mediaDevices = (t39 = this.window, t39 == null ? null : t39[$navigator].mediaDevices);
        if (mediaDevices == null) {
          dart.throw(new message_codec.PlatformException.new({code: camera_error_code.CameraErrorCode.notSupported.toString(), message: "The camera is not supported on this device."}));
        }
        try {
          let constraints = options.toJson();
          return yield mediaDevices[$getUserMedia](constraints);
        } catch (e$) {
          let ex = dart.getThrown(e$);
          if (html.DomException.is(ex)) {
            let e = ex;
            switch (e[$name]) {
              case "NotFoundError":
              case "DevicesNotFoundError":
                {
                  dart.throw(new camera_web_exception.CameraWebException.new(cameraId, camera_error_code.CameraErrorCode.notFound, "No camera found for the given camera options."));
                }
              case "NotReadableError":
              case "TrackStartError":
                {
                  dart.throw(new camera_web_exception.CameraWebException.new(cameraId, camera_error_code.CameraErrorCode.notReadable, "The camera is not readable due to a hardware error " + "that prevented access to the device."));
                }
              case "OverconstrainedError":
              case "ConstraintNotSatisfiedError":
                {
                  dart.throw(new camera_web_exception.CameraWebException.new(cameraId, camera_error_code.CameraErrorCode.overconstrained, "The camera options are impossible to satisfy."));
                }
              case "NotAllowedError":
              case "PermissionDeniedError":
                {
                  dart.throw(new camera_web_exception.CameraWebException.new(cameraId, camera_error_code.CameraErrorCode.permissionDenied, "The camera cannot be used or the permission " + "to access the camera is not granted."));
                }
              case "TypeError":
                {
                  dart.throw(new camera_web_exception.CameraWebException.new(cameraId, camera_error_code.CameraErrorCode.type, "The camera options are incorrect or attempted " + "to access the media input from an insecure context."));
                }
              case "AbortError":
                {
                  dart.throw(new camera_web_exception.CameraWebException.new(cameraId, camera_error_code.CameraErrorCode.abort, "Some problem occurred that prevented the camera from being used."));
                }
              case "SecurityError":
                {
                  dart.throw(new camera_web_exception.CameraWebException.new(cameraId, camera_error_code.CameraErrorCode.security, "The user media support is disabled in the current browser."));
                }
              default:
                {
                  dart.throw(new camera_web_exception.CameraWebException.new(cameraId, camera_error_code.CameraErrorCode.unknown, "An unknown error occured when fetching the camera stream."));
                }
            }
          } else if (core.Object.is(ex)) {
            let _ = ex;
            dart.throw(new camera_web_exception.CameraWebException.new(cameraId, camera_error_code.CameraErrorCode.unknown, "An unknown error occured when fetching the camera stream."));
          } else
            throw e$;
        }
      }).bind(this));
    }
    getZoomLevelCapabilityForCamera(camera) {
      let t41, t41$, t41$0, t41$1, t41$2, t41$3, t41$4;
      let mediaDevices = (t41 = this.window, t41 == null ? null : t41[$navigator].mediaDevices);
      let supportedConstraints = (t41$ = mediaDevices, t41$ == null ? null : t41$[$getSupportedConstraints]());
      let zoomLevelSupported = (t41$1 = T$.boolN().as((t41$0 = supportedConstraints, t41$0 == null ? null : t41$0[$_get]("zoom"))), t41$1 == null ? false : t41$1);
      if (!zoomLevelSupported) {
        dart.throw(new camera_web_exception.CameraWebException.new(camera.textureId, camera_error_code.CameraErrorCode.zoomLevelNotSupported, "The zoom level is not supported in the current browser."));
      }
      let videoTracks = (t41$3 = (t41$2 = camera.stream, t41$2 == null ? null : t41$2[$getVideoTracks]()), t41$3 == null ? T$.JSArrayOfMediaStreamTrack().of([]) : t41$3);
      if (videoTracks[$isNotEmpty]) {
        let defaultVideoTrack = videoTracks[$first];
        let zoomLevelCapability = (t41$4 = defaultVideoTrack[$getCapabilities]()[$_get]("zoom"), t41$4 == null ? new _js_helper.LinkedMap.new() : t41$4);
        let minimumZoomLevel = T$.numN().as(this.jsUtil.getProperty(zoomLevelCapability, "min"));
        let maximumZoomLevel = T$.numN().as(this.jsUtil.getProperty(zoomLevelCapability, "max"));
        if (minimumZoomLevel != null && maximumZoomLevel != null) {
          return new zoom_level_capability.ZoomLevelCapability.new({minimum: minimumZoomLevel[$toDouble](), maximum: maximumZoomLevel[$toDouble](), videoTrack: defaultVideoTrack});
        } else {
          dart.throw(new camera_web_exception.CameraWebException.new(camera.textureId, camera_error_code.CameraErrorCode.zoomLevelNotSupported, "The zoom level is not supported by the current camera."));
        }
      } else {
        dart.throw(new camera_web_exception.CameraWebException.new(camera.textureId, camera_error_code.CameraErrorCode.notStarted, "The camera has not been initialized or started."));
      }
    }
    getFacingModeForVideoTrack(videoTrack) {
      let t41, t41$, t41$0, t41$1;
      let mediaDevices = (t41 = this.window, t41 == null ? null : t41[$navigator].mediaDevices);
      if (mediaDevices == null) {
        dart.throw(new message_codec.PlatformException.new({code: camera_error_code.CameraErrorCode.notSupported.toString(), message: "The camera is not supported on this device."}));
      }
      let supportedConstraints = mediaDevices[$getSupportedConstraints]();
      let facingModeSupported = (t41$ = T$.boolN().as(supportedConstraints[$_get]("facingMode")), t41$ == null ? false : t41$);
      if (!facingModeSupported) {
        return null;
      }
      let videoTrackSettings = videoTrack[$getSettings]();
      let facingMode = T$.StringN().as(videoTrackSettings[$_get]("facingMode"));
      if (facingMode == null) {
        if (!this.jsUtil.hasProperty(videoTrack, "getCapabilities")) {
          return null;
        }
        let videoTrackCapabilities = videoTrack[$getCapabilities]();
        let facingModeCapabilities = T$.ListOfString().from((t41$1 = (t41$0 = T$.ListN().as(videoTrackCapabilities[$_get]("facingMode")), t41$0 == null ? null : t41$0[$cast](core.String)), t41$1 == null ? T$.JSArrayOfString().of([]) : t41$1));
        if (facingModeCapabilities[$isNotEmpty]) {
          let facingModeCapability = facingModeCapabilities[$first];
          return facingModeCapability;
        } else {
          return null;
        }
      }
      return facingMode;
    }
    mapFacingModeToLensDirection(facingMode) {
      switch (facingMode) {
        case "user":
          {
            return camera_description.CameraLensDirection.front;
          }
        case "environment":
          {
            return camera_description.CameraLensDirection.back;
          }
        case "left":
        case "right":
        default:
          {
            return camera_description.CameraLensDirection.external;
          }
      }
    }
    mapFacingModeToCameraType(facingMode) {
      switch (facingMode) {
        case "user":
          {
            return camera_options.CameraType.user;
          }
        case "environment":
          {
            return camera_options.CameraType.environment;
          }
        case "left":
        case "right":
        default:
          {
            return camera_options.CameraType.user;
          }
      }
    }
    mapResolutionPresetToSize(resolutionPreset) {
      switch (resolutionPreset) {
        case C[1564] || CT.C1564:
        case C[1565] || CT.C1565:
          {
            return C[1563] || CT.C1563;
          }
        case C[1567] || CT.C1567:
          {
            return C[1566] || CT.C1566;
          }
        case C[1569] || CT.C1569:
          {
            return C[1568] || CT.C1568;
          }
        case C[1571] || CT.C1571:
          {
            return C[1570] || CT.C1570;
          }
        case C[1573] || CT.C1573:
          {
            return C[1572] || CT.C1572;
          }
      }
      return C[1572] || CT.C1572;
    }
    mapDeviceOrientationToOrientationType(deviceOrientation) {
      switch (deviceOrientation) {
        case C[1574] || CT.C1574:
          {
            return "portrait-primary";
          }
        case C[1575] || CT.C1575:
          {
            return "landscape-primary";
          }
        case C[1576] || CT.C1576:
          {
            return "portrait-secondary";
          }
        case C[1577] || CT.C1577:
          {
            return "landscape-secondary";
          }
      }
    }
    mapOrientationTypeToDeviceOrientation(orientationType) {
      switch (orientationType) {
        case "portrait-primary":
          {
            return system_chrome.DeviceOrientation.portraitUp;
          }
        case "landscape-primary":
          {
            return system_chrome.DeviceOrientation.landscapeLeft;
          }
        case "portrait-secondary":
          {
            return system_chrome.DeviceOrientation.portraitDown;
          }
        case "landscape-secondary":
          {
            return system_chrome.DeviceOrientation.landscapeRight;
          }
        default:
          {
            return system_chrome.DeviceOrientation.portraitUp;
          }
      }
    }
    static ['_#new#tearOff']() {
      return new camera_service.CameraService.new();
    }
  };
  (camera_service.CameraService.new = function() {
    this[window$0] = html.window;
    this[jsUtil] = new dart_js_util.JsUtil.new();
    ;
  }).prototype = camera_service.CameraService.prototype;
  dart.addTypeTests(camera_service.CameraService);
  dart.addTypeCaches(camera_service.CameraService);
  dart.setMethodSignature(camera_service.CameraService, () => ({
    __proto__: dart.getMethods(camera_service.CameraService.__proto__),
    getMediaStreamForOptions: dart.fnType(async.Future$(html.MediaStream), [camera_options.CameraOptions], {cameraId: core.int}, {}),
    getZoomLevelCapabilityForCamera: dart.fnType(zoom_level_capability.ZoomLevelCapability, [camera$.Camera]),
    getFacingModeForVideoTrack: dart.fnType(dart.nullable(core.String), [html.MediaStreamTrack]),
    mapFacingModeToLensDirection: dart.fnType(camera_description.CameraLensDirection, [core.String]),
    mapFacingModeToCameraType: dart.fnType(camera_options.CameraType, [core.String]),
    mapResolutionPresetToSize: dart.fnType(ui.Size, [resolution_preset.ResolutionPreset]),
    mapDeviceOrientationToOrientationType: dart.fnType(core.String, [system_chrome.DeviceOrientation]),
    mapOrientationTypeToDeviceOrientation: dart.fnType(system_chrome.DeviceOrientation, [core.String])
  }));
  dart.setLibraryUri(camera_service.CameraService, I[32]);
  dart.setFieldSignature(camera_service.CameraService, () => ({
    __proto__: dart.getFields(camera_service.CameraService.__proto__),
    window: dart.fieldType(dart.nullable(html.Window)),
    jsUtil: dart.fieldType(dart_js_util.JsUtil)
  }));
  dart.setStaticFieldSignature(camera_service.CameraService, () => ['_facingModeKey']);
  dart.defineLazy(camera_service.CameraService, {
    /*camera_service.CameraService._facingModeKey*/get _facingModeKey() {
      return "facingMode";
    }
  }, false);
  var label$ = dart.privateName(action_button, "ActionButton.label");
  var onTap$ = dart.privateName(action_button, "ActionButton.onTap");
  var isPrimary$ = dart.privateName(action_button, "ActionButton.isPrimary");
  action_button.ActionButton = class ActionButton extends framework.StatelessWidget {
    get label() {
      return this[label$];
    }
    set label(value) {
      super.label = value;
    }
    get onTap() {
      return this[onTap$];
    }
    set onTap(value) {
      super.onTap = value;
    }
    get isPrimary() {
      return this[isPrimary$];
    }
    set isPrimary(value) {
      super.isPrimary = value;
    }
    static ['_#new#tearOff'](opts) {
      let label = opts && 'label' in opts ? opts.label : null;
      let onTap = opts && 'onTap' in opts ? opts.onTap : null;
      let isPrimary = opts && 'isPrimary' in opts ? opts.isPrimary : false;
      return new action_button.ActionButton.new({label: label, onTap: onTap, isPrimary: isPrimary});
    }
    build(context) {
      let screenWidth = media_query.MediaQuery.of(context).size.width;
      let screenHeight = media_query.MediaQuery.of(context).size.height;
      return new ink_well.InkWell.new({onTap: this.onTap, child: new basic.Center.new({child: new container.Container.new({width: screenWidth * 0.6, height: this.isPrimary ? screenHeight * 0.054 : screenHeight * 0.04, decoration: new box_decoration.BoxDecoration.new({color: this.isPrimary ? new ui.Color.fromRGBO(40, 16, 191, 1) : colors.Colors.transparent, borderRadius: new border_radius.BorderRadius.circular(15), border: this.isPrimary ? null : box_border.Border.all({color: new ui.Color.fromRGBO(40, 16, 191, 0.5), width: 0.5})}), child: new basic.Center.new({child: new text$.Text.new(this.label, {style: new text_style.TextStyle.new({color: this.isPrimary ? colors.Colors.white : new ui.Color.fromARGB(195, 0, 0, 0), fontSize: screenWidth * 0.04, fontWeight: this.isPrimary ? ui.FontWeight.bold : ui.FontWeight.normal})})})})})});
    }
  };
  (action_button.ActionButton.new = function(opts) {
    let label = opts && 'label' in opts ? opts.label : null;
    let onTap = opts && 'onTap' in opts ? opts.onTap : null;
    let isPrimary = opts && 'isPrimary' in opts ? opts.isPrimary : false;
    this[label$] = label;
    this[onTap$] = onTap;
    this[isPrimary$] = isPrimary;
    action_button.ActionButton.__proto__.new.call(this);
    ;
  }).prototype = action_button.ActionButton.prototype;
  dart.addTypeTests(action_button.ActionButton);
  dart.addTypeCaches(action_button.ActionButton);
  dart.setMethodSignature(action_button.ActionButton, () => ({
    __proto__: dart.getMethods(action_button.ActionButton.__proto__),
    build: dart.fnType(framework.Widget, [framework.BuildContext])
  }));
  dart.setLibraryUri(action_button.ActionButton, I[33]);
  dart.setFieldSignature(action_button.ActionButton, () => ({
    __proto__: dart.getFields(action_button.ActionButton.__proto__),
    label: dart.finalFieldType(core.String),
    onTap: dart.finalFieldType(dart.fnType(dart.void, [])),
    isPrimary: dart.finalFieldType(core.bool)
  }));
  var cameraId$ = dart.privateName(camera_event, "CameraEvent.cameraId");
  camera_event.CameraEvent = class CameraEvent extends core.Object {
    get cameraId() {
      return this[cameraId$];
    }
    set cameraId(value) {
      super.cameraId = value;
    }
    _equals(other) {
      if (other == null) return false;
      return this === other || camera_event.CameraEvent.is(other) && this[$runtimeType]._equals(other[$runtimeType]) && this.cameraId === other.cameraId;
    }
    get hashCode() {
      return this.cameraId[$hashCode];
    }
  };
  (camera_event.CameraEvent.new = function(cameraId) {
    this[cameraId$] = cameraId;
    ;
  }).prototype = camera_event.CameraEvent.prototype;
  dart.addTypeTests(camera_event.CameraEvent);
  dart.addTypeCaches(camera_event.CameraEvent);
  dart.setLibraryUri(camera_event.CameraEvent, I[34]);
  dart.setFieldSignature(camera_event.CameraEvent, () => ({
    __proto__: dart.getFields(camera_event.CameraEvent.__proto__),
    cameraId: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(camera_event.CameraEvent, ['_equals']);
  dart.defineExtensionAccessors(camera_event.CameraEvent, ['hashCode']);
  var previewWidth$ = dart.privateName(camera_event, "CameraInitializedEvent.previewWidth");
  var previewHeight$ = dart.privateName(camera_event, "CameraInitializedEvent.previewHeight");
  var exposureMode$ = dart.privateName(camera_event, "CameraInitializedEvent.exposureMode");
  var focusMode$ = dart.privateName(camera_event, "CameraInitializedEvent.focusMode");
  var exposurePointSupported$ = dart.privateName(camera_event, "CameraInitializedEvent.exposurePointSupported");
  var focusPointSupported$ = dart.privateName(camera_event, "CameraInitializedEvent.focusPointSupported");
  camera_event.CameraInitializedEvent = class CameraInitializedEvent extends camera_event.CameraEvent {
    get previewWidth() {
      return this[previewWidth$];
    }
    set previewWidth(value) {
      super.previewWidth = value;
    }
    get previewHeight() {
      return this[previewHeight$];
    }
    set previewHeight(value) {
      super.previewHeight = value;
    }
    get exposureMode() {
      return this[exposureMode$];
    }
    set exposureMode(value) {
      super.exposureMode = value;
    }
    get focusMode() {
      return this[focusMode$];
    }
    set focusMode(value) {
      super.focusMode = value;
    }
    get exposurePointSupported() {
      return this[exposurePointSupported$];
    }
    set exposurePointSupported(value) {
      super.exposurePointSupported = value;
    }
    get focusPointSupported() {
      return this[focusPointSupported$];
    }
    set focusPointSupported(value) {
      super.focusPointSupported = value;
    }
    static ['_#new#tearOff'](cameraId, previewWidth, previewHeight, exposureMode, exposurePointSupported, focusMode, focusPointSupported) {
      return new camera_event.CameraInitializedEvent.new(cameraId, previewWidth, previewHeight, exposureMode, exposurePointSupported, focusMode, focusPointSupported);
    }
    static ['_#fromJson#tearOff'](json) {
      return new camera_event.CameraInitializedEvent.fromJson(json);
    }
    toJson() {
      return new (T$.IdentityMapOfString$Object()).from(["cameraId", this.cameraId, "previewWidth", this.previewWidth, "previewHeight", this.previewHeight, "exposureMode", exposure_mode.serializeExposureMode(this.exposureMode), "exposurePointSupported", this.exposurePointSupported, "focusMode", focus_mode.serializeFocusMode(this.focusMode), "focusPointSupported", this.focusPointSupported]);
    }
    _equals(other) {
      if (other == null) return false;
      return this === other || super._equals(other) && camera_event.CameraInitializedEvent.is(other) && this[$runtimeType]._equals(other[$runtimeType]) && this.previewWidth === other.previewWidth && this.previewHeight === other.previewHeight && this.exposureMode === other.exposureMode && this.exposurePointSupported === other.exposurePointSupported && this.focusMode === other.focusMode && this.focusPointSupported === other.focusPointSupported;
    }
    get hashCode() {
      return core.Object.hash(super.hashCode, this.previewWidth, this.previewHeight, this.exposureMode, this.exposurePointSupported, this.focusMode, this.focusPointSupported);
    }
  };
  (camera_event.CameraInitializedEvent.new = function(cameraId, previewWidth, previewHeight, exposureMode, exposurePointSupported, focusMode, focusPointSupported) {
    this[previewWidth$] = previewWidth;
    this[previewHeight$] = previewHeight;
    this[exposureMode$] = exposureMode;
    this[exposurePointSupported$] = exposurePointSupported;
    this[focusMode$] = focusMode;
    this[focusPointSupported$] = focusPointSupported;
    camera_event.CameraInitializedEvent.__proto__.new.call(this, cameraId);
    ;
  }).prototype = camera_event.CameraInitializedEvent.prototype;
  (camera_event.CameraInitializedEvent.fromJson = function(json) {
    let t41, t41$;
    this[previewWidth$] = core.double.as(dart.nullCheck(json[$_get]("previewWidth")));
    this[previewHeight$] = core.double.as(dart.nullCheck(json[$_get]("previewHeight")));
    this[exposureMode$] = exposure_mode.deserializeExposureMode(core.String.as(dart.nullCheck(json[$_get]("exposureMode"))));
    this[exposurePointSupported$] = (t41 = T$.boolN().as(json[$_get]("exposurePointSupported")), t41 == null ? false : t41);
    this[focusMode$] = focus_mode.deserializeFocusMode(core.String.as(dart.nullCheck(json[$_get]("focusMode"))));
    this[focusPointSupported$] = (t41$ = T$.boolN().as(json[$_get]("focusPointSupported")), t41$ == null ? false : t41$);
    camera_event.CameraInitializedEvent.__proto__.new.call(this, core.int.as(dart.nullCheck(json[$_get]("cameraId"))));
    ;
  }).prototype = camera_event.CameraInitializedEvent.prototype;
  dart.addTypeTests(camera_event.CameraInitializedEvent);
  dart.addTypeCaches(camera_event.CameraInitializedEvent);
  dart.setMethodSignature(camera_event.CameraInitializedEvent, () => ({
    __proto__: dart.getMethods(camera_event.CameraInitializedEvent.__proto__),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(camera_event.CameraInitializedEvent, I[34]);
  dart.setFieldSignature(camera_event.CameraInitializedEvent, () => ({
    __proto__: dart.getFields(camera_event.CameraInitializedEvent.__proto__),
    previewWidth: dart.finalFieldType(core.double),
    previewHeight: dart.finalFieldType(core.double),
    exposureMode: dart.finalFieldType(exposure_mode.ExposureMode),
    focusMode: dart.finalFieldType(focus_mode.FocusMode),
    exposurePointSupported: dart.finalFieldType(core.bool),
    focusPointSupported: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(camera_event.CameraInitializedEvent, ['_equals']);
  dart.defineExtensionAccessors(camera_event.CameraInitializedEvent, ['hashCode']);
  var captureWidth$ = dart.privateName(camera_event, "CameraResolutionChangedEvent.captureWidth");
  var captureHeight$ = dart.privateName(camera_event, "CameraResolutionChangedEvent.captureHeight");
  camera_event.CameraResolutionChangedEvent = class CameraResolutionChangedEvent extends camera_event.CameraEvent {
    get captureWidth() {
      return this[captureWidth$];
    }
    set captureWidth(value) {
      super.captureWidth = value;
    }
    get captureHeight() {
      return this[captureHeight$];
    }
    set captureHeight(value) {
      super.captureHeight = value;
    }
    static ['_#new#tearOff'](cameraId, captureWidth, captureHeight) {
      return new camera_event.CameraResolutionChangedEvent.new(cameraId, captureWidth, captureHeight);
    }
    static ['_#fromJson#tearOff'](json) {
      return new camera_event.CameraResolutionChangedEvent.fromJson(json);
    }
    toJson() {
      return new (T$.IdentityMapOfString$Object()).from(["cameraId", this.cameraId, "captureWidth", this.captureWidth, "captureHeight", this.captureHeight]);
    }
    _equals(other) {
      if (other == null) return false;
      return this === other || camera_event.CameraResolutionChangedEvent.is(other) && super._equals(other) && this[$runtimeType]._equals(other[$runtimeType]) && this.captureWidth === other.captureWidth && this.captureHeight === other.captureHeight;
    }
    get hashCode() {
      return core.Object.hash(super.hashCode, this.captureWidth, this.captureHeight);
    }
  };
  (camera_event.CameraResolutionChangedEvent.new = function(cameraId, captureWidth, captureHeight) {
    this[captureWidth$] = captureWidth;
    this[captureHeight$] = captureHeight;
    camera_event.CameraResolutionChangedEvent.__proto__.new.call(this, cameraId);
    ;
  }).prototype = camera_event.CameraResolutionChangedEvent.prototype;
  (camera_event.CameraResolutionChangedEvent.fromJson = function(json) {
    this[captureWidth$] = core.double.as(dart.nullCheck(json[$_get]("captureWidth")));
    this[captureHeight$] = core.double.as(dart.nullCheck(json[$_get]("captureHeight")));
    camera_event.CameraResolutionChangedEvent.__proto__.new.call(this, core.int.as(dart.nullCheck(json[$_get]("cameraId"))));
    ;
  }).prototype = camera_event.CameraResolutionChangedEvent.prototype;
  dart.addTypeTests(camera_event.CameraResolutionChangedEvent);
  dart.addTypeCaches(camera_event.CameraResolutionChangedEvent);
  dart.setMethodSignature(camera_event.CameraResolutionChangedEvent, () => ({
    __proto__: dart.getMethods(camera_event.CameraResolutionChangedEvent.__proto__),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(camera_event.CameraResolutionChangedEvent, I[34]);
  dart.setFieldSignature(camera_event.CameraResolutionChangedEvent, () => ({
    __proto__: dart.getFields(camera_event.CameraResolutionChangedEvent.__proto__),
    captureWidth: dart.finalFieldType(core.double),
    captureHeight: dart.finalFieldType(core.double)
  }));
  dart.defineExtensionMethods(camera_event.CameraResolutionChangedEvent, ['_equals']);
  dart.defineExtensionAccessors(camera_event.CameraResolutionChangedEvent, ['hashCode']);
  camera_event.CameraClosingEvent = class CameraClosingEvent extends camera_event.CameraEvent {
    static ['_#new#tearOff'](cameraId) {
      return new camera_event.CameraClosingEvent.new(cameraId);
    }
    static ['_#fromJson#tearOff'](json) {
      return new camera_event.CameraClosingEvent.fromJson(json);
    }
    toJson() {
      return new (T$.IdentityMapOfString$Object()).from(["cameraId", this.cameraId]);
    }
    _equals(other) {
      if (other == null) return false;
      return this === other || super._equals(other) && camera_event.CameraClosingEvent.is(other) && this[$runtimeType]._equals(other[$runtimeType]);
    }
    get hashCode() {
      return super.hashCode;
    }
  };
  (camera_event.CameraClosingEvent.new = function(cameraId) {
    camera_event.CameraClosingEvent.__proto__.new.call(this, cameraId);
    ;
  }).prototype = camera_event.CameraClosingEvent.prototype;
  (camera_event.CameraClosingEvent.fromJson = function(json) {
    camera_event.CameraClosingEvent.__proto__.new.call(this, core.int.as(dart.nullCheck(json[$_get]("cameraId"))));
    ;
  }).prototype = camera_event.CameraClosingEvent.prototype;
  dart.addTypeTests(camera_event.CameraClosingEvent);
  dart.addTypeCaches(camera_event.CameraClosingEvent);
  dart.setMethodSignature(camera_event.CameraClosingEvent, () => ({
    __proto__: dart.getMethods(camera_event.CameraClosingEvent.__proto__),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(camera_event.CameraClosingEvent, I[34]);
  dart.defineExtensionMethods(camera_event.CameraClosingEvent, ['_equals']);
  dart.defineExtensionAccessors(camera_event.CameraClosingEvent, ['hashCode']);
  var description$0 = dart.privateName(camera_event, "CameraErrorEvent.description");
  camera_event.CameraErrorEvent = class CameraErrorEvent extends camera_event.CameraEvent {
    get description() {
      return this[description$0];
    }
    set description(value) {
      super.description = value;
    }
    static ['_#new#tearOff'](cameraId, description) {
      return new camera_event.CameraErrorEvent.new(cameraId, description);
    }
    static ['_#fromJson#tearOff'](json) {
      return new camera_event.CameraErrorEvent.fromJson(json);
    }
    toJson() {
      return new (T$.IdentityMapOfString$Object()).from(["cameraId", this.cameraId, "description", this.description]);
    }
    _equals(other) {
      if (other == null) return false;
      return this === other || super._equals(other) && camera_event.CameraErrorEvent.is(other) && this[$runtimeType]._equals(other[$runtimeType]) && this.description === other.description;
    }
    get hashCode() {
      return core.Object.hash(super.hashCode, this.description);
    }
  };
  (camera_event.CameraErrorEvent.new = function(cameraId, description) {
    this[description$0] = description;
    camera_event.CameraErrorEvent.__proto__.new.call(this, cameraId);
    ;
  }).prototype = camera_event.CameraErrorEvent.prototype;
  (camera_event.CameraErrorEvent.fromJson = function(json) {
    this[description$0] = core.String.as(dart.nullCheck(json[$_get]("description")));
    camera_event.CameraErrorEvent.__proto__.new.call(this, core.int.as(dart.nullCheck(json[$_get]("cameraId"))));
    ;
  }).prototype = camera_event.CameraErrorEvent.prototype;
  dart.addTypeTests(camera_event.CameraErrorEvent);
  dart.addTypeCaches(camera_event.CameraErrorEvent);
  dart.setMethodSignature(camera_event.CameraErrorEvent, () => ({
    __proto__: dart.getMethods(camera_event.CameraErrorEvent.__proto__),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(camera_event.CameraErrorEvent, I[34]);
  dart.setFieldSignature(camera_event.CameraErrorEvent, () => ({
    __proto__: dart.getFields(camera_event.CameraErrorEvent.__proto__),
    description: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(camera_event.CameraErrorEvent, ['_equals']);
  dart.defineExtensionAccessors(camera_event.CameraErrorEvent, ['hashCode']);
  var file$ = dart.privateName(camera_event, "VideoRecordedEvent.file");
  var maxVideoDuration$ = dart.privateName(camera_event, "VideoRecordedEvent.maxVideoDuration");
  camera_event.VideoRecordedEvent = class VideoRecordedEvent extends camera_event.CameraEvent {
    get file() {
      return this[file$];
    }
    set file(value) {
      super.file = value;
    }
    get maxVideoDuration() {
      return this[maxVideoDuration$];
    }
    set maxVideoDuration(value) {
      super.maxVideoDuration = value;
    }
    static ['_#new#tearOff'](cameraId, file, maxVideoDuration) {
      return new camera_event.VideoRecordedEvent.new(cameraId, file, maxVideoDuration);
    }
    static ['_#fromJson#tearOff'](json) {
      return new camera_event.VideoRecordedEvent.fromJson(json);
    }
    toJson() {
      let t41;
      return new (T$.IdentityMapOfString$ObjectN()).from(["cameraId", this.cameraId, "path", this.file.path, "maxVideoDuration", (t41 = this.maxVideoDuration, t41 == null ? null : t41.inMilliseconds)]);
    }
    _equals(other) {
      if (other == null) return false;
      return this === other || super._equals(other) && camera_event.VideoRecordedEvent.is(other) && this[$runtimeType]._equals(other[$runtimeType]) && dart.equals(this.maxVideoDuration, other.maxVideoDuration);
    }
    get hashCode() {
      return core.Object.hash(super.hashCode, this.file, this.maxVideoDuration);
    }
  };
  (camera_event.VideoRecordedEvent.new = function(cameraId, file, maxVideoDuration) {
    this[file$] = file;
    this[maxVideoDuration$] = maxVideoDuration;
    camera_event.VideoRecordedEvent.__proto__.new.call(this, cameraId);
    ;
  }).prototype = camera_event.VideoRecordedEvent.prototype;
  (camera_event.VideoRecordedEvent.fromJson = function(json) {
    this[file$] = new html$.XFile.new(core.String.as(dart.nullCheck(json[$_get]("path"))));
    this[maxVideoDuration$] = json[$_get]("maxVideoDuration") != null ? new core.Duration.new({milliseconds: core.int.as(json[$_get]("maxVideoDuration"))}) : null;
    camera_event.VideoRecordedEvent.__proto__.new.call(this, core.int.as(dart.nullCheck(json[$_get]("cameraId"))));
    ;
  }).prototype = camera_event.VideoRecordedEvent.prototype;
  dart.addTypeTests(camera_event.VideoRecordedEvent);
  dart.addTypeCaches(camera_event.VideoRecordedEvent);
  dart.setMethodSignature(camera_event.VideoRecordedEvent, () => ({
    __proto__: dart.getMethods(camera_event.VideoRecordedEvent.__proto__),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(camera_event.VideoRecordedEvent, I[34]);
  dart.setFieldSignature(camera_event.VideoRecordedEvent, () => ({
    __proto__: dart.getFields(camera_event.VideoRecordedEvent.__proto__),
    file: dart.finalFieldType(html$.XFile),
    maxVideoDuration: dart.finalFieldType(dart.nullable(core.Duration))
  }));
  dart.defineExtensionMethods(camera_event.VideoRecordedEvent, ['_equals']);
  dart.defineExtensionAccessors(camera_event.VideoRecordedEvent, ['hashCode']);
  device_event.DeviceEvent = class DeviceEvent extends core.Object {};
  (device_event.DeviceEvent.new = function() {
    ;
  }).prototype = device_event.DeviceEvent.prototype;
  dart.addTypeTests(device_event.DeviceEvent);
  dart.addTypeCaches(device_event.DeviceEvent);
  dart.setLibraryUri(device_event.DeviceEvent, I[35]);
  var orientation$ = dart.privateName(device_event, "DeviceOrientationChangedEvent.orientation");
  device_event.DeviceOrientationChangedEvent = class DeviceOrientationChangedEvent extends device_event.DeviceEvent {
    get orientation() {
      return this[orientation$];
    }
    set orientation(value) {
      super.orientation = value;
    }
    static ['_#new#tearOff'](orientation) {
      return new device_event.DeviceOrientationChangedEvent.new(orientation);
    }
    static ['_#fromJson#tearOff'](json) {
      return new device_event.DeviceOrientationChangedEvent.fromJson(json);
    }
    toJson() {
      return new (T$.IdentityMapOfString$Object()).from(["orientation", utils.serializeDeviceOrientation(this.orientation)]);
    }
    _equals(other) {
      if (other == null) return false;
      return this === other || device_event.DeviceOrientationChangedEvent.is(other) && this[$runtimeType]._equals(other[$runtimeType]) && this.orientation === other.orientation;
    }
    get hashCode() {
      return this.orientation[$hashCode];
    }
  };
  (device_event.DeviceOrientationChangedEvent.new = function(orientation) {
    this[orientation$] = orientation;
    device_event.DeviceOrientationChangedEvent.__proto__.new.call(this);
    ;
  }).prototype = device_event.DeviceOrientationChangedEvent.prototype;
  (device_event.DeviceOrientationChangedEvent.fromJson = function(json) {
    this[orientation$] = utils.deserializeDeviceOrientation(core.String.as(dart.nullCheck(json[$_get]("orientation"))));
    device_event.DeviceOrientationChangedEvent.__proto__.new.call(this);
    ;
  }).prototype = device_event.DeviceOrientationChangedEvent.prototype;
  dart.addTypeTests(device_event.DeviceOrientationChangedEvent);
  dart.addTypeCaches(device_event.DeviceOrientationChangedEvent);
  dart.setMethodSignature(device_event.DeviceOrientationChangedEvent, () => ({
    __proto__: dart.getMethods(device_event.DeviceOrientationChangedEvent.__proto__),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(device_event.DeviceOrientationChangedEvent, I[35]);
  dart.setFieldSignature(device_event.DeviceOrientationChangedEvent, () => ({
    __proto__: dart.getFields(device_event.DeviceOrientationChangedEvent.__proto__),
    orientation: dart.finalFieldType(system_chrome.DeviceOrientation)
  }));
  dart.defineExtensionMethods(device_event.DeviceOrientationChangedEvent, ['_equals']);
  dart.defineExtensionAccessors(device_event.DeviceOrientationChangedEvent, ['hashCode']);
  var resolutionPreset$ = dart.privateName(media_settings, "MediaSettings.resolutionPreset");
  var fps$ = dart.privateName(media_settings, "MediaSettings.fps");
  var videoBitrate$ = dart.privateName(media_settings, "MediaSettings.videoBitrate");
  var audioBitrate$ = dart.privateName(media_settings, "MediaSettings.audioBitrate");
  var enableAudio$ = dart.privateName(media_settings, "MediaSettings.enableAudio");
  media_settings.MediaSettings = class MediaSettings extends core.Object {
    get resolutionPreset() {
      return this[resolutionPreset$];
    }
    set resolutionPreset(value) {
      super.resolutionPreset = value;
    }
    get fps() {
      return this[fps$];
    }
    set fps(value) {
      super.fps = value;
    }
    get videoBitrate() {
      return this[videoBitrate$];
    }
    set videoBitrate(value) {
      super.videoBitrate = value;
    }
    get audioBitrate() {
      return this[audioBitrate$];
    }
    set audioBitrate(value) {
      super.audioBitrate = value;
    }
    get enableAudio() {
      return this[enableAudio$];
    }
    set enableAudio(value) {
      super.enableAudio = value;
    }
    static ['_#new#tearOff'](opts) {
      let resolutionPreset = opts && 'resolutionPreset' in opts ? opts.resolutionPreset : null;
      let fps = opts && 'fps' in opts ? opts.fps : null;
      let videoBitrate = opts && 'videoBitrate' in opts ? opts.videoBitrate : null;
      let audioBitrate = opts && 'audioBitrate' in opts ? opts.audioBitrate : null;
      let enableAudio = opts && 'enableAudio' in opts ? opts.enableAudio : false;
      return new media_settings.MediaSettings.new({resolutionPreset: resolutionPreset, fps: fps, videoBitrate: videoBitrate, audioBitrate: audioBitrate, enableAudio: enableAudio});
    }
    _equals(other) {
      if (other == null) return false;
      if (other === this) {
        return true;
      }
      if (!other[$runtimeType]._equals(this[$runtimeType])) {
        return false;
      }
      return media_settings.MediaSettings.is(other) && this.resolutionPreset == other.resolutionPreset && this.fps == other.fps && this.videoBitrate == other.videoBitrate && this.audioBitrate == other.audioBitrate && this.enableAudio === other.enableAudio;
    }
    get hashCode() {
      return core.Object.hash(this.resolutionPreset, this.fps, this.videoBitrate, this.audioBitrate, this.enableAudio);
    }
    toString() {
      return "MediaSettings{" + "resolutionPreset: " + dart.str(this.resolutionPreset) + ", " + "fps: " + dart.str(this.fps) + ", " + "videoBitrate: " + dart.str(this.videoBitrate) + ", " + "audioBitrate: " + dart.str(this.audioBitrate) + ", " + "enableAudio: " + dart.str(this.enableAudio) + "}";
    }
  };
  (media_settings.MediaSettings.new = function(opts) {
    let resolutionPreset = opts && 'resolutionPreset' in opts ? opts.resolutionPreset : null;
    let fps = opts && 'fps' in opts ? opts.fps : null;
    let videoBitrate = opts && 'videoBitrate' in opts ? opts.videoBitrate : null;
    let audioBitrate = opts && 'audioBitrate' in opts ? opts.audioBitrate : null;
    let enableAudio = opts && 'enableAudio' in opts ? opts.enableAudio : false;
    this[resolutionPreset$] = resolutionPreset;
    this[fps$] = fps;
    this[videoBitrate$] = videoBitrate;
    this[audioBitrate$] = audioBitrate;
    this[enableAudio$] = enableAudio;
    if (!(fps == null || dart.notNull(fps) > 0)) dart.assertFailed("fps must be null or greater than zero", I[36], 22, 16, "fps == null || fps > 0");
    if (!(videoBitrate == null || dart.notNull(videoBitrate) > 0)) dart.assertFailed("videoBitrate must be null or greater than zero", I[36], 23, 16, "videoBitrate == null || videoBitrate > 0");
    if (!(audioBitrate == null || dart.notNull(audioBitrate) > 0)) dart.assertFailed("audioBitrate must be null or greater than zero", I[36], 25, 16, "audioBitrate == null || audioBitrate > 0");
    ;
  }).prototype = media_settings.MediaSettings.prototype;
  dart.addTypeTests(media_settings.MediaSettings);
  dart.addTypeCaches(media_settings.MediaSettings);
  dart.setLibraryUri(media_settings.MediaSettings, I[37]);
  dart.setFieldSignature(media_settings.MediaSettings, () => ({
    __proto__: dart.getFields(media_settings.MediaSettings.__proto__),
    resolutionPreset: dart.finalFieldType(dart.nullable(resolution_preset.ResolutionPreset)),
    fps: dart.finalFieldType(dart.nullable(core.int)),
    videoBitrate: dart.finalFieldType(dart.nullable(core.int)),
    audioBitrate: dart.finalFieldType(dart.nullable(core.int)),
    enableAudio: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(media_settings.MediaSettings, ['_equals', 'toString']);
  dart.defineExtensionAccessors(media_settings.MediaSettings, ['hashCode']);
  async_expand['AsyncExpand|concurrentAsyncExpand'] = function AsyncExpand$124concurrentAsyncExpand(T, S, $this, convert) {
    let controller = $this.isBroadcast ? async.StreamController$(S).broadcast({sync: true}) : async.StreamController$(S).new({sync: true});
    controller.onListen = dart.fn(() => {
      let t42;
      let subscriptions = T$.JSArrayOfStreamSubscription().of([]);
      let outerSubscription = $this.map(async.Stream$(S), convert).listen(dart.fn(inner => {
        if ($this.isBroadcast && !inner.isBroadcast) {
          inner = inner.asBroadcastStream();
        }
        let subscription = inner.listen(dart.fnType(dart.void, [S]).as(dart.bind(controller, 'add')), {onError: dart.bind(controller, 'addError')});
        subscription.onDone(dart.fn(() => {
          subscriptions[$remove](subscription);
          if (subscriptions[$isEmpty]) controller.close();
        }, T$.VoidTovoid()));
        subscriptions[$add](subscription);
      }, dart.fnType(dart.void, [async.Stream$(S)])), {onError: dart.bind(controller, 'addError')});
      outerSubscription.onDone(dart.fn(() => {
        subscriptions[$remove](outerSubscription);
        if (subscriptions[$isEmpty]) controller.close();
      }, T$.VoidTovoid()));
      subscriptions[$add](outerSubscription);
      if (!$this.isBroadcast) {
        t42 = controller;
        (() => {
          t42.onPause = dart.fn(() => {
            for (let subscription of subscriptions) {
              subscription.pause();
            }
          }, T$.VoidTovoid());
          t42.onResume = dart.fn(() => {
            for (let subscription of subscriptions) {
              subscription.resume();
            }
          }, T$.VoidTovoid());
          return t42;
        })();
      }
      controller.onCancel = dart.fn(() => {
        let t43;
        if (subscriptions[$isEmpty]) return null;
        let cancels = (t43 = (() => {
          let t42 = T$.JSArrayOfFutureOfvoid().of([]);
          for (let s of subscriptions)
            t42.push(s.cancel());
          return t42;
        })(), (() => {
          t43[$removeWhere](dart.fn(f => f == null, T$.ObjectNTobool()));
          return t43;
        })());
        return async.Future.wait(dart.void, cancels).then(dart.void, dart.fn(_ => null, T$.ListOfvoidToNull()));
      }, T$.VoidToFutureNOfvoid());
    }, T$.VoidTovoid());
    return controller.stream;
  };
  async_expand['AsyncExpand|get#concurrentAsyncExpand'] = function AsyncExpand$124get$35concurrentAsyncExpand(T, $this) {
    return dart.fn((S, convert) => async_expand['AsyncExpand|concurrentAsyncExpand'](T, S, $this, convert), dart.gFnType(S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      return [__t$StreamOfS(), [dart.fnType(__t$StreamOfS(), [T])]];
    }, S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      return [T$.ObjectN()];
    }));
  };
  async_map['AsyncMap|asyncMapBuffer'] = function AsyncMap$124asyncMapBuffer(T, S, $this, convert) {
    let t45;
    let workFinished = (t45 = T$.StreamControllerOfvoid().new(), (() => {
      t45.add(null);
      return t45;
    })());
    return async_map['AsyncMap|_asyncMapThen'](core.List$(T), S, rate_limit['RateLimit|buffer'](T, $this, workFinished.stream), convert, T$.voidTovoid().as(dart.bind(workFinished, 'add')));
  };
  async_map['AsyncMap|get#asyncMapBuffer'] = function AsyncMap$124get$35asyncMapBuffer(T, $this) {
    return dart.fn((S, convert) => async_map['AsyncMap|asyncMapBuffer'](T, S, $this, convert), dart.gFnType(S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      var __t$FutureOfS = () => (__t$FutureOfS = dart.constFn(async.Future$(S)))();
      return [__t$StreamOfS(), [dart.fnType(__t$FutureOfS(), [core.List$(T)])]];
    }, S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      var __t$FutureOfS = () => (__t$FutureOfS = dart.constFn(async.Future$(S)))();
      return [T$.ObjectN()];
    }));
  };
  async_map['AsyncMap|asyncMapSample'] = function AsyncMap$124asyncMapSample(T, S, $this, convert) {
    let t47;
    let workFinished = (t47 = T$.StreamControllerOfvoid().new(), (() => {
      t47.add(null);
      return t47;
    })());
    return async_map['AsyncMap|_asyncMapThen'](T, S, aggregate_sample['AggregateSample|aggregateSample'](T, T, $this, {trigger: workFinished.stream, aggregate: dart.gbind(C[1578] || CT.C1578, T), longPoll: true, onEmpty: C[1579] || CT.C1579}), convert, T$.voidTovoid().as(dart.bind(workFinished, 'add')));
  };
  async_map['AsyncMap|get#asyncMapSample'] = function AsyncMap$124get$35asyncMapSample(T, $this) {
    return dart.fn((S, convert) => async_map['AsyncMap|asyncMapSample'](T, S, $this, convert), dart.gFnType(S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      var __t$FutureOfS = () => (__t$FutureOfS = dart.constFn(async.Future$(S)))();
      return [__t$StreamOfS(), [dart.fnType(__t$FutureOfS(), [T])]];
    }, S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      var __t$FutureOfS = () => (__t$FutureOfS = dart.constFn(async.Future$(S)))();
      return [T$.ObjectN()];
    }));
  };
  async_map['AsyncMap|concurrentAsyncMap'] = function AsyncMap$124concurrentAsyncMap(T, S, $this, convert) {
    let valuesWaiting = 0;
    let sourceDone = false;
    return from_handlers['TransformByHandlers|transformByHandlers'](T, S, $this, {onData: dart.fn((element, sink) => {
        valuesWaiting = valuesWaiting + 1;
        dart.fn(() => async.async(core.Null, function*() {
          try {
            sink.add(yield convert(element));
          } catch (e$) {
            let e = dart.getThrown(e$);
            let st = dart.stackTrace(e$);
            if (core.Object.is(e)) {
              sink.addError(e, st);
            } else
              throw e$;
          }
          valuesWaiting = valuesWaiting - 1;
          if (valuesWaiting <= 0 && sourceDone) sink.close();
        }), T$.VoidToFutureOfNull())();
      }, dart.fnType(dart.void, [T, async.EventSink$(S)])), onDone: dart.fn(sink => {
        sourceDone = true;
        if (valuesWaiting <= 0) sink.close();
      }, dart.fnType(dart.void, [async.EventSink$(S)]))});
  };
  async_map['AsyncMap|get#concurrentAsyncMap'] = function AsyncMap$124get$35concurrentAsyncMap(T, $this) {
    return dart.fn((S, convert) => async_map['AsyncMap|concurrentAsyncMap'](T, S, $this, convert), dart.gFnType(S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      var __t$FutureOrOfS = () => (__t$FutureOrOfS = dart.constFn(async.FutureOr$(S)))();
      return [__t$StreamOfS(), [dart.fnType(__t$FutureOrOfS(), [T])]];
    }, S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      var __t$FutureOrOfS = () => (__t$FutureOrOfS = dart.constFn(async.FutureOr$(S)))();
      return [T$.ObjectN()];
    }));
  };
  async_map['AsyncMap|_asyncMapThen'] = function AsyncMap$124_asyncMapThen(T, S, $this, convert, then) {
    let pendingEvent = null;
    return from_handlers['TransformByHandlers|transformByHandlers'](T, S, $this, {onData: dart.fn((event, sink) => {
        pendingEvent = convert(event).then(dart.void, dart.fnType(dart.void, [S]).as(dart.bind(sink, 'add'))).catchError(dart.bind(sink, 'addError')).then(dart.void, then);
      }, dart.fnType(dart.void, [T, async.EventSink$(S)])), onDone: dart.fn(sink => {
        if (pendingEvent != null) {
          dart.nullCheck(pendingEvent).then(dart.void, dart.fn(_ => sink.close(), T$.voidTovoid()));
        } else {
          sink.close();
        }
      }, dart.fnType(dart.void, [async.EventSink$(S)]))});
  };
  async_map['AsyncMap|get#_asyncMapThen'] = function AsyncMap$124get$35_asyncMapThen(T, $this) {
    return dart.fn((S, convert, then) => async_map['AsyncMap|_asyncMapThen'](T, S, $this, convert, then), dart.gFnType(S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      var __t$FutureOfS = () => (__t$FutureOfS = dart.constFn(async.Future$(S)))();
      return [__t$StreamOfS(), [dart.fnType(__t$FutureOfS(), [T]), T$.voidTovoid()]];
    }, S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      var __t$FutureOfS = () => (__t$FutureOfS = dart.constFn(async.Future$(S)))();
      return [T$.ObjectN()];
    }));
  };
  async_map._dropPrevious = function _dropPrevious(T, event, _) {
    return event;
  };
  async_map._ignore = function _ignore(T, sink) {
  };
  combine_latest['CombineLatest|combineLatest'] = function CombineLatest$124combineLatest(T, T2, S, $this, other, combine) {
    let controller = $this.isBroadcast ? async.StreamController$(S).broadcast({sync: true}) : async.StreamController$(S).new({sync: true});
    other = $this.isBroadcast && !other.isBroadcast ? other.asBroadcastStream() : other;
    let sourceSubscription = null;
    let otherSubscription = null;
    let sourceDone = false;
    let otherDone = false;
    let latestSource = null;
    let latestSource$35isSet = false;
    function latestSource$35get() {
      return latestSource$35isSet ? latestSource : dart.throw(new _internal.LateError.localNI("latestSource"));
    }
    function latestSource$35set(latestSource$35param) {
      latestSource$35isSet = true;
      return latestSource = latestSource$35param;
    }
    let latestOther = null;
    let latestOther$35isSet = false;
    function latestOther$35get() {
      return latestOther$35isSet ? latestOther : dart.throw(new _internal.LateError.localNI("latestOther"));
    }
    function latestOther$35set(latestOther$35param) {
      latestOther$35isSet = true;
      return latestOther = latestOther$35param;
    }
    let sourceStarted = false;
    let otherStarted = false;
    function emitCombined() {
      if (!sourceStarted || !otherStarted) return;
      let result = null;
      try {
        result = combine(latestSource$35get(), latestOther$35get());
      } catch (e$) {
        let e = dart.getThrown(e$);
        let s = dart.stackTrace(e$);
        if (core.Object.is(e)) {
          controller.addError(e, s);
          return;
        } else
          throw e$;
      }
      if (async.Future$(S).is(result)) {
        dart.nullCheck(sourceSubscription).pause();
        dart.nullCheck(otherSubscription).pause();
        result.then(dart.void, dart.fnType(dart.void, [S]).as(dart.bind(controller, 'add')), {onError: dart.bind(controller, 'addError')}).whenComplete(dart.fn(() => {
          dart.nullCheck(sourceSubscription).resume();
          dart.nullCheck(otherSubscription).resume();
        }, T$.VoidToNull()));
      } else {
        controller.add(result);
      }
    }
    dart.fn(emitCombined, T$.VoidTovoid());
    controller.onListen = dart.fn(() => {
      let t63;
      if (!(sourceSubscription == null)) dart.assertFailed(null, I[38], 81, 14, "sourceSubscription == null");
      sourceSubscription = $this.listen(dart.fn(s => {
        sourceStarted = true;
        latestSource$35set(s);
        emitCombined();
      }, dart.fnType(dart.void, [T])), {onError: dart.bind(controller, 'addError'), onDone: dart.fn(() => {
          sourceDone = true;
          if (otherDone) {
            controller.close();
          } else if (!sourceStarted) {
            dart.nullCheck(otherSubscription).cancel();
            controller.close();
          }
        }, T$.VoidTovoid())});
      otherSubscription = other.listen(dart.fn(o => {
        otherStarted = true;
        latestOther$35set(o);
        emitCombined();
      }, dart.fnType(dart.void, [T2])), {onError: dart.bind(controller, 'addError'), onDone: dart.fn(() => {
          otherDone = true;
          if (sourceDone) {
            controller.close();
          } else if (!otherStarted) {
            dart.nullCheck(sourceSubscription).cancel();
            controller.close();
          }
        }, T$.VoidTovoid())});
      if (!$this.isBroadcast) {
        t63 = controller;
        (() => {
          t63.onPause = dart.fn(() => {
            dart.nullCheck(sourceSubscription).pause();
            dart.nullCheck(otherSubscription).pause();
          }, T$.VoidTovoid());
          t63.onResume = dart.fn(() => {
            dart.nullCheck(sourceSubscription).resume();
            dart.nullCheck(otherSubscription).resume();
          }, T$.VoidTovoid());
          return t63;
        })();
      }
      controller.onCancel = dart.fn(() => {
        let t63;
        let cancels = (t63 = T$.JSArrayOfFutureOfvoid().of([dart.nullCheck(sourceSubscription).cancel(), dart.nullCheck(otherSubscription).cancel()]), (() => {
          t63[$removeWhere](dart.fn(f => f == null, T$.ObjectNTobool()));
          return t63;
        })());
        sourceSubscription = null;
        otherSubscription = null;
        return async.Future.wait(dart.void, cancels).then(dart.void, dart.fn(_ => null, T$.ListOfvoidToNull()));
      }, T$.VoidToFutureOfvoid());
    }, T$.VoidTovoid());
    return controller.stream;
  };
  combine_latest['CombineLatest|get#combineLatest'] = function CombineLatest$124get$35combineLatest(T, $this) {
    return dart.fn((T2, S, other, combine) => combine_latest['CombineLatest|combineLatest'](T, T2, S, $this, other, combine), dart.gFnType((T2, S) => {
      var __t$StreamOfT2 = () => (__t$StreamOfT2 = dart.constFn(async.Stream$(T2)))();
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      var __t$FutureOrOfS = () => (__t$FutureOrOfS = dart.constFn(async.FutureOr$(S)))();
      return [__t$StreamOfS(), [__t$StreamOfT2(), dart.fnType(__t$FutureOrOfS(), [T, T2])]];
    }, (T2, S) => {
      var __t$StreamOfT2 = () => (__t$StreamOfT2 = dart.constFn(async.Stream$(T2)))();
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      var __t$FutureOrOfS = () => (__t$FutureOrOfS = dart.constFn(async.FutureOr$(S)))();
      return [T$.ObjectN(), T$.ObjectN()];
    }));
  };
  combine_latest['CombineLatest|combineLatestAll'] = function CombineLatest$124combineLatestAll(T, $this, others) {
    let controller = $this.isBroadcast ? async.StreamController$(core.List$(T)).broadcast({sync: true}) : async.StreamController$(core.List$(T)).new({sync: true});
    let allStreams = (() => {
      let t65 = _interceptors.JSArray$(async.Stream$(T)).of([$this]);
      for (let other of others)
        t65.push(!$this.isBroadcast || other.isBroadcast ? other : other.asBroadcastStream());
      return t65;
    })();
    controller.onListen = dart.fn(() => {
      let t66;
      let subscriptions = _interceptors.JSArray$(async.StreamSubscription$(T)).of([]);
      let latestData = core.List$(dart.nullable(T)).filled(allStreams[$length], null);
      let hasEmitted = T$.LinkedHashSetOfint().new();
      function handleData(index, data) {
        latestData[$_set](index, data);
        hasEmitted.add(index);
        if (hasEmitted[$length] === allStreams[$length]) {
          controller.add(core.List$(T).from(latestData));
        }
      }
      dart.fn(handleData, dart.fnType(dart.void, [core.int, T]));
      let streamId = 0;
      for (let stream of allStreams) {
        let index = streamId;
        let subscription = stream.listen(dart.fn(data => handleData(index, data), dart.fnType(dart.void, [T])), {onError: dart.bind(controller, 'addError')});
        subscription.onDone(dart.fn(() => {
          if (!subscriptions[$contains](subscription)) dart.assertFailed(null, I[38], 208, 18, "subscriptions.contains(subscription)");
          subscriptions[$remove](subscription);
          if (subscriptions[$isEmpty] || !hasEmitted.contains(index)) {
            controller.close();
          }
        }, T$.VoidTovoid()));
        subscriptions[$add](subscription);
        streamId = streamId + 1;
      }
      if (!$this.isBroadcast) {
        t66 = controller;
        (() => {
          t66.onPause = dart.fn(() => {
            for (let subscription of subscriptions) {
              subscription.pause();
            }
          }, T$.VoidTovoid());
          t66.onResume = dart.fn(() => {
            for (let subscription of subscriptions) {
              subscription.resume();
            }
          }, T$.VoidTovoid());
          return t66;
        })();
      }
      controller.onCancel = dart.fn(() => {
        let t67;
        if (subscriptions[$isEmpty]) return null;
        let cancels = (t67 = (() => {
          let t66 = T$.JSArrayOfFutureOfvoid().of([]);
          for (let s of subscriptions)
            t66.push(s.cancel());
          return t66;
        })(), (() => {
          t67[$removeWhere](dart.fn(f => f == null, T$.ObjectNTobool()));
          return t67;
        })());
        if (cancels[$isEmpty]) return null;
        return async.Future.wait(dart.void, cancels).then(dart.void, dart.fn(_ => null, T$.ListOfvoidToNull()));
      }, T$.VoidToFutureNOfvoid());
    }, T$.VoidTovoid());
    return controller.stream;
  };
  combine_latest['CombineLatest|get#combineLatestAll'] = function CombineLatest$124get$35combineLatestAll(T, $this) {
    return dart.fn(others => combine_latest['CombineLatest|combineLatestAll'](T, $this, others), dart.fnType(async.Stream$(core.List$(T)), [core.Iterable$(async.Stream$(T))]));
  };
  concatenate['Concatenate|followedBy'] = function Concatenate$124followedBy(T, $this, next) {
    let controller = $this.isBroadcast ? async.StreamController$(T).broadcast({sync: true}) : async.StreamController$(T).new({sync: true});
    next = $this.isBroadcast && !next.isBroadcast ? next.asBroadcastStream() : next;
    let subscription = null;
    let currentStream = $this;
    let thisDone = false;
    let secondDone = false;
    let currentDoneHandler = null;
    function currentDoneHandler$35get() {
      let t70;
      t70 = currentDoneHandler;
      return t70 == null ? dart.throw(new _internal.LateError.localNI("currentDoneHandler")) : t70;
    }
    function currentDoneHandler$35set(currentDoneHandler$35param) {
      return currentDoneHandler = currentDoneHandler$35param;
    }
    function listen() {
      subscription = currentStream.listen(dart.fnType(dart.void, [T]).as(dart.bind(controller, 'add')), {onError: dart.bind(controller, 'addError'), onDone: dart.fn(() => currentDoneHandler$35get()(), T$.VoidTovoid())});
    }
    dart.fn(listen, T$.VoidTovoid());
    function onSecondDone() {
      secondDone = true;
      controller.close();
    }
    dart.fn(onSecondDone, T$.VoidTovoid());
    function onThisDone() {
      thisDone = true;
      currentStream = next;
      currentDoneHandler$35set(onSecondDone);
      listen();
    }
    dart.fn(onThisDone, T$.VoidTovoid());
    currentDoneHandler$35set(onThisDone);
    controller.onListen = dart.fn(() => {
      let t72;
      if (!(subscription == null)) dart.assertFailed(null, I[39], 58, 14, "subscription == null");
      listen();
      if (!$this.isBroadcast) {
        t72 = controller;
        (() => {
          t72.onPause = dart.fn(() => {
            if (!thisDone || !next.isBroadcast) return dart.nullCheck(subscription).pause();
            dart.nullCheck(subscription).cancel();
            subscription = null;
          }, T$.VoidTovoid());
          t72.onResume = dart.fn(() => {
            if (!thisDone || !next.isBroadcast) return dart.nullCheck(subscription).resume();
            listen();
          }, T$.VoidTovoid());
          return t72;
        })();
      }
      controller.onCancel = dart.fn(() => {
        if (secondDone) return null;
        let toCancel = dart.nullCheck(subscription);
        subscription = null;
        return toCancel.cancel();
      }, T$.VoidToFutureNOfvoid());
    }, T$.VoidTovoid());
    return controller.stream;
  };
  concatenate['Concatenate|get#followedBy'] = function Concatenate$124get$35followedBy(T, $this) {
    return dart.fn(next => concatenate['Concatenate|followedBy'](T, $this, next), dart.fnType(async.Stream$(T), [async.Stream$(T)]));
  };
  concatenate['Concatenate|startWith'] = function Concatenate$124startWith(T, $this, initial) {
    return concatenate['Concatenate|startWithStream'](T, $this, async.Future$(T).value(initial).asStream());
  };
  concatenate['Concatenate|get#startWith'] = function Concatenate$124get$35startWith(T, $this) {
    return dart.fn(initial => concatenate['Concatenate|startWith'](T, $this, initial), dart.fnType(async.Stream$(T), [T]));
  };
  concatenate['Concatenate|startWithMany'] = function Concatenate$124startWithMany(T, $this, initial) {
    return concatenate['Concatenate|startWithStream'](T, $this, async.Stream$(T).fromIterable(initial));
  };
  concatenate['Concatenate|get#startWithMany'] = function Concatenate$124get$35startWithMany(T, $this) {
    return dart.fn(initial => concatenate['Concatenate|startWithMany'](T, $this, initial), dart.fnType(async.Stream$(T), [core.Iterable$(T)]));
  };
  concatenate['Concatenate|startWithStream'] = function Concatenate$124startWithStream(T, $this, initial) {
    if ($this.isBroadcast && !initial.isBroadcast) {
      initial = initial.asBroadcastStream();
    }
    return concatenate['Concatenate|followedBy'](T, initial, $this);
  };
  concatenate['Concatenate|get#startWithStream'] = function Concatenate$124get$35startWithStream(T, $this) {
    return dart.fn(initial => concatenate['Concatenate|startWithStream'](T, $this, initial), dart.fnType(async.Stream$(T), [async.Stream$(T)]));
  };
  merge['Merge|merge'] = function Merge$124merge(T, $this, other) {
    return merge['Merge|mergeAll'](T, $this, _interceptors.JSArray$(async.Stream$(T)).of([other]));
  };
  merge['Merge|get#merge'] = function Merge$124get$35merge(T, $this) {
    return dart.fn(other => merge['Merge|merge'](T, $this, other), dart.fnType(async.Stream$(T), [async.Stream$(T)]));
  };
  merge['Merge|mergeAll'] = function Merge$124mergeAll(T, $this, others) {
    let controller = $this.isBroadcast ? async.StreamController$(T).broadcast({sync: true}) : async.StreamController$(T).new({sync: true});
    let allStreams = (() => {
      let t82 = _interceptors.JSArray$(async.Stream$(T)).of([$this]);
      for (let other of others)
        t82.push(!$this.isBroadcast || other.isBroadcast ? other : other.asBroadcastStream());
      return t82;
    })();
    controller.onListen = dart.fn(() => {
      let t83;
      let subscriptions = _interceptors.JSArray$(async.StreamSubscription$(T)).of([]);
      for (let stream of allStreams) {
        let subscription = stream.listen(dart.fnType(dart.void, [T]).as(dart.bind(controller, 'add')), {onError: dart.bind(controller, 'addError')});
        subscription.onDone(dart.fn(() => {
          subscriptions[$remove](subscription);
          if (subscriptions[$isEmpty]) controller.close();
        }, T$.VoidTovoid()));
        subscriptions[$add](subscription);
      }
      if (!$this.isBroadcast) {
        t83 = controller;
        (() => {
          t83.onPause = dart.fn(() => {
            for (let subscription of subscriptions) {
              subscription.pause();
            }
          }, T$.VoidTovoid());
          t83.onResume = dart.fn(() => {
            for (let subscription of subscriptions) {
              subscription.resume();
            }
          }, T$.VoidTovoid());
          return t83;
        })();
      }
      controller.onCancel = dart.fn(() => {
        let t84;
        if (subscriptions[$isEmpty]) return null;
        let cancels = (t84 = (() => {
          let t83 = T$.JSArrayOfFutureOfvoid().of([]);
          for (let s of subscriptions)
            t83.push(s.cancel());
          return t83;
        })(), (() => {
          t84[$removeWhere](dart.fn(f => f == null, T$.ObjectNTobool()));
          return t84;
        })());
        if (cancels[$isEmpty]) return null;
        return async.Future.wait(dart.void, cancels).then(dart.void, dart.fn(_ => null, T$.ListOfvoidToNull()));
      }, T$.VoidToFutureNOfvoid());
    }, T$.VoidTovoid());
    return controller.stream;
  };
  merge['Merge|get#mergeAll'] = function Merge$124get$35mergeAll(T, $this) {
    return dart.fn(others => merge['Merge|mergeAll'](T, $this, others), dart.fnType(async.Stream$(T), [core.Iterable$(async.Stream$(T))]));
  };
  rate_limit['RateLimit|debounce'] = function RateLimit$124debounce(T, $this, duration, opts) {
    let leading = opts && 'leading' in opts ? opts.leading : false;
    let trailing = opts && 'trailing' in opts ? opts.trailing : true;
    return rate_limit['RateLimit|_debounceAggregate'](T, T, $this, duration, dart.gbind(C[1581] || CT.C1581, T), {leading: leading, trailing: trailing});
  };
  rate_limit['RateLimit|get#debounce'] = function RateLimit$124get$35debounce(T, $this) {
    return dart.fn((duration, opts) => {
      let leading = opts && 'leading' in opts ? opts.leading : false;
      let trailing = opts && 'trailing' in opts ? opts.trailing : true;
      return rate_limit['RateLimit|debounce'](T, $this, duration, {leading: leading, trailing: trailing});
    }, dart.fnType(async.Stream$(T), [core.Duration], {leading: core.bool, trailing: core.bool}, {}));
  };
  rate_limit['RateLimit|debounceBuffer'] = function RateLimit$124debounceBuffer(T, $this, duration) {
    return rate_limit['RateLimit|_debounceAggregate'](T, core.List$(T), $this, duration, dart.gbind(C[1582] || CT.C1582, T), {leading: false, trailing: true});
  };
  rate_limit['RateLimit|get#debounceBuffer'] = function RateLimit$124get$35debounceBuffer(T, $this) {
    return dart.fn(duration => rate_limit['RateLimit|debounceBuffer'](T, $this, duration), dart.fnType(async.Stream$(core.List$(T)), [core.Duration]));
  };
  rate_limit['RateLimit|throttle'] = function RateLimit$124throttle(T, $this, duration, opts) {
    let trailing = opts && 'trailing' in opts ? opts.trailing : false;
    return trailing ? rate_limit['RateLimit|_throttleTrailing'](T, $this, duration) : rate_limit['RateLimit|_throttle'](T, $this, duration);
  };
  rate_limit['RateLimit|get#throttle'] = function RateLimit$124get$35throttle(T, $this) {
    return dart.fn((duration, opts) => {
      let trailing = opts && 'trailing' in opts ? opts.trailing : false;
      return rate_limit['RateLimit|throttle'](T, $this, duration, {trailing: trailing});
    }, dart.fnType(async.Stream$(T), [core.Duration], {trailing: core.bool}, {}));
  };
  rate_limit['RateLimit|_throttle'] = function RateLimit$124_throttle(T, $this, duration) {
    let timer = null;
    return from_handlers['TransformByHandlers|transformByHandlers'](T, T, $this, {onData: dart.fn((data, sink) => {
        if (timer == null) {
          sink.add(data);
          timer = async.Timer.new(duration, dart.fn(() => {
            timer = null;
          }, T$.VoidTovoid()));
        }
      }, dart.fnType(dart.void, [T, async.EventSink$(T)]))});
  };
  rate_limit['RateLimit|get#_throttle'] = function RateLimit$124get$35_throttle(T, $this) {
    return dart.fn(duration => rate_limit['RateLimit|_throttle'](T, $this, duration), dart.fnType(async.Stream$(T), [core.Duration]));
  };
  rate_limit['RateLimit|_throttleTrailing'] = function RateLimit$124_throttleTrailing(T, $this, duration) {
    let timer = null;
    let pending = null;
    let hasPending = false;
    let isDone = false;
    return from_handlers['TransformByHandlers|transformByHandlers'](T, T, $this, {onData: dart.fn((data, sink) => {
        function onTimer() {
          if (hasPending) {
            sink.add(T.as(pending));
            if (isDone) {
              sink.close();
            } else {
              timer = async.Timer.new(duration, onTimer);
              hasPending = false;
              pending = null;
            }
          } else {
            timer = null;
          }
        }
        dart.fn(onTimer, T$.VoidTovoid());
        if (timer == null) {
          sink.add(data);
          timer = async.Timer.new(duration, onTimer);
        } else {
          hasPending = true;
          pending = data;
        }
      }, dart.fnType(dart.void, [T, async.EventSink$(T)])), onDone: dart.fn(sink => {
        let t94;
        isDone = true;
        if (hasPending) return;
        sink.close();
        t94 = timer;
        t94 == null ? null : t94.cancel();
        timer = null;
      }, dart.fnType(dart.void, [async.EventSink$(T)]))});
  };
  rate_limit['RateLimit|get#_throttleTrailing'] = function RateLimit$124get$35_throttleTrailing(T, $this) {
    return dart.fn(duration => rate_limit['RateLimit|_throttleTrailing'](T, $this, duration), dart.fnType(async.Stream$(T), [core.Duration]));
  };
  rate_limit['RateLimit|audit'] = function RateLimit$124audit(T, $this, duration) {
    let timer = null;
    let shouldClose = false;
    let recentData = null;
    return from_handlers['TransformByHandlers|transformByHandlers'](T, T, $this, {onData: dart.fn((data, sink) => {
        recentData = data;
        timer == null ? timer = async.Timer.new(duration, dart.fn(() => {
          sink.add(recentData);
          timer = null;
          if (shouldClose) {
            sink.close();
          }
        }, T$.VoidTovoid())) : null;
      }, dart.fnType(dart.void, [T, async.EventSink$(T)])), onDone: dart.fn(sink => {
        if (timer != null) {
          shouldClose = true;
        } else {
          sink.close();
        }
      }, dart.fnType(dart.void, [async.EventSink$(T)]))});
  };
  rate_limit['RateLimit|get#audit'] = function RateLimit$124get$35audit(T, $this) {
    return dart.fn(duration => rate_limit['RateLimit|audit'](T, $this, duration), dart.fnType(async.Stream$(T), [core.Duration]));
  };
  rate_limit['RateLimit|buffer'] = function RateLimit$124buffer(T, $this, trigger, opts) {
    let longPoll = opts && 'longPoll' in opts ? opts.longPoll : true;
    return aggregate_sample['AggregateSample|aggregateSample'](T, core.List$(T), $this, {trigger: trigger, aggregate: dart.gbind(C[1582] || CT.C1582, T), longPoll: longPoll, onEmpty: dart.gbind(C[1583] || CT.C1583, T)});
  };
  rate_limit['RateLimit|get#buffer'] = function RateLimit$124get$35buffer(T, $this) {
    return dart.fn((trigger, opts) => {
      let longPoll = opts && 'longPoll' in opts ? opts.longPoll : true;
      return rate_limit['RateLimit|buffer'](T, $this, trigger, {longPoll: longPoll});
    }, dart.fnType(async.Stream$(core.List$(T)), [T$.StreamOfvoid()], {longPoll: core.bool}, {}));
  };
  rate_limit['RateLimit|sample'] = function RateLimit$124sample(T, $this, trigger, opts) {
    let longPoll = opts && 'longPoll' in opts ? opts.longPoll : true;
    return aggregate_sample['AggregateSample|aggregateSample'](T, T, $this, {trigger: trigger, aggregate: dart.gbind(C[1581] || CT.C1581, T), longPoll: longPoll, onEmpty: dart.gbind(C[1584] || CT.C1584, T)});
  };
  rate_limit['RateLimit|get#sample'] = function RateLimit$124get$35sample(T, $this) {
    return dart.fn((trigger, opts) => {
      let longPoll = opts && 'longPoll' in opts ? opts.longPoll : true;
      return rate_limit['RateLimit|sample'](T, $this, trigger, {longPoll: longPoll});
    }, dart.fnType(async.Stream$(T), [T$.StreamOfvoid()], {longPoll: core.bool}, {}));
  };
  rate_limit['RateLimit|_debounceAggregate'] = function RateLimit$124_debounceAggregate(T, S, $this, duration, collect, opts) {
    let leading = opts && 'leading' in opts ? opts.leading : null;
    let trailing = opts && 'trailing' in opts ? opts.trailing : null;
    let timer = null;
    let soFar = null;
    let hasPending = false;
    let shouldClose = false;
    let emittedLatestAsLeading = false;
    return from_handlers['TransformByHandlers|transformByHandlers'](T, S, $this, {onData: dart.fn((value, sink) => {
        let t102;
        function emit() {
          sink.add(S.as(soFar));
          soFar = null;
          hasPending = false;
        }
        dart.fn(emit, T$.VoidTovoid());
        t102 = timer;
        t102 == null ? null : t102.cancel();
        soFar = collect(value, soFar);
        hasPending = true;
        if (timer == null && leading) {
          emittedLatestAsLeading = true;
          emit();
        } else {
          emittedLatestAsLeading = false;
        }
        timer = async.Timer.new(duration, dart.fn(() => {
          if (trailing && !emittedLatestAsLeading) emit();
          if (shouldClose) sink.close();
          timer = null;
        }, T$.VoidTovoid()));
      }, dart.fnType(dart.void, [T, async.EventSink$(S)])), onDone: dart.fn(sink => {
        let t102;
        if (hasPending && trailing) {
          shouldClose = true;
        } else {
          t102 = timer;
          t102 == null ? null : t102.cancel();
          sink.close();
        }
      }, dart.fnType(dart.void, [async.EventSink$(S)]))});
  };
  rate_limit['RateLimit|get#_debounceAggregate'] = function RateLimit$124get$35_debounceAggregate(T, $this) {
    return dart.fn((S, duration, collect, opts) => {
      let leading = opts && 'leading' in opts ? opts.leading : null;
      let trailing = opts && 'trailing' in opts ? opts.trailing : null;
      return rate_limit['RateLimit|_debounceAggregate'](T, S, $this, duration, collect, {leading: leading, trailing: trailing});
    }, dart.gFnType(S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      var __t$SN = () => (__t$SN = dart.constFn(dart.nullable(S)))();
      return [__t$StreamOfS(), [core.Duration, dart.fnType(S, [T, __t$SN()])], {leading: core.bool, trailing: core.bool}, {}];
    }, S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      var __t$SN = () => (__t$SN = dart.constFn(dart.nullable(S)))();
      return [T$.ObjectN()];
    }));
  };
  rate_limit._dropPrevious = function _dropPrevious$(T, element, _) {
    return element;
  };
  rate_limit._collect = function _collect(T, event, soFar) {
    let t103, t103$;
    t103$ = (t103 = soFar, t103 == null ? _interceptors.JSArray$(T).of([]) : t103);
    return (() => {
      t103$[$add](event);
      return t103$;
    })();
  };
  rate_limit._empty = function _empty(T, sink) {
    return sink.add(_interceptors.JSArray$(T).of([]));
  };
  rate_limit._ignore = function _ignore$(T, sink) {
  };
  scan['Scan|scan'] = function Scan$124scan(T, S, $this, initialValue, combine) {
    let accumulated = initialValue;
    return $this.asyncMap(S, dart.fn(value => {
      let result = combine(accumulated, value);
      if (async.Future$(S).is(result)) {
        return result.then(S, dart.fn(r => accumulated = r, dart.fnType(S, [S])));
      } else {
        return accumulated = result;
      }
    }, dart.fnType(async.FutureOr$(S), [T])));
  };
  scan['Scan|get#scan'] = function Scan$124get$35scan(T, $this) {
    return dart.fn((S, initialValue, combine) => scan['Scan|scan'](T, S, $this, initialValue, combine), dart.gFnType(S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      var __t$FutureOrOfS = () => (__t$FutureOrOfS = dart.constFn(async.FutureOr$(S)))();
      return [__t$StreamOfS(), [S, dart.fnType(__t$FutureOrOfS(), [S, T])]];
    }, S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      var __t$FutureOrOfS = () => (__t$FutureOrOfS = dart.constFn(async.FutureOr$(S)))();
      return [T$.ObjectN()];
    }));
  };
  $switch['Switch|switchMap'] = function Switch$124switchMap(T, S, $this, convert) {
    return $switch['SwitchLatest|switchLatest'](S, $this.map(async.Stream$(S), convert));
  };
  $switch['Switch|get#switchMap'] = function Switch$124get$35switchMap(T, $this) {
    return dart.fn((S, convert) => $switch['Switch|switchMap'](T, S, $this, convert), dart.gFnType(S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      return [__t$StreamOfS(), [dart.fnType(__t$StreamOfS(), [T])]];
    }, S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      return [T$.ObjectN()];
    }));
  };
  $switch['SwitchLatest|switchLatest'] = function SwitchLatest$124switchLatest(T, $this) {
    let controller = $this.isBroadcast ? async.StreamController$(T).broadcast({sync: true}) : async.StreamController$(T).new({sync: true});
    controller.onListen = dart.fn(() => {
      let t109;
      let innerSubscription = null;
      let outerStreamDone = false;
      function listenToInnerStream(innerStream) {
        if (!(innerSubscription == null)) dart.assertFailed(null, I[40], 65, 16, "innerSubscription == null");
        let subscription = innerStream.listen(dart.fnType(dart.void, [T]).as(dart.bind(controller, 'add')), {onError: dart.bind(controller, 'addError'), onDone: dart.fn(() => {
            innerSubscription = null;
            if (outerStreamDone) controller.close();
          }, T$.VoidTovoid())});
        if (controller.isPaused) subscription.pause();
        innerSubscription = subscription;
      }
      dart.fn(listenToInnerStream, dart.fnType(dart.void, [async.Stream$(T)]));
      let addError = dart.bind(controller, 'addError');
      let outerSubscription = $this.listen(null, {onError: addError, onDone: dart.fn(() => {
          outerStreamDone = true;
          if (innerSubscription == null) controller.close();
        }, T$.VoidTovoid())});
      outerSubscription.onData(dart.fn(innerStream => async.async(dart.void, function*() {
        let currentSubscription = innerSubscription;
        if (currentSubscription == null) {
          listenToInnerStream(innerStream);
          return;
        }
        innerSubscription = null;
        outerSubscription.pause();
        try {
          yield currentSubscription.cancel();
        } catch (e) {
          let error = dart.getThrown(e);
          let stack = dart.stackTrace(e);
          if (core.Object.is(error)) {
            controller.addError(error, stack);
          } else
            throw e;
        } finally {
          if (!$this.isBroadcast && !controller.hasListener) {
            async['FutureExtensions|ignore'](dart.void, innerStream.listen(null).cancel());
          } else {
            outerSubscription.resume();
            listenToInnerStream(innerStream);
          }
        }
      }), dart.fnType(T$.FutureOfvoid(), [async.Stream$(T)])));
      if (!$this.isBroadcast) {
        t109 = controller;
        (() => {
          t109.onPause = dart.fn(() => {
            let t110;
            t110 = innerSubscription;
            t110 == null ? null : t110.pause();
            outerSubscription.pause();
          }, T$.VoidTovoid());
          t109.onResume = dart.fn(() => {
            let t110;
            t110 = innerSubscription;
            t110 == null ? null : t110.resume();
            outerSubscription.resume();
          }, T$.VoidTovoid());
          return t109;
        })();
      }
      controller.onCancel = dart.fn(() => {
        let t110;
        let _innerSubscription = innerSubscription;
        let cancels = (t110 = (() => {
          let t109 = T$.JSArrayOfFutureOfvoid().of([]);
          if (!outerStreamDone) t109.push(outerSubscription.cancel());
          if (_innerSubscription != null) t109.push(_innerSubscription.cancel());
          return t109;
        })(), (() => {
          t110[$removeWhere](dart.fn(f => f == null, T$.ObjectNTobool()));
          return t110;
        })());
        if (cancels[$isEmpty]) return null;
        return async.Future.wait(dart.void, cancels).then(dart.void, C[1585] || CT.C1585);
      }, T$.VoidToFutureNOfvoid());
    }, T$.VoidTovoid());
    return controller.stream;
  };
  $switch['SwitchLatest|get#switchLatest'] = function SwitchLatest$124get$35switchLatest(T, $this) {
    return dart.fn(() => $switch['SwitchLatest|switchLatest'](T, $this), dart.fnType(async.Stream$(T), []));
  };
  $switch._ignore = function _ignore$0(_, __ = null) {
  };
  take_until['TakeUntil|takeUntil'] = function TakeUntil$124takeUntil(T, $this, trigger) {
    let controller = $this.isBroadcast ? async.StreamController$(T).broadcast({sync: true}) : async.StreamController$(T).new({sync: true});
    let subscription = null;
    let isDone = false;
    trigger.then(core.Null, dart.fn(_ => {
      let t112;
      if (isDone) return;
      isDone = true;
      t112 = subscription;
      t112 == null ? null : t112.cancel();
      controller.close();
    }, T$.voidToNull()));
    controller.onListen = dart.fn(() => {
      let t112;
      if (isDone) return;
      subscription = $this.listen(dart.fnType(dart.void, [T]).as(dart.bind(controller, 'add')), {onError: dart.bind(controller, 'addError'), onDone: dart.fn(() => {
          if (isDone) return;
          isDone = true;
          controller.close();
        }, T$.VoidTovoid())});
      if (!$this.isBroadcast) {
        t112 = controller;
        (() => {
          t112.onPause = dart.bind(dart.nullCheck(subscription), 'pause');
          t112.onResume = dart.bind(dart.nullCheck(subscription), 'resume');
          return t112;
        })();
      }
      controller.onCancel = dart.fn(() => {
        if (isDone) return null;
        let toCancel = dart.nullCheck(subscription);
        subscription = null;
        return toCancel.cancel();
      }, T$.VoidToFutureNOfvoid());
    }, T$.VoidTovoid());
    return controller.stream;
  };
  take_until['TakeUntil|get#takeUntil'] = function TakeUntil$124get$35takeUntil(T, $this) {
    return dart.fn(trigger => take_until['TakeUntil|takeUntil'](T, $this, trigger), dart.fnType(async.Stream$(T), [T$.FutureOfvoid()]));
  };
  tap['Tap|tap'] = function Tap$124tap(T, $this, onValue, opts) {
    let onError = opts && 'onError' in opts ? opts.onError : null;
    let onDone = opts && 'onDone' in opts ? opts.onDone : null;
    return from_handlers['TransformByHandlers|transformByHandlers'](T, T, $this, {onData: dart.fn((value, sink) => {
        let t114;
        try {
          t114 = onValue;
          t114 == null ? null : t114(value);
        } catch (e) {
          let _ = dart.getThrown(e);
          if (core.Object.is(_)) {
          } else
            throw e;
        }
        sink.add(value);
      }, dart.fnType(dart.void, [T, async.EventSink$(T)])), onError: dart.fn((error, stackTrace, sink) => {
        let t115;
        try {
          t115 = onError;
          t115 == null ? null : t115(error, stackTrace);
        } catch (e) {
          let _ = dart.getThrown(e);
          if (core.Object.is(_)) {
          } else
            throw e;
        }
        sink.addError(error, stackTrace);
      }, dart.fnType(dart.void, [core.Object, core.StackTrace, async.EventSink$(T)])), onDone: dart.fn(sink => {
        let t116;
        try {
          t116 = onDone;
          t116 == null ? null : t116();
        } catch (e) {
          let _ = dart.getThrown(e);
          if (core.Object.is(_)) {
          } else
            throw e;
        }
        sink.close();
      }, dart.fnType(dart.void, [async.EventSink$(T)]))});
  };
  tap['Tap|get#tap'] = function Tap$124get$35tap(T, $this) {
    return dart.fn((onValue, opts) => {
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onDone = opts && 'onDone' in opts ? opts.onDone : null;
      return tap['Tap|tap'](T, $this, onValue, {onError: onError, onDone: onDone});
    }, dart.fnType(async.Stream$(T), [dart.nullable(dart.fnType(dart.void, [T]))], {onDone: T$.VoidToNvoid(), onError: T$.ObjectAndStackTraceToNvoid()}, {}));
  };
  where['Where|whereType'] = function Where$124whereType(T, S, $this) {
    return from_handlers['TransformByHandlers|transformByHandlers'](T, S, $this, {onData: dart.fn((event, sink) => {
        if (S.is(event)) sink.add(event);
      }, dart.fnType(dart.void, [T, async.EventSink$(S)]))});
  };
  where['Where|get#whereType'] = function Where$124get$35whereType(T, $this) {
    return dart.fn(S => where['Where|whereType'](T, S, $this), T$.VoidToStreamOfS());
  };
  where['Where|asyncWhere'] = function Where$124asyncWhere(T, $this, test) {
    let valuesWaiting = 0;
    let sourceDone = false;
    return from_handlers['TransformByHandlers|transformByHandlers'](T, T, $this, {onData: dart.fn((element, sink) => {
        valuesWaiting = valuesWaiting + 1;
        dart.fn(() => async.async(core.Null, function*() {
          try {
            if (yield test(element)) sink.add(element);
          } catch (e$) {
            let e = dart.getThrown(e$);
            let st = dart.stackTrace(e$);
            if (core.Object.is(e)) {
              sink.addError(e, st);
            } else
              throw e$;
          }
          valuesWaiting = valuesWaiting - 1;
          if (valuesWaiting <= 0 && sourceDone) sink.close();
        }), T$.VoidToFutureOfNull())();
      }, dart.fnType(dart.void, [T, async.EventSink$(T)])), onDone: dart.fn(sink => {
        sourceDone = true;
        if (valuesWaiting <= 0) sink.close();
      }, dart.fnType(dart.void, [async.EventSink$(T)]))});
  };
  where['Where|get#asyncWhere'] = function Where$124get$35asyncWhere(T, $this) {
    return dart.fn(test => where['Where|asyncWhere'](T, $this, test), dart.fnType(async.Stream$(T), [dart.fnType(T$.FutureOrOfbool(), [T])]));
  };
  where['WhereNotNull|whereNotNull'] = function WhereNotNull$124whereNotNull(T, $this) {
    return from_handlers['TransformByHandlers|transformByHandlers'](dart.nullable(T), T, $this, {onData: dart.fn((event, sink) => {
        if (event != null) sink.add(event);
      }, dart.fnType(dart.void, [dart.nullable(T), async.EventSink$(T)]))});
  };
  where['WhereNotNull|get#whereNotNull'] = function WhereNotNull$124get$35whereNotNull(T, $this) {
    return dart.fn(() => where['WhereNotNull|whereNotNull'](T, $this), dart.fnType(async.Stream$(T), []));
  };
  dart_js_util.JsUtil = class JsUtil extends core.Object {
    hasProperty(o, name) {
      return js_util.hasProperty(o, name);
    }
    getProperty(o, name) {
      return js_util.getProperty(dart.dynamic, o, name);
    }
    static ['_#new#tearOff']() {
      return new dart_js_util.JsUtil.new();
    }
  };
  (dart_js_util.JsUtil.new = function() {
    ;
  }).prototype = dart_js_util.JsUtil.prototype;
  dart.addTypeTests(dart_js_util.JsUtil);
  dart.addTypeCaches(dart_js_util.JsUtil);
  dart.setMethodSignature(dart_js_util.JsUtil, () => ({
    __proto__: dart.getMethods(dart_js_util.JsUtil.__proto__),
    hasProperty: dart.fnType(core.bool, [core.Object, core.Object]),
    getProperty: dart.fnType(dart.dynamic, [core.Object, core.Object])
  }));
  dart.setLibraryUri(dart_js_util.JsUtil, I[41]);
  var _type$ = dart.privateName(camera_error_code, "CameraErrorCode._type");
  var _type = dart.privateName(camera_error_code, "_type");
  camera_error_code.CameraErrorCode = class CameraErrorCode extends core.Object {
    get [_type]() {
      return this[_type$];
    }
    set [_type](value) {
      super[_type] = value;
    }
    static ['_#_#tearOff'](_type) {
      return new camera_error_code.CameraErrorCode.__(_type);
    }
    toString() {
      return this[_type];
    }
    static fromMediaError(error) {
      switch (error[$code]) {
        case 1:
          {
            return C[1586] || CT.C1586;
          }
        case 2:
          {
            return C[1587] || CT.C1587;
          }
        case 3:
          {
            return C[1588] || CT.C1588;
          }
        case 4:
          {
            return C[1589] || CT.C1589;
          }
        default:
          {
            return C[1590] || CT.C1590;
          }
      }
    }
  };
  (camera_error_code.CameraErrorCode.__ = function(_type) {
    this[_type$] = _type;
    ;
  }).prototype = camera_error_code.CameraErrorCode.prototype;
  dart.addTypeTests(camera_error_code.CameraErrorCode);
  dart.addTypeCaches(camera_error_code.CameraErrorCode);
  dart.setStaticMethodSignature(camera_error_code.CameraErrorCode, () => ['fromMediaError']);
  dart.setLibraryUri(camera_error_code.CameraErrorCode, I[42]);
  dart.setFieldSignature(camera_error_code.CameraErrorCode, () => ({
    __proto__: dart.getFields(camera_error_code.CameraErrorCode.__proto__),
    [_type]: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(camera_error_code.CameraErrorCode, () => ['notSupported', 'notFound', 'notReadable', 'overconstrained', 'permissionDenied', 'type', 'abort', 'security', 'missingMetadata', 'orientationNotSupported', 'torchModeNotSupported', 'zoomLevelNotSupported', 'zoomLevelInvalid', 'notStarted', 'videoRecordingNotStarted', 'unknown']);
  dart.defineExtensionMethods(camera_error_code.CameraErrorCode, ['toString']);
  dart.defineLazy(camera_error_code.CameraErrorCode, {
    /*camera_error_code.CameraErrorCode.notSupported*/get notSupported() {
      return C[1591] || CT.C1591;
    },
    /*camera_error_code.CameraErrorCode.notFound*/get notFound() {
      return C[1592] || CT.C1592;
    },
    /*camera_error_code.CameraErrorCode.notReadable*/get notReadable() {
      return C[1593] || CT.C1593;
    },
    /*camera_error_code.CameraErrorCode.overconstrained*/get overconstrained() {
      return C[1594] || CT.C1594;
    },
    /*camera_error_code.CameraErrorCode.permissionDenied*/get permissionDenied() {
      return C[1595] || CT.C1595;
    },
    /*camera_error_code.CameraErrorCode.type*/get type() {
      return C[1596] || CT.C1596;
    },
    /*camera_error_code.CameraErrorCode.abort*/get abort() {
      return C[1597] || CT.C1597;
    },
    /*camera_error_code.CameraErrorCode.security*/get security() {
      return C[1598] || CT.C1598;
    },
    /*camera_error_code.CameraErrorCode.missingMetadata*/get missingMetadata() {
      return C[1599] || CT.C1599;
    },
    /*camera_error_code.CameraErrorCode.orientationNotSupported*/get orientationNotSupported() {
      return C[1600] || CT.C1600;
    },
    /*camera_error_code.CameraErrorCode.torchModeNotSupported*/get torchModeNotSupported() {
      return C[1601] || CT.C1601;
    },
    /*camera_error_code.CameraErrorCode.zoomLevelNotSupported*/get zoomLevelNotSupported() {
      return C[1602] || CT.C1602;
    },
    /*camera_error_code.CameraErrorCode.zoomLevelInvalid*/get zoomLevelInvalid() {
      return C[1603] || CT.C1603;
    },
    /*camera_error_code.CameraErrorCode.notStarted*/get notStarted() {
      return C[1604] || CT.C1604;
    },
    /*camera_error_code.CameraErrorCode.videoRecordingNotStarted*/get videoRecordingNotStarted() {
      return C[1605] || CT.C1605;
    },
    /*camera_error_code.CameraErrorCode.unknown*/get unknown() {
      return C[1606] || CT.C1606;
    }
  }, false);
  var deviceId$ = dart.privateName(camera_metadata, "CameraMetadata.deviceId");
  var facingMode$ = dart.privateName(camera_metadata, "CameraMetadata.facingMode");
  camera_metadata.CameraMetadata = class CameraMetadata extends core.Object {
    get deviceId() {
      return this[deviceId$];
    }
    set deviceId(value) {
      super.deviceId = value;
    }
    get facingMode() {
      return this[facingMode$];
    }
    set facingMode(value) {
      super.facingMode = value;
    }
    static ['_#new#tearOff'](opts) {
      let deviceId = opts && 'deviceId' in opts ? opts.deviceId : null;
      let facingMode = opts && 'facingMode' in opts ? opts.facingMode : null;
      return new camera_metadata.CameraMetadata.new({deviceId: deviceId, facingMode: facingMode});
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      return camera_metadata.CameraMetadata.is(other) && other.deviceId === this.deviceId && other.facingMode == this.facingMode;
    }
    get hashCode() {
      return core.Object.hash(this.deviceId[$hashCode], dart.hashCode(this.facingMode));
    }
  };
  (camera_metadata.CameraMetadata.new = function(opts) {
    let deviceId = opts && 'deviceId' in opts ? opts.deviceId : null;
    let facingMode = opts && 'facingMode' in opts ? opts.facingMode : null;
    this[deviceId$] = deviceId;
    this[facingMode$] = facingMode;
    ;
  }).prototype = camera_metadata.CameraMetadata.prototype;
  dart.addTypeTests(camera_metadata.CameraMetadata);
  dart.addTypeCaches(camera_metadata.CameraMetadata);
  dart.setLibraryUri(camera_metadata.CameraMetadata, I[43]);
  dart.setFieldSignature(camera_metadata.CameraMetadata, () => ({
    __proto__: dart.getFields(camera_metadata.CameraMetadata.__proto__),
    deviceId: dart.finalFieldType(core.String),
    facingMode: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(camera_metadata.CameraMetadata, ['_equals']);
  dart.defineExtensionAccessors(camera_metadata.CameraMetadata, ['hashCode']);
  const audio$ = CameraOptions_audio;
  const video$ = CameraOptions_video;
  camera_options.CameraOptions = class CameraOptions extends core.Object {
    get audio() {
      return this[audio$];
    }
    set audio(value) {
      super.audio = value;
    }
    get video() {
      return this[video$];
    }
    set video(value) {
      super.video = value;
    }
    static ['_#new#tearOff'](opts) {
      let audio = opts && 'audio' in opts ? opts.audio : null;
      let video = opts && 'video' in opts ? opts.video : null;
      return new camera_options.CameraOptions.new({audio: audio, video: video});
    }
    toJson() {
      return new (T$.IdentityMapOfString$Object()).from(["audio", this.audio.toJson(), "video", this.video.toJson()]);
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      return camera_options.CameraOptions.is(other) && other.audio._equals(this.audio) && other.video._equals(this.video);
    }
    get hashCode() {
      return core.Object.hash(this.audio, this.video);
    }
  };
  (camera_options.CameraOptions.new = function(opts) {
    let t125, t125$;
    let audio = opts && 'audio' in opts ? opts.audio : null;
    let video = opts && 'video' in opts ? opts.video : null;
    this[audio$] = (t125 = audio, t125 == null ? C[1556] || CT.C1556 : t125);
    this[video$] = (t125$ = video, t125$ == null ? C[1555] || CT.C1555 : t125$);
    ;
  }).prototype = camera_options.CameraOptions.prototype;
  dart.addTypeTests(camera_options.CameraOptions);
  dart.addTypeCaches(camera_options.CameraOptions);
  dart.setMethodSignature(camera_options.CameraOptions, () => ({
    __proto__: dart.getMethods(camera_options.CameraOptions.__proto__),
    toJson: dart.fnType(core.Map$(core.String, dart.dynamic), [])
  }));
  dart.setLibraryUri(camera_options.CameraOptions, I[44]);
  dart.setFieldSignature(camera_options.CameraOptions, () => ({
    __proto__: dart.getFields(camera_options.CameraOptions.__proto__),
    audio: dart.finalFieldType(camera_options.AudioConstraints),
    video: dart.finalFieldType(camera_options.VideoConstraints)
  }));
  dart.defineExtensionMethods(camera_options.CameraOptions, ['_equals']);
  dart.defineExtensionAccessors(camera_options.CameraOptions, ['hashCode']);
  const enabled$ = AudioConstraints_enabled;
  camera_options.AudioConstraints = class AudioConstraints extends core.Object {
    get enabled() {
      return this[enabled$];
    }
    set enabled(value) {
      super.enabled = value;
    }
    static ['_#new#tearOff'](opts) {
      let enabled = opts && 'enabled' in opts ? opts.enabled : false;
      return new camera_options.AudioConstraints.new({enabled: enabled});
    }
    toJson() {
      return this.enabled;
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      return camera_options.AudioConstraints.is(other) && other.enabled === this.enabled;
    }
    get hashCode() {
      return this.enabled[$hashCode];
    }
  };
  (camera_options.AudioConstraints.new = function(opts) {
    let enabled = opts && 'enabled' in opts ? opts.enabled : false;
    this[enabled$] = enabled;
    ;
  }).prototype = camera_options.AudioConstraints.prototype;
  dart.addTypeTests(camera_options.AudioConstraints);
  dart.addTypeCaches(camera_options.AudioConstraints);
  dart.setMethodSignature(camera_options.AudioConstraints, () => ({
    __proto__: dart.getMethods(camera_options.AudioConstraints.__proto__),
    toJson: dart.fnType(core.Object, [])
  }));
  dart.setLibraryUri(camera_options.AudioConstraints, I[44]);
  dart.setFieldSignature(camera_options.AudioConstraints, () => ({
    __proto__: dart.getFields(camera_options.AudioConstraints.__proto__),
    enabled: dart.finalFieldType(core.bool)
  }));
  dart.defineExtensionMethods(camera_options.AudioConstraints, ['_equals']);
  dart.defineExtensionAccessors(camera_options.AudioConstraints, ['hashCode']);
  const facingMode$0 = VideoConstraints_facingMode;
  const width$ = VideoConstraints_width;
  const height$ = VideoConstraints_height;
  const deviceId$0 = VideoConstraints_deviceId;
  camera_options.VideoConstraints = class VideoConstraints extends core.Object {
    get facingMode() {
      return this[facingMode$0];
    }
    set facingMode(value) {
      super.facingMode = value;
    }
    get width() {
      return this[width$];
    }
    set width(value) {
      super.width = value;
    }
    get height() {
      return this[height$];
    }
    set height(value) {
      super.height = value;
    }
    get deviceId() {
      return this[deviceId$0];
    }
    set deviceId(value) {
      super.deviceId = value;
    }
    static ['_#new#tearOff'](opts) {
      let facingMode = opts && 'facingMode' in opts ? opts.facingMode : null;
      let width = opts && 'width' in opts ? opts.width : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let deviceId = opts && 'deviceId' in opts ? opts.deviceId : null;
      return new camera_options.VideoConstraints.new({facingMode: facingMode, width: width, height: height, deviceId: deviceId});
    }
    toJson() {
      let json = new (T$.IdentityMapOfString$dynamic()).new();
      if (this.width != null) {
        json[$_set]("width", dart.nullCheck(this.width).toJson());
      }
      if (this.height != null) {
        json[$_set]("height", dart.nullCheck(this.height).toJson());
      }
      if (this.facingMode != null) {
        json[$_set]("facingMode", dart.nullCheck(this.facingMode).toJson());
      }
      if (this.deviceId != null) {
        json[$_set]("deviceId", new (T$.IdentityMapOfString$Object()).from(["exact", dart.nullCheck(this.deviceId)]));
      }
      return json;
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      return camera_options.VideoConstraints.is(other) && dart.equals(other.facingMode, this.facingMode) && dart.equals(other.width, this.width) && dart.equals(other.height, this.height) && other.deviceId == this.deviceId;
    }
    get hashCode() {
      return core.Object.hash(this.facingMode, this.width, this.height, this.deviceId);
    }
  };
  (camera_options.VideoConstraints.new = function(opts) {
    let facingMode = opts && 'facingMode' in opts ? opts.facingMode : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let deviceId = opts && 'deviceId' in opts ? opts.deviceId : null;
    this[facingMode$0] = facingMode;
    this[width$] = width;
    this[height$] = height;
    this[deviceId$0] = deviceId;
    ;
  }).prototype = camera_options.VideoConstraints.prototype;
  dart.addTypeTests(camera_options.VideoConstraints);
  dart.addTypeCaches(camera_options.VideoConstraints);
  dart.setMethodSignature(camera_options.VideoConstraints, () => ({
    __proto__: dart.getMethods(camera_options.VideoConstraints.__proto__),
    toJson: dart.fnType(core.Object, [])
  }));
  dart.setLibraryUri(camera_options.VideoConstraints, I[44]);
  dart.setFieldSignature(camera_options.VideoConstraints, () => ({
    __proto__: dart.getFields(camera_options.VideoConstraints.__proto__),
    facingMode: dart.finalFieldType(dart.nullable(camera_options.FacingModeConstraint)),
    width: dart.finalFieldType(dart.nullable(camera_options.VideoSizeConstraint)),
    height: dart.finalFieldType(dart.nullable(camera_options.VideoSizeConstraint)),
    deviceId: dart.finalFieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(camera_options.VideoConstraints, ['_equals']);
  dart.defineExtensionAccessors(camera_options.VideoConstraints, ['hashCode']);
  var _type$0 = dart.privateName(camera_options, "CameraType._type");
  var _type$1 = dart.privateName(camera_options, "_type");
  camera_options.CameraType = class CameraType extends core.Object {
    get [_type$1]() {
      return this[_type$0];
    }
    set [_type$1](value) {
      super[_type$1] = value;
    }
    static ['_#_#tearOff'](_type) {
      return new camera_options.CameraType.__(_type);
    }
    toString() {
      return this[_type$1];
    }
  };
  (camera_options.CameraType.__ = function(_type) {
    this[_type$0] = _type;
    ;
  }).prototype = camera_options.CameraType.prototype;
  dart.addTypeTests(camera_options.CameraType);
  dart.addTypeCaches(camera_options.CameraType);
  dart.setLibraryUri(camera_options.CameraType, I[44]);
  dart.setFieldSignature(camera_options.CameraType, () => ({
    __proto__: dart.getFields(camera_options.CameraType.__proto__),
    [_type$1]: dart.finalFieldType(core.String)
  }));
  dart.setStaticFieldSignature(camera_options.CameraType, () => ['environment', 'user']);
  dart.defineExtensionMethods(camera_options.CameraType, ['toString']);
  dart.defineLazy(camera_options.CameraType, {
    /*camera_options.CameraType.environment*/get environment() {
      return C[1607] || CT.C1607;
    },
    /*camera_options.CameraType.user*/get user() {
      return C[1608] || CT.C1608;
    }
  }, false);
  var ideal$ = dart.privateName(camera_options, "FacingModeConstraint.ideal");
  var exact$ = dart.privateName(camera_options, "FacingModeConstraint.exact");
  camera_options.FacingModeConstraint = class FacingModeConstraint extends core.Object {
    get ideal() {
      return this[ideal$];
    }
    set ideal(value) {
      super.ideal = value;
    }
    get exact() {
      return this[exact$];
    }
    set exact(value) {
      super.exact = value;
    }
    static new(type) {
      return new camera_options.FacingModeConstraint.__({ideal: type});
    }
    static ['_#new#tearOff'](type) {
      return camera_options.FacingModeConstraint.new(type);
    }
    static ['_#_#tearOff'](opts) {
      let ideal = opts && 'ideal' in opts ? opts.ideal : null;
      let exact = opts && 'exact' in opts ? opts.exact : null;
      return new camera_options.FacingModeConstraint.__({ideal: ideal, exact: exact});
    }
    static exact(type) {
      return new camera_options.FacingModeConstraint.__({exact: type});
    }
    static ['_#exact#tearOff'](type) {
      return camera_options.FacingModeConstraint.exact(type);
    }
    toJson() {
      return (() => {
        let t125 = new (T$.IdentityMapOfString$Object()).new();
        if (this.ideal != null) t125[$_set]("ideal", dart.toString(this.ideal));
        if (this.exact != null) t125[$_set]("exact", dart.toString(this.exact));
        return t125;
      })();
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      return camera_options.FacingModeConstraint.is(other) && dart.equals(other.ideal, this.ideal) && dart.equals(other.exact, this.exact);
    }
    get hashCode() {
      return core.Object.hash(this.ideal, this.exact);
    }
  };
  (camera_options.FacingModeConstraint.__ = function(opts) {
    let ideal = opts && 'ideal' in opts ? opts.ideal : null;
    let exact = opts && 'exact' in opts ? opts.exact : null;
    this[ideal$] = ideal;
    this[exact$] = exact;
    ;
  }).prototype = camera_options.FacingModeConstraint.prototype;
  dart.addTypeTests(camera_options.FacingModeConstraint);
  dart.addTypeCaches(camera_options.FacingModeConstraint);
  dart.setMethodSignature(camera_options.FacingModeConstraint, () => ({
    __proto__: dart.getMethods(camera_options.FacingModeConstraint.__proto__),
    toJson: dart.fnType(core.Object, [])
  }));
  dart.setStaticMethodSignature(camera_options.FacingModeConstraint, () => ['new', 'exact']);
  dart.setLibraryUri(camera_options.FacingModeConstraint, I[44]);
  dart.setFieldSignature(camera_options.FacingModeConstraint, () => ({
    __proto__: dart.getFields(camera_options.FacingModeConstraint.__proto__),
    ideal: dart.finalFieldType(dart.nullable(camera_options.CameraType)),
    exact: dart.finalFieldType(dart.nullable(camera_options.CameraType))
  }));
  dart.defineExtensionMethods(camera_options.FacingModeConstraint, ['_equals']);
  dart.defineExtensionAccessors(camera_options.FacingModeConstraint, ['hashCode']);
  var minimum$ = dart.privateName(camera_options, "VideoSizeConstraint.minimum");
  var ideal$0 = dart.privateName(camera_options, "VideoSizeConstraint.ideal");
  var maximum$ = dart.privateName(camera_options, "VideoSizeConstraint.maximum");
  camera_options.VideoSizeConstraint = class VideoSizeConstraint extends core.Object {
    get minimum() {
      return this[minimum$];
    }
    set minimum(value) {
      super.minimum = value;
    }
    get ideal() {
      return this[ideal$0];
    }
    set ideal(value) {
      super.ideal = value;
    }
    get maximum() {
      return this[maximum$];
    }
    set maximum(value) {
      super.maximum = value;
    }
    static ['_#new#tearOff'](opts) {
      let minimum = opts && 'minimum' in opts ? opts.minimum : null;
      let ideal = opts && 'ideal' in opts ? opts.ideal : null;
      let maximum = opts && 'maximum' in opts ? opts.maximum : null;
      return new camera_options.VideoSizeConstraint.new({minimum: minimum, ideal: ideal, maximum: maximum});
    }
    toJson() {
      let json = new (T$.IdentityMapOfString$dynamic()).new();
      if (this.ideal != null) {
        json[$_set]("ideal", this.ideal);
      }
      if (this.minimum != null) {
        json[$_set]("min", this.minimum);
      }
      if (this.maximum != null) {
        json[$_set]("max", this.maximum);
      }
      return json;
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      return camera_options.VideoSizeConstraint.is(other) && other.minimum == this.minimum && other.ideal == this.ideal && other.maximum == this.maximum;
    }
    get hashCode() {
      return core.Object.hash(this.minimum, this.ideal, this.maximum);
    }
  };
  (camera_options.VideoSizeConstraint.new = function(opts) {
    let minimum = opts && 'minimum' in opts ? opts.minimum : null;
    let ideal = opts && 'ideal' in opts ? opts.ideal : null;
    let maximum = opts && 'maximum' in opts ? opts.maximum : null;
    this[minimum$] = minimum;
    this[ideal$0] = ideal;
    this[maximum$] = maximum;
    ;
  }).prototype = camera_options.VideoSizeConstraint.prototype;
  dart.addTypeTests(camera_options.VideoSizeConstraint);
  dart.addTypeCaches(camera_options.VideoSizeConstraint);
  dart.setMethodSignature(camera_options.VideoSizeConstraint, () => ({
    __proto__: dart.getMethods(camera_options.VideoSizeConstraint.__proto__),
    toJson: dart.fnType(core.Object, [])
  }));
  dart.setLibraryUri(camera_options.VideoSizeConstraint, I[44]);
  dart.setFieldSignature(camera_options.VideoSizeConstraint, () => ({
    __proto__: dart.getFields(camera_options.VideoSizeConstraint.__proto__),
    minimum: dart.finalFieldType(dart.nullable(core.int)),
    ideal: dart.finalFieldType(dart.nullable(core.int)),
    maximum: dart.finalFieldType(dart.nullable(core.int))
  }));
  dart.defineExtensionMethods(camera_options.VideoSizeConstraint, ['_equals']);
  dart.defineExtensionAccessors(camera_options.VideoSizeConstraint, ['hashCode']);
  var cameraId$0 = dart.privateName(camera_web_exception, "CameraWebException.cameraId");
  var code$ = dart.privateName(camera_web_exception, "CameraWebException.code");
  var description$1 = dart.privateName(camera_web_exception, "CameraWebException.description");
  camera_web_exception.CameraWebException = class CameraWebException extends core.Object {
    get cameraId() {
      return this[cameraId$0];
    }
    set cameraId(value) {
      this[cameraId$0] = value;
    }
    get code() {
      return this[code$];
    }
    set code(value) {
      this[code$] = value;
    }
    get description() {
      return this[description$1];
    }
    set description(value) {
      this[description$1] = value;
    }
    static ['_#new#tearOff'](cameraId, code, description) {
      return new camera_web_exception.CameraWebException.new(cameraId, code, description);
    }
    toString() {
      return "CameraWebException(" + dart.str(this.cameraId) + ", " + dart.str(this.code) + ", " + this.description + ")";
    }
  };
  (camera_web_exception.CameraWebException.new = function(cameraId, code, description) {
    this[cameraId$0] = cameraId;
    this[code$] = code;
    this[description$1] = description;
    ;
  }).prototype = camera_web_exception.CameraWebException.prototype;
  dart.addTypeTests(camera_web_exception.CameraWebException);
  dart.addTypeCaches(camera_web_exception.CameraWebException);
  camera_web_exception.CameraWebException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(camera_web_exception.CameraWebException, I[45]);
  dart.setFieldSignature(camera_web_exception.CameraWebException, () => ({
    __proto__: dart.getFields(camera_web_exception.CameraWebException.__proto__),
    cameraId: dart.fieldType(core.int),
    code: dart.fieldType(camera_error_code.CameraErrorCode),
    description: dart.fieldType(core.String)
  }));
  dart.defineExtensionMethods(camera_web_exception.CameraWebException, ['toString']);
  media_device_kind.MediaDeviceKind = class MediaDeviceKind extends core.Object {};
  (media_device_kind.MediaDeviceKind.new = function() {
    ;
  }).prototype = media_device_kind.MediaDeviceKind.prototype;
  dart.addTypeTests(media_device_kind.MediaDeviceKind);
  dart.addTypeCaches(media_device_kind.MediaDeviceKind);
  dart.setLibraryUri(media_device_kind.MediaDeviceKind, I[46]);
  dart.setStaticFieldSignature(media_device_kind.MediaDeviceKind, () => ['videoInput', 'audioInput', 'audioOutput']);
  dart.defineLazy(media_device_kind.MediaDeviceKind, {
    /*media_device_kind.MediaDeviceKind.videoInput*/get videoInput() {
      return "videoinput";
    },
    /*media_device_kind.MediaDeviceKind.audioInput*/get audioInput() {
      return "audioinput";
    },
    /*media_device_kind.MediaDeviceKind.audioOutput*/get audioOutput() {
      return "audiooutput";
    }
  }, false);
  orientation_type.OrientationType = class OrientationType extends core.Object {};
  (orientation_type.OrientationType.new = function() {
    ;
  }).prototype = orientation_type.OrientationType.prototype;
  dart.addTypeTests(orientation_type.OrientationType);
  dart.addTypeCaches(orientation_type.OrientationType);
  dart.setLibraryUri(orientation_type.OrientationType, I[47]);
  dart.setStaticFieldSignature(orientation_type.OrientationType, () => ['portraitPrimary', 'portraitSecondary', 'landscapePrimary', 'landscapeSecondary']);
  dart.defineLazy(orientation_type.OrientationType, {
    /*orientation_type.OrientationType.portraitPrimary*/get portraitPrimary() {
      return "portrait-primary";
    },
    /*orientation_type.OrientationType.portraitSecondary*/get portraitSecondary() {
      return "portrait-secondary";
    },
    /*orientation_type.OrientationType.landscapePrimary*/get landscapePrimary() {
      return "landscape-primary";
    },
    /*orientation_type.OrientationType.landscapeSecondary*/get landscapeSecondary() {
      return "landscape-secondary";
    }
  }, false);
  var minimum$0 = dart.privateName(zoom_level_capability, "ZoomLevelCapability.minimum");
  var maximum$0 = dart.privateName(zoom_level_capability, "ZoomLevelCapability.maximum");
  var videoTrack$ = dart.privateName(zoom_level_capability, "ZoomLevelCapability.videoTrack");
  zoom_level_capability.ZoomLevelCapability = class ZoomLevelCapability extends core.Object {
    get minimum() {
      return this[minimum$0];
    }
    set minimum(value) {
      super.minimum = value;
    }
    get maximum() {
      return this[maximum$0];
    }
    set maximum(value) {
      super.maximum = value;
    }
    get videoTrack() {
      return this[videoTrack$];
    }
    set videoTrack(value) {
      super.videoTrack = value;
    }
    static ['_#new#tearOff'](opts) {
      let minimum = opts && 'minimum' in opts ? opts.minimum : null;
      let maximum = opts && 'maximum' in opts ? opts.maximum : null;
      let videoTrack = opts && 'videoTrack' in opts ? opts.videoTrack : null;
      return new zoom_level_capability.ZoomLevelCapability.new({minimum: minimum, maximum: maximum, videoTrack: videoTrack});
    }
    _equals(other) {
      if (other == null) return false;
      if (this === other) {
        return true;
      }
      return zoom_level_capability.ZoomLevelCapability.is(other) && other.minimum === this.minimum && other.maximum === this.maximum && other.videoTrack[$_equals](this.videoTrack);
    }
    get hashCode() {
      return core.Object.hash(this.minimum, this.maximum, this.videoTrack);
    }
  };
  (zoom_level_capability.ZoomLevelCapability.new = function(opts) {
    let minimum = opts && 'minimum' in opts ? opts.minimum : null;
    let maximum = opts && 'maximum' in opts ? opts.maximum : null;
    let videoTrack = opts && 'videoTrack' in opts ? opts.videoTrack : null;
    this[minimum$0] = minimum;
    this[maximum$0] = maximum;
    this[videoTrack$] = videoTrack;
    ;
  }).prototype = zoom_level_capability.ZoomLevelCapability.prototype;
  dart.addTypeTests(zoom_level_capability.ZoomLevelCapability);
  dart.addTypeCaches(zoom_level_capability.ZoomLevelCapability);
  dart.setLibraryUri(zoom_level_capability.ZoomLevelCapability, I[48]);
  dart.setFieldSignature(zoom_level_capability.ZoomLevelCapability, () => ({
    __proto__: dart.getFields(zoom_level_capability.ZoomLevelCapability.__proto__),
    minimum: dart.finalFieldType(core.double),
    maximum: dart.finalFieldType(core.double),
    videoTrack: dart.finalFieldType(html.MediaStreamTrack)
  }));
  dart.setStaticFieldSignature(zoom_level_capability.ZoomLevelCapability, () => ['constraintName']);
  dart.defineExtensionMethods(zoom_level_capability.ZoomLevelCapability, ['_equals']);
  dart.defineExtensionAccessors(zoom_level_capability.ZoomLevelCapability, ['hashCode']);
  dart.defineLazy(zoom_level_capability.ZoomLevelCapability, {
    /*zoom_level_capability.ZoomLevelCapability.constraintName*/get constraintName() {
      return "zoom";
    }
  }, false);
  utils.parseCameraLensDirection = function parseCameraLensDirection(string) {
    switch (string) {
      case "front":
        {
          return camera_description.CameraLensDirection.front;
        }
      case "back":
        {
          return camera_description.CameraLensDirection.back;
        }
      case "external":
        {
          return camera_description.CameraLensDirection.external;
        }
    }
    dart.throw(new core.ArgumentError.new("Unknown CameraLensDirection value"));
  };
  utils.serializeDeviceOrientation = function serializeDeviceOrientation(orientation) {
    switch (orientation) {
      case C[1574] || CT.C1574:
        {
          return "portraitUp";
        }
      case C[1576] || CT.C1576:
        {
          return "portraitDown";
        }
      case C[1577] || CT.C1577:
        {
          return "landscapeRight";
        }
      case C[1575] || CT.C1575:
        {
          return "landscapeLeft";
        }
    }
  };
  utils.deserializeDeviceOrientation = function deserializeDeviceOrientation(str) {
    switch (str) {
      case "portraitUp":
        {
          return system_chrome.DeviceOrientation.portraitUp;
        }
      case "portraitDown":
        {
          return system_chrome.DeviceOrientation.portraitDown;
        }
      case "landscapeRight":
        {
          return system_chrome.DeviceOrientation.landscapeRight;
        }
      case "landscapeLeft":
        {
          return system_chrome.DeviceOrientation.landscapeLeft;
        }
      default:
        {
          dart.throw(new core.ArgumentError.new("\"" + str + "\" is not a valid DeviceOrientation value"));
        }
    }
  };
  plugin_platform_interface.MockPlatformInterfaceMixin = class MockPlatformInterfaceMixin extends core.Object {};
  (plugin_platform_interface.MockPlatformInterfaceMixin.new = function() {
    ;
  }).prototype = plugin_platform_interface.MockPlatformInterfaceMixin.prototype;
  dart.addTypeTests(plugin_platform_interface.MockPlatformInterfaceMixin);
  dart.addTypeCaches(plugin_platform_interface.MockPlatformInterfaceMixin);
  plugin_platform_interface.MockPlatformInterfaceMixin[dart.implements] = () => [plugin_platform_interface.PlatformInterface];
  dart.setLibraryUri(plugin_platform_interface.MockPlatformInterfaceMixin, I[24]);
  var cameraEventStreamController$ = dart.privateName(method_channel_camera, "MethodChannelCamera.cameraEventStreamController");
  var deviceEventStreamController = dart.privateName(method_channel_camera, "MethodChannelCamera.deviceEventStreamController");
  var _channels = dart.privateName(method_channel_camera, "_channels");
  var _platformImageStreamSubscription = dart.privateName(method_channel_camera, "_platformImageStreamSubscription");
  var _frameStreamController = dart.privateName(method_channel_camera, "_frameStreamController");
  var MethodChannel__binaryMessenger = dart.privateName(platform_channel, "MethodChannel._binaryMessenger");
  var StandardMethodCodec_messageCodec = dart.privateName(message_codecs, "StandardMethodCodec.messageCodec");
  var MethodChannel_codec = dart.privateName(platform_channel, "MethodChannel.codec");
  var MethodChannel_name = dart.privateName(platform_channel, "MethodChannel.name");
  var _cameraEvents$ = dart.privateName(method_channel_camera, "_cameraEvents");
  var _serializeResolutionPreset = dart.privateName(method_channel_camera, "_serializeResolutionPreset");
  var _installStreamController = dart.privateName(method_channel_camera, "_installStreamController");
  var _startStreamListener = dart.privateName(method_channel_camera, "_startStreamListener");
  var _onFrameStreamListen = dart.privateName(method_channel_camera, "_onFrameStreamListen");
  var _onFrameStreamPauseResume = dart.privateName(method_channel_camera, "_onFrameStreamPauseResume");
  var _onFrameStreamCancel = dart.privateName(method_channel_camera, "_onFrameStreamCancel");
  var _startPlatformStream = dart.privateName(method_channel_camera, "_startPlatformStream");
  var EventChannel__binaryMessenger = dart.privateName(platform_channel, "EventChannel._binaryMessenger");
  var EventChannel_codec = dart.privateName(platform_channel, "EventChannel.codec");
  var EventChannel_name = dart.privateName(platform_channel, "EventChannel.name");
  var _serializeFlashMode = dart.privateName(method_channel_camera, "_serializeFlashMode");
  var _getArgumentDictionary = dart.privateName(method_channel_camera, "_getArgumentDictionary");
  method_channel_camera.MethodChannelCamera = class MethodChannelCamera extends camera_platform.CameraPlatform {
    get cameraEventStreamController() {
      return this[cameraEventStreamController$];
    }
    set cameraEventStreamController(value) {
      super.cameraEventStreamController = value;
    }
    get deviceEventStreamController() {
      return this[deviceEventStreamController];
    }
    set deviceEventStreamController(value) {
      super.deviceEventStreamController = value;
    }
    static ['_#new#tearOff']() {
      return new method_channel_camera.MethodChannelCamera.new();
    }
    [_cameraEvents$](cameraId) {
      return this.cameraEventStreamController.stream.where(dart.fn(event => event.cameraId === cameraId, T$.CameraEventTobool()));
    }
    availableCameras() {
      return async.async(T$.ListOfCameraDescription(), function* availableCameras() {
        try {
          let cameras = (yield method_channel_camera._channel.invokeListMethod(core.Map, "availableCameras"));
          if (cameras == null) {
            return T$.JSArrayOfCameraDescription().of([]);
          }
          return cameras[$map](camera_description.CameraDescription, dart.fn(camera => new camera_description.CameraDescription.new({name: core.String.as(dart.nullCheck(camera[$_get]("name"))), lensDirection: utils.parseCameraLensDirection(core.String.as(dart.nullCheck(camera[$_get]("lensFacing")))), sensorOrientation: core.int.as(dart.nullCheck(camera[$_get]("sensorOrientation")))}), T$.MapToCameraDescription()))[$toList]();
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (message_codec.PlatformException.is(e)) {
            dart.throw(new camera_exception.CameraException.new(e.code, e.message));
          } else
            throw e$;
        }
      });
    }
    createCamera(cameraDescription, resolutionPreset, opts) {
      let enableAudio = opts && 'enableAudio' in opts ? opts.enableAudio : false;
      return async.async(core.int, (function* createCamera() {
        return this.createCameraWithSettings(cameraDescription, new media_settings.MediaSettings.new({resolutionPreset: resolutionPreset, enableAudio: enableAudio}));
      }).bind(this));
    }
    createCameraWithSettings(cameraDescription, mediaSettings) {
      return async.async(core.int, (function* createCameraWithSettings() {
        try {
          let resolutionPreset = mediaSettings.resolutionPreset;
          let reply = (yield method_channel_camera._channel.invokeMapMethod(core.String, dart.dynamic, "create", new (T$.IdentityMapOfString$dynamic()).from(["cameraName", cameraDescription.name, "resolutionPreset", resolutionPreset != null ? this[_serializeResolutionPreset](dart.nullCheck(mediaSettings.resolutionPreset)) : null, "fps", mediaSettings.fps, "videoBitrate", mediaSettings.videoBitrate, "audioBitrate", mediaSettings.audioBitrate, "enableAudio", mediaSettings.enableAudio])));
          return core.int.as(dart.nullCheck(dart.nullCheck(reply)[$_get]("cameraId")));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (message_codec.PlatformException.is(e)) {
            dart.throw(new camera_exception.CameraException.new(e.code, e.message));
          } else
            throw e$;
        }
      }).bind(this));
    }
    initializeCamera(cameraId, opts) {
      let imageFormatGroup = opts && 'imageFormatGroup' in opts ? opts.imageFormatGroup : C[1557] || CT.C1557;
      this[_channels][$putIfAbsent](cameraId, dart.fn(() => {
        let channel = new platform_channel.MethodChannel.new("flutter.io/cameraPlugin/camera" + dart.str(cameraId));
        channel.setMethodCallHandler(dart.fn(call => this.handleCameraMethodCall(call, cameraId), T$.MethodCallToFuture()));
        return channel;
      }, T$.VoidToMethodChannel()));
      let completer = T$.CompleterOfvoid().new();
      this.onCameraInitialized(cameraId).first.then(core.Null, dart.fn(value => {
        completer.complete();
      }, T$.CameraInitializedEventToNull()));
      method_channel_camera._channel.invokeMapMethod(core.String, dart.dynamic, "initialize", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId, "imageFormatGroup", image_format_group['ImageFormatGroupName|name'](imageFormatGroup)])).catchError(dart.fn((error, stackTrace) => {
        if (!message_codec.PlatformException.is(error)) {
          dart.throw(error);
        }
        completer.completeError(new camera_exception.CameraException.new(error.code, error.message), stackTrace);
      }, T$.ObjectAndStackTraceToNull()));
      return completer.future;
    }
    dispose(cameraId) {
      return async.async(dart.void, (function* dispose() {
        let t128;
        if (this[_channels][$containsKey](cameraId)) {
          let cameraChannel = this[_channels][$_get](cameraId);
          t128 = cameraChannel;
          t128 == null ? null : t128.setMethodCallHandler(null);
          this[_channels][$remove](cameraId);
        }
        yield method_channel_camera._channel.invokeMethod(dart.void, "dispose", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId]));
      }).bind(this));
    }
    onCameraInitialized(cameraId) {
      return where['Where|whereType'](camera_event.CameraEvent, camera_event.CameraInitializedEvent, this[_cameraEvents$](cameraId));
    }
    onCameraResolutionChanged(cameraId) {
      return where['Where|whereType'](camera_event.CameraEvent, camera_event.CameraResolutionChangedEvent, this[_cameraEvents$](cameraId));
    }
    onCameraClosing(cameraId) {
      return where['Where|whereType'](camera_event.CameraEvent, camera_event.CameraClosingEvent, this[_cameraEvents$](cameraId));
    }
    onCameraError(cameraId) {
      return where['Where|whereType'](camera_event.CameraEvent, camera_event.CameraErrorEvent, this[_cameraEvents$](cameraId));
    }
    onVideoRecordedEvent(cameraId) {
      return where['Where|whereType'](camera_event.CameraEvent, camera_event.VideoRecordedEvent, this[_cameraEvents$](cameraId));
    }
    onDeviceOrientationChanged() {
      return where['Where|whereType'](device_event.DeviceEvent, device_event.DeviceOrientationChangedEvent, this.deviceEventStreamController.stream);
    }
    lockCaptureOrientation(cameraId, orientation) {
      return async.async(dart.void, function* lockCaptureOrientation() {
        yield method_channel_camera._channel.invokeMethod(core.String, "lockCaptureOrientation", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId, "orientation", utils.serializeDeviceOrientation(orientation)]));
      });
    }
    unlockCaptureOrientation(cameraId) {
      return async.async(dart.void, function* unlockCaptureOrientation() {
        yield method_channel_camera._channel.invokeMethod(core.String, "unlockCaptureOrientation", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId]));
      });
    }
    takePicture(cameraId) {
      return async.async(html$.XFile, function* takePicture() {
        let path = (yield method_channel_camera._channel.invokeMethod(core.String, "takePicture", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId])));
        if (path == null) {
          dart.throw(new camera_exception.CameraException.new("INVALID_PATH", "The platform \"" + dart.str(platform.defaultTargetPlatform) + "\" did not return a path while reporting success. The platform should always return a valid path or report an error."));
        }
        return new html$.XFile.new(path);
      });
    }
    prepareForVideoRecording() {
      return method_channel_camera._channel.invokeMethod(dart.void, "prepareForVideoRecording");
    }
    startVideoRecording(cameraId, opts) {
      let maxVideoDuration = opts && 'maxVideoDuration' in opts ? opts.maxVideoDuration : null;
      return async.async(dart.void, (function* startVideoRecording() {
        return this.startVideoCapturing(new video_capture_options.VideoCaptureOptions.new(cameraId, {maxDuration: maxVideoDuration}));
      }).bind(this));
    }
    startVideoCapturing(options) {
      return async.async(dart.void, (function* startVideoCapturing() {
        let t128;
        yield method_channel_camera._channel.invokeMethod(dart.void, "startVideoRecording", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", options.cameraId, "maxVideoDuration", (t128 = options.maxDuration, t128 == null ? null : t128.inMilliseconds), "enableStream", options.streamCallback != null]));
        if (options.streamCallback != null) {
          this[_installStreamController]().stream.listen(options.streamCallback);
          this[_startStreamListener]();
        }
      }).bind(this));
    }
    stopVideoRecording(cameraId) {
      return async.async(html$.XFile, function* stopVideoRecording() {
        let path = (yield method_channel_camera._channel.invokeMethod(core.String, "stopVideoRecording", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId])));
        if (path == null) {
          dart.throw(new camera_exception.CameraException.new("INVALID_PATH", "The platform \"" + dart.str(platform.defaultTargetPlatform) + "\" did not return a path while reporting success. The platform should always return a valid path or report an error."));
        }
        return new html$.XFile.new(path);
      });
    }
    pauseVideoRecording(cameraId) {
      return method_channel_camera._channel.invokeMethod(dart.void, "pauseVideoRecording", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId]));
    }
    resumeVideoRecording(cameraId) {
      return method_channel_camera._channel.invokeMethod(dart.void, "resumeVideoRecording", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId]));
    }
    onStreamedFrameAvailable(cameraId, opts) {
      let options = opts && 'options' in opts ? opts.options : null;
      this[_installStreamController]({onListen: dart.bind(this, _onFrameStreamListen)});
      return dart.nullCheck(this[_frameStreamController]).stream;
    }
    [_installStreamController](opts) {
      let t128;
      let onListen = opts && 'onListen' in opts ? opts.onListen : null;
      this[_frameStreamController] = T$.StreamControllerOfCameraImageData().new({onListen: (t128 = onListen, t128 == null ? dart.fn(() => {
        }, T$.VoidTovoid()) : t128), onPause: dart.bind(this, _onFrameStreamPauseResume), onResume: dart.bind(this, _onFrameStreamPauseResume), onCancel: dart.bind(this, _onFrameStreamCancel)});
      return dart.nullCheck(this[_frameStreamController]);
    }
    [_onFrameStreamListen]() {
      this[_startPlatformStream]();
    }
    [_startPlatformStream]() {
      return async.async(dart.void, (function* _startPlatformStream() {
        yield method_channel_camera._channel.invokeMethod(dart.void, "startImageStream");
        this[_startStreamListener]();
      }).bind(this));
    }
    [_startStreamListener]() {
      let cameraEventChannel = C[1612] || CT.C1612;
      this[_platformImageStreamSubscription] = cameraEventChannel.receiveBroadcastStream().listen(dart.fn(imageData => {
        if (platform.defaultTargetPlatform === platform.TargetPlatform.iOS) {
          try {
            method_channel_camera._channel.invokeMethod(dart.void, "receivedImageStreamData");
          } catch (e$) {
            let e = dart.getThrown(e$);
            if (message_codec.PlatformException.is(e)) {
              dart.throw(new camera_exception.CameraException.new(e.code, e.message));
            } else
              throw e$;
          }
        }
        dart.nullCheck(this[_frameStreamController]).add(type_conversion.cameraImageFromPlatformData(core.Map.as(imageData)));
      }, T$.dynamicTovoid()));
    }
    [_onFrameStreamCancel]() {
      return async.async(dart.void, (function* _onFrameStreamCancel() {
        let t129;
        yield method_channel_camera._channel.invokeMethod(dart.void, "stopImageStream");
        yield (t129 = this[_platformImageStreamSubscription], t129 == null ? null : t129.cancel());
        this[_platformImageStreamSubscription] = null;
        this[_frameStreamController] = null;
      }).bind(this));
    }
    [_onFrameStreamPauseResume]() {
      dart.throw(new camera_exception.CameraException.new("InvalidCall", "Pause and resume are not supported for onStreamedFrameAvailable"));
    }
    setFlashMode(cameraId, mode) {
      return method_channel_camera._channel.invokeMethod(dart.void, "setFlashMode", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId, "mode", this[_serializeFlashMode](mode)]));
    }
    setExposureMode(cameraId, mode) {
      return method_channel_camera._channel.invokeMethod(dart.void, "setExposureMode", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId, "mode", exposure_mode.serializeExposureMode(mode)]));
    }
    setExposurePoint(cameraId, point) {
      let t129, t129$;
      if (!(point == null || point.x >= 0 && point.x <= 1)) dart.assertFailed(null, I[49], 387, 12, "point == null || point.x >= 0 && point.x <= 1");
      if (!(point == null || point.y >= 0 && point.y <= 1)) dart.assertFailed(null, I[49], 388, 12, "point == null || point.y >= 0 && point.y <= 1");
      return method_channel_camera._channel.invokeMethod(dart.void, "setExposurePoint", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId, "reset", point == null, "x", (t129 = point, t129 == null ? null : t129.x), "y", (t129$ = point, t129$ == null ? null : t129$.y)]));
    }
    getMinExposureOffset(cameraId) {
      return async.async(core.double, function* getMinExposureOffset() {
        let minExposureOffset = (yield method_channel_camera._channel.invokeMethod(core.double, "getMinExposureOffset", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId])));
        return dart.nullCheck(minExposureOffset);
      });
    }
    getMaxExposureOffset(cameraId) {
      return async.async(core.double, function* getMaxExposureOffset() {
        let maxExposureOffset = (yield method_channel_camera._channel.invokeMethod(core.double, "getMaxExposureOffset", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId])));
        return dart.nullCheck(maxExposureOffset);
      });
    }
    getExposureOffsetStepSize(cameraId) {
      return async.async(core.double, function* getExposureOffsetStepSize() {
        let stepSize = (yield method_channel_camera._channel.invokeMethod(core.double, "getExposureOffsetStepSize", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId])));
        return dart.nullCheck(stepSize);
      });
    }
    setExposureOffset(cameraId, offset) {
      return async.async(core.double, function* setExposureOffset() {
        let appliedOffset = (yield method_channel_camera._channel.invokeMethod(core.double, "setExposureOffset", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId, "offset", offset])));
        return dart.nullCheck(appliedOffset);
      });
    }
    setFocusMode(cameraId, mode) {
      return method_channel_camera._channel.invokeMethod(dart.void, "setFocusMode", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId, "mode", focus_mode.serializeFocusMode(mode)]));
    }
    setFocusPoint(cameraId, point) {
      let t129, t129$;
      if (!(point == null || point.x >= 0 && point.x <= 1)) dart.assertFailed(null, I[49], 456, 12, "point == null || point.x >= 0 && point.x <= 1");
      if (!(point == null || point.y >= 0 && point.y <= 1)) dart.assertFailed(null, I[49], 457, 12, "point == null || point.y >= 0 && point.y <= 1");
      return method_channel_camera._channel.invokeMethod(dart.void, "setFocusPoint", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId, "reset", point == null, "x", (t129 = point, t129 == null ? null : t129.x), "y", (t129$ = point, t129$ == null ? null : t129$.y)]));
    }
    getMaxZoomLevel(cameraId) {
      return async.async(core.double, function* getMaxZoomLevel() {
        let maxZoomLevel = (yield method_channel_camera._channel.invokeMethod(core.double, "getMaxZoomLevel", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId])));
        return dart.nullCheck(maxZoomLevel);
      });
    }
    getMinZoomLevel(cameraId) {
      return async.async(core.double, function* getMinZoomLevel() {
        let minZoomLevel = (yield method_channel_camera._channel.invokeMethod(core.double, "getMinZoomLevel", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId])));
        return dart.nullCheck(minZoomLevel);
      });
    }
    setZoomLevel(cameraId, zoom) {
      return async.async(dart.void, function* setZoomLevel() {
        try {
          yield method_channel_camera._channel.invokeMethod(core.double, "setZoomLevel", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId, "zoom", zoom]));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (message_codec.PlatformException.is(e)) {
            dart.throw(new camera_exception.CameraException.new(e.code, e.message));
          } else
            throw e$;
        }
      });
    }
    pausePreview(cameraId) {
      return async.async(dart.void, function* pausePreview() {
        yield method_channel_camera._channel.invokeMethod(core.double, "pausePreview", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId]));
      });
    }
    resumePreview(cameraId) {
      return async.async(dart.void, function* resumePreview() {
        yield method_channel_camera._channel.invokeMethod(core.double, "resumePreview", new (T$.IdentityMapOfString$dynamic()).from(["cameraId", cameraId]));
      });
    }
    setDescriptionWhileRecording(description) {
      return async.async(dart.void, function* setDescriptionWhileRecording() {
        yield method_channel_camera._channel.invokeMethod(core.double, "setDescriptionWhileRecording", new (T$.IdentityMapOfString$dynamic()).from(["cameraName", description.name]));
      });
    }
    buildPreview(cameraId) {
      return new texture.Texture.new({textureId: cameraId});
    }
    [_serializeFlashMode](flashMode) {
      switch (flashMode) {
        case C[1613] || CT.C1613:
          {
            return "off";
          }
        case C[1614] || CT.C1614:
          {
            return "auto";
          }
        case C[1615] || CT.C1615:
          {
            return "always";
          }
        case C[1616] || CT.C1616:
          {
            return "torch";
          }
      }
    }
    [_serializeResolutionPreset](resolutionPreset) {
      switch (resolutionPreset) {
        case C[1564] || CT.C1564:
          {
            return "max";
          }
        case C[1565] || CT.C1565:
          {
            return "ultraHigh";
          }
        case C[1567] || CT.C1567:
          {
            return "veryHigh";
          }
        case C[1569] || CT.C1569:
          {
            return "high";
          }
        case C[1571] || CT.C1571:
          {
            return "medium";
          }
        case C[1573] || CT.C1573:
          {
            return "low";
          }
      }
    }
    handleDeviceMethodCall(call) {
      return async.async(dart.dynamic, (function* handleDeviceMethodCall() {
        switch (call.method) {
          case "orientation_changed":
            {
              let $arguments = this[_getArgumentDictionary](call);
              this.deviceEventStreamController.add(new device_event.DeviceOrientationChangedEvent.new(utils.deserializeDeviceOrientation(core.String.as(dart.nullCheck($arguments[$_get]("orientation"))))));
              break;
            }
          default:
            {
              dart.throw(new message_codec.MissingPluginException.new());
            }
        }
      }).bind(this));
    }
    handleCameraMethodCall(call, cameraId) {
      return async.async(dart.dynamic, (function* handleCameraMethodCall() {
        switch (call.method) {
          case "initialized":
            {
              let $arguments = this[_getArgumentDictionary](call);
              this.cameraEventStreamController.add(new camera_event.CameraInitializedEvent.new(cameraId, core.double.as(dart.nullCheck($arguments[$_get]("previewWidth"))), core.double.as(dart.nullCheck($arguments[$_get]("previewHeight"))), exposure_mode.deserializeExposureMode(core.String.as(dart.nullCheck($arguments[$_get]("exposureMode")))), core.bool.as(dart.nullCheck($arguments[$_get]("exposurePointSupported"))), focus_mode.deserializeFocusMode(core.String.as(dart.nullCheck($arguments[$_get]("focusMode")))), core.bool.as(dart.nullCheck($arguments[$_get]("focusPointSupported")))));
              break;
            }
          case "resolution_changed":
            {
              let $arguments = this[_getArgumentDictionary](call);
              this.cameraEventStreamController.add(new camera_event.CameraResolutionChangedEvent.new(cameraId, core.double.as(dart.nullCheck($arguments[$_get]("captureWidth"))), core.double.as(dart.nullCheck($arguments[$_get]("captureHeight")))));
              break;
            }
          case "camera_closing":
            {
              this.cameraEventStreamController.add(new camera_event.CameraClosingEvent.new(cameraId));
              break;
            }
          case "video_recorded":
            {
              let $arguments = this[_getArgumentDictionary](call);
              this.cameraEventStreamController.add(new camera_event.VideoRecordedEvent.new(cameraId, new html$.XFile.new(core.String.as(dart.nullCheck($arguments[$_get]("path")))), $arguments[$_get]("maxVideoDuration") != null ? new core.Duration.new({milliseconds: core.int.as(dart.nullCheck($arguments[$_get]("maxVideoDuration")))}) : null));
              break;
            }
          case "error":
            {
              let $arguments = this[_getArgumentDictionary](call);
              this.cameraEventStreamController.add(new camera_event.CameraErrorEvent.new(cameraId, core.String.as(dart.nullCheck($arguments[$_get]("description")))));
              break;
            }
          default:
            {
              dart.throw(new message_codec.MissingPluginException.new());
            }
        }
      }).bind(this));
    }
    [_getArgumentDictionary](call) {
      return T$.MapOfObjectN$ObjectN().as(call.arguments)[$cast](core.String, T$.ObjectN());
    }
  };
  (method_channel_camera.MethodChannelCamera.new = function() {
    this[_channels] = new (T$.IdentityMapOfint$MethodChannel()).new();
    this[cameraEventStreamController$] = T$.StreamControllerOfCameraEvent().broadcast();
    this[deviceEventStreamController] = T$.StreamControllerOfDeviceEvent().broadcast();
    this[_platformImageStreamSubscription] = null;
    this[_frameStreamController] = null;
    method_channel_camera.MethodChannelCamera.__proto__.new.call(this);
    let channel = C[1609] || CT.C1609;
    channel.setMethodCallHandler(dart.fn(call => this.handleDeviceMethodCall(call), T$.MethodCallToFuture()));
  }).prototype = method_channel_camera.MethodChannelCamera.prototype;
  dart.addTypeTests(method_channel_camera.MethodChannelCamera);
  dart.addTypeCaches(method_channel_camera.MethodChannelCamera);
  dart.setMethodSignature(method_channel_camera.MethodChannelCamera, () => ({
    __proto__: dart.getMethods(method_channel_camera.MethodChannelCamera.__proto__),
    [_cameraEvents$]: dart.fnType(async.Stream$(camera_event.CameraEvent), [core.int]),
    [_installStreamController]: dart.fnType(async.StreamController$(camera_image_data.CameraImageData), [], {onListen: dart.nullable(dart.fnType(dart.dynamic, []))}, {}),
    [_onFrameStreamListen]: dart.fnType(dart.void, []),
    [_startPlatformStream]: dart.fnType(async.Future$(dart.void), []),
    [_startStreamListener]: dart.fnType(dart.void, []),
    [_onFrameStreamCancel]: dart.fnType(dart.void, []),
    [_onFrameStreamPauseResume]: dart.fnType(dart.void, []),
    [_serializeFlashMode]: dart.fnType(core.String, [flash_mode.FlashMode]),
    [_serializeResolutionPreset]: dart.fnType(core.String, [resolution_preset.ResolutionPreset]),
    handleDeviceMethodCall: dart.fnType(async.Future, [message_codec.MethodCall]),
    handleCameraMethodCall: dart.fnType(async.Future, [message_codec.MethodCall, core.int]),
    [_getArgumentDictionary]: dart.fnType(core.Map$(core.String, dart.nullable(core.Object)), [message_codec.MethodCall])
  }));
  dart.setLibraryUri(method_channel_camera.MethodChannelCamera, I[50]);
  dart.setFieldSignature(method_channel_camera.MethodChannelCamera, () => ({
    __proto__: dart.getFields(method_channel_camera.MethodChannelCamera.__proto__),
    [_channels]: dart.finalFieldType(core.Map$(core.int, platform_channel.MethodChannel)),
    cameraEventStreamController: dart.finalFieldType(async.StreamController$(camera_event.CameraEvent)),
    deviceEventStreamController: dart.finalFieldType(async.StreamController$(device_event.DeviceEvent)),
    [_platformImageStreamSubscription]: dart.fieldType(dart.nullable(async.StreamSubscription)),
    [_frameStreamController]: dart.fieldType(dart.nullable(async.StreamController$(camera_image_data.CameraImageData)))
  }));
  dart.defineLazy(method_channel_camera, {
    /*method_channel_camera._channel*/get _channel() {
      return C[1617] || CT.C1617;
    }
  }, false);
  var _name = dart.privateName(core, "_name");
  var _enumToString = dart.privateName(core, "_enumToString");
  resolution_preset.ResolutionPreset = class ResolutionPreset extends core._Enum {
    [_enumToString]() {
      return "ResolutionPreset." + this[_name];
    }
  };
  (resolution_preset.ResolutionPreset.new = function(index, name) {
    resolution_preset.ResolutionPreset.__proto__.new.call(this, index, name);
    ;
  }).prototype = resolution_preset.ResolutionPreset.prototype;
  dart.addTypeTests(resolution_preset.ResolutionPreset);
  dart.addTypeCaches(resolution_preset.ResolutionPreset);
  dart.setMethodSignature(resolution_preset.ResolutionPreset, () => ({
    __proto__: dart.getMethods(resolution_preset.ResolutionPreset.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(resolution_preset.ResolutionPreset, I[51]);
  dart.setStaticFieldSignature(resolution_preset.ResolutionPreset, () => ['values', 'low', 'medium', 'high', 'veryHigh', 'ultraHigh', 'max']);
  dart.defineLazy(resolution_preset.ResolutionPreset, {
    /*resolution_preset.ResolutionPreset.values*/get values() {
      return C[1618] || CT.C1618;
    },
    /*resolution_preset.ResolutionPreset.low*/get low() {
      return C[1573] || CT.C1573;
    },
    /*resolution_preset.ResolutionPreset.medium*/get medium() {
      return C[1571] || CT.C1571;
    },
    /*resolution_preset.ResolutionPreset.high*/get high() {
      return C[1569] || CT.C1569;
    },
    /*resolution_preset.ResolutionPreset.veryHigh*/get veryHigh() {
      return C[1567] || CT.C1567;
    },
    /*resolution_preset.ResolutionPreset.ultraHigh*/get ultraHigh() {
      return C[1565] || CT.C1565;
    },
    /*resolution_preset.ResolutionPreset.max*/get max() {
      return C[1564] || CT.C1564;
    }
  }, false);
  camera_description.CameraLensDirection = class CameraLensDirection extends core._Enum {
    [_enumToString]() {
      return "CameraLensDirection." + this[_name];
    }
  };
  (camera_description.CameraLensDirection.new = function(index, name) {
    camera_description.CameraLensDirection.__proto__.new.call(this, index, name);
    ;
  }).prototype = camera_description.CameraLensDirection.prototype;
  dart.addTypeTests(camera_description.CameraLensDirection);
  dart.addTypeCaches(camera_description.CameraLensDirection);
  dart.setMethodSignature(camera_description.CameraLensDirection, () => ({
    __proto__: dart.getMethods(camera_description.CameraLensDirection.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(camera_description.CameraLensDirection, I[52]);
  dart.setStaticFieldSignature(camera_description.CameraLensDirection, () => ['values', 'front', 'back', 'external']);
  dart.defineLazy(camera_description.CameraLensDirection, {
    /*camera_description.CameraLensDirection.values*/get values() {
      return C[1619] || CT.C1619;
    },
    /*camera_description.CameraLensDirection.front*/get front() {
      return C[1620] || CT.C1620;
    },
    /*camera_description.CameraLensDirection.back*/get back() {
      return C[1621] || CT.C1621;
    },
    /*camera_description.CameraLensDirection.external*/get external() {
      return C[1622] || CT.C1622;
    }
  }, false);
  var name$ = dart.privateName(camera_description, "CameraDescription.name");
  var lensDirection$ = dart.privateName(camera_description, "CameraDescription.lensDirection");
  var sensorOrientation$ = dart.privateName(camera_description, "CameraDescription.sensorOrientation");
  camera_description.CameraDescription = class CameraDescription extends core.Object {
    get name() {
      return this[name$];
    }
    set name(value) {
      super.name = value;
    }
    get lensDirection() {
      return this[lensDirection$];
    }
    set lensDirection(value) {
      super.lensDirection = value;
    }
    get sensorOrientation() {
      return this[sensorOrientation$];
    }
    set sensorOrientation(value) {
      super.sensorOrientation = value;
    }
    static ['_#new#tearOff'](opts) {
      let name = opts && 'name' in opts ? opts.name : null;
      let lensDirection = opts && 'lensDirection' in opts ? opts.lensDirection : null;
      let sensorOrientation = opts && 'sensorOrientation' in opts ? opts.sensorOrientation : null;
      return new camera_description.CameraDescription.new({name: name, lensDirection: lensDirection, sensorOrientation: sensorOrientation});
    }
    _equals(other) {
      if (other == null) return false;
      return this === other || camera_description.CameraDescription.is(other) && this[$runtimeType]._equals(other[$runtimeType]) && this.name === other.name && this.lensDirection === other.lensDirection;
    }
    get hashCode() {
      return core.Object.hash(this.name, this.lensDirection);
    }
    toString() {
      return object.objectRuntimeType(this, "CameraDescription") + "(" + this.name + ", " + dart.str(this.lensDirection) + ", " + dart.str(this.sensorOrientation) + ")";
    }
  };
  (camera_description.CameraDescription.new = function(opts) {
    let name = opts && 'name' in opts ? opts.name : null;
    let lensDirection = opts && 'lensDirection' in opts ? opts.lensDirection : null;
    let sensorOrientation = opts && 'sensorOrientation' in opts ? opts.sensorOrientation : null;
    this[name$] = name;
    this[lensDirection$] = lensDirection;
    this[sensorOrientation$] = sensorOrientation;
    ;
  }).prototype = camera_description.CameraDescription.prototype;
  dart.addTypeTests(camera_description.CameraDescription);
  dart.addTypeCaches(camera_description.CameraDescription);
  dart.setLibraryUri(camera_description.CameraDescription, I[52]);
  dart.setFieldSignature(camera_description.CameraDescription, () => ({
    __proto__: dart.getFields(camera_description.CameraDescription.__proto__),
    name: dart.finalFieldType(core.String),
    lensDirection: dart.finalFieldType(camera_description.CameraLensDirection),
    sensorOrientation: dart.finalFieldType(core.int)
  }));
  dart.defineExtensionMethods(camera_description.CameraDescription, ['_equals', 'toString']);
  dart.defineExtensionAccessors(camera_description.CameraDescription, ['hashCode']);
  var code$0 = dart.privateName(camera_exception, "CameraException.code");
  var description$2 = dart.privateName(camera_exception, "CameraException.description");
  camera_exception.CameraException = class CameraException extends core.Object {
    get code() {
      return this[code$0];
    }
    set code(value) {
      this[code$0] = value;
    }
    get description() {
      return this[description$2];
    }
    set description(value) {
      this[description$2] = value;
    }
    static ['_#new#tearOff'](code, description) {
      return new camera_exception.CameraException.new(code, description);
    }
    toString() {
      return "CameraException(" + this.code + ", " + dart.str(this.description) + ")";
    }
  };
  (camera_exception.CameraException.new = function(code, description) {
    this[code$0] = code;
    this[description$2] = description;
    ;
  }).prototype = camera_exception.CameraException.prototype;
  dart.addTypeTests(camera_exception.CameraException);
  dart.addTypeCaches(camera_exception.CameraException);
  camera_exception.CameraException[dart.implements] = () => [core.Exception];
  dart.setLibraryUri(camera_exception.CameraException, I[53]);
  dart.setFieldSignature(camera_exception.CameraException, () => ({
    __proto__: dart.getFields(camera_exception.CameraException.__proto__),
    code: dart.fieldType(core.String),
    description: dart.fieldType(dart.nullable(core.String))
  }));
  dart.defineExtensionMethods(camera_exception.CameraException, ['toString']);
  camera_image_data.CameraImageStreamOptions = class CameraImageStreamOptions extends core.Object {
    static ['_#new#tearOff']() {
      return new camera_image_data.CameraImageStreamOptions.new();
    }
  };
  (camera_image_data.CameraImageStreamOptions.new = function() {
    ;
  }).prototype = camera_image_data.CameraImageStreamOptions.prototype;
  dart.addTypeTests(camera_image_data.CameraImageStreamOptions);
  dart.addTypeCaches(camera_image_data.CameraImageStreamOptions);
  dart.setLibraryUri(camera_image_data.CameraImageStreamOptions, I[54]);
  var bytes$ = dart.privateName(camera_image_data, "CameraImagePlane.bytes");
  var bytesPerRow$ = dart.privateName(camera_image_data, "CameraImagePlane.bytesPerRow");
  var bytesPerPixel$ = dart.privateName(camera_image_data, "CameraImagePlane.bytesPerPixel");
  var height$0 = dart.privateName(camera_image_data, "CameraImagePlane.height");
  var width$0 = dart.privateName(camera_image_data, "CameraImagePlane.width");
  camera_image_data.CameraImagePlane = class CameraImagePlane extends core.Object {
    get bytes() {
      return this[bytes$];
    }
    set bytes(value) {
      super.bytes = value;
    }
    get bytesPerRow() {
      return this[bytesPerRow$];
    }
    set bytesPerRow(value) {
      super.bytesPerRow = value;
    }
    get bytesPerPixel() {
      return this[bytesPerPixel$];
    }
    set bytesPerPixel(value) {
      super.bytesPerPixel = value;
    }
    get height() {
      return this[height$0];
    }
    set height(value) {
      super.height = value;
    }
    get width() {
      return this[width$0];
    }
    set width(value) {
      super.width = value;
    }
    static ['_#new#tearOff'](opts) {
      let bytes = opts && 'bytes' in opts ? opts.bytes : null;
      let bytesPerRow = opts && 'bytesPerRow' in opts ? opts.bytesPerRow : null;
      let bytesPerPixel = opts && 'bytesPerPixel' in opts ? opts.bytesPerPixel : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let width = opts && 'width' in opts ? opts.width : null;
      return new camera_image_data.CameraImagePlane.new({bytes: bytes, bytesPerRow: bytesPerRow, bytesPerPixel: bytesPerPixel, height: height, width: width});
    }
  };
  (camera_image_data.CameraImagePlane.new = function(opts) {
    let bytes = opts && 'bytes' in opts ? opts.bytes : null;
    let bytesPerRow = opts && 'bytesPerRow' in opts ? opts.bytesPerRow : null;
    let bytesPerPixel = opts && 'bytesPerPixel' in opts ? opts.bytesPerPixel : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let width = opts && 'width' in opts ? opts.width : null;
    this[bytes$] = bytes;
    this[bytesPerRow$] = bytesPerRow;
    this[bytesPerPixel$] = bytesPerPixel;
    this[height$0] = height;
    this[width$0] = width;
    ;
  }).prototype = camera_image_data.CameraImagePlane.prototype;
  dart.addTypeTests(camera_image_data.CameraImagePlane);
  dart.addTypeCaches(camera_image_data.CameraImagePlane);
  dart.setLibraryUri(camera_image_data.CameraImagePlane, I[54]);
  dart.setFieldSignature(camera_image_data.CameraImagePlane, () => ({
    __proto__: dart.getFields(camera_image_data.CameraImagePlane.__proto__),
    bytes: dart.finalFieldType(typed_data.Uint8List),
    bytesPerRow: dart.finalFieldType(core.int),
    bytesPerPixel: dart.finalFieldType(dart.nullable(core.int)),
    height: dart.finalFieldType(dart.nullable(core.int)),
    width: dart.finalFieldType(dart.nullable(core.int))
  }));
  var group$ = dart.privateName(camera_image_data, "CameraImageFormat.group");
  var raw$ = dart.privateName(camera_image_data, "CameraImageFormat.raw");
  camera_image_data.CameraImageFormat = class CameraImageFormat extends core.Object {
    get group() {
      return this[group$];
    }
    set group(value) {
      super.group = value;
    }
    get raw() {
      return this[raw$];
    }
    set raw(value) {
      super.raw = value;
    }
    static ['_#new#tearOff'](group, opts) {
      let raw = opts && 'raw' in opts ? opts.raw : null;
      return new camera_image_data.CameraImageFormat.new(group, {raw: raw});
    }
  };
  (camera_image_data.CameraImageFormat.new = function(group, opts) {
    let raw = opts && 'raw' in opts ? opts.raw : null;
    this[group$] = group;
    this[raw$] = raw;
    ;
  }).prototype = camera_image_data.CameraImageFormat.prototype;
  dart.addTypeTests(camera_image_data.CameraImageFormat);
  dart.addTypeCaches(camera_image_data.CameraImageFormat);
  dart.setLibraryUri(camera_image_data.CameraImageFormat, I[54]);
  dart.setFieldSignature(camera_image_data.CameraImageFormat, () => ({
    __proto__: dart.getFields(camera_image_data.CameraImageFormat.__proto__),
    group: dart.finalFieldType(image_format_group.ImageFormatGroup),
    raw: dart.finalFieldType(dart.dynamic)
  }));
  var format$ = dart.privateName(camera_image_data, "CameraImageData.format");
  var height$1 = dart.privateName(camera_image_data, "CameraImageData.height");
  var width$1 = dart.privateName(camera_image_data, "CameraImageData.width");
  var planes$ = dart.privateName(camera_image_data, "CameraImageData.planes");
  var lensAperture$ = dart.privateName(camera_image_data, "CameraImageData.lensAperture");
  var sensorExposureTime$ = dart.privateName(camera_image_data, "CameraImageData.sensorExposureTime");
  var sensorSensitivity$ = dart.privateName(camera_image_data, "CameraImageData.sensorSensitivity");
  camera_image_data.CameraImageData = class CameraImageData extends core.Object {
    get format() {
      return this[format$];
    }
    set format(value) {
      super.format = value;
    }
    get height() {
      return this[height$1];
    }
    set height(value) {
      super.height = value;
    }
    get width() {
      return this[width$1];
    }
    set width(value) {
      super.width = value;
    }
    get planes() {
      return this[planes$];
    }
    set planes(value) {
      super.planes = value;
    }
    get lensAperture() {
      return this[lensAperture$];
    }
    set lensAperture(value) {
      super.lensAperture = value;
    }
    get sensorExposureTime() {
      return this[sensorExposureTime$];
    }
    set sensorExposureTime(value) {
      super.sensorExposureTime = value;
    }
    get sensorSensitivity() {
      return this[sensorSensitivity$];
    }
    set sensorSensitivity(value) {
      super.sensorSensitivity = value;
    }
    static ['_#new#tearOff'](opts) {
      let format = opts && 'format' in opts ? opts.format : null;
      let planes = opts && 'planes' in opts ? opts.planes : null;
      let height = opts && 'height' in opts ? opts.height : null;
      let width = opts && 'width' in opts ? opts.width : null;
      let lensAperture = opts && 'lensAperture' in opts ? opts.lensAperture : null;
      let sensorExposureTime = opts && 'sensorExposureTime' in opts ? opts.sensorExposureTime : null;
      let sensorSensitivity = opts && 'sensorSensitivity' in opts ? opts.sensorSensitivity : null;
      return new camera_image_data.CameraImageData.new({format: format, planes: planes, height: height, width: width, lensAperture: lensAperture, sensorExposureTime: sensorExposureTime, sensorSensitivity: sensorSensitivity});
    }
  };
  (camera_image_data.CameraImageData.new = function(opts) {
    let format = opts && 'format' in opts ? opts.format : null;
    let planes = opts && 'planes' in opts ? opts.planes : null;
    let height = opts && 'height' in opts ? opts.height : null;
    let width = opts && 'width' in opts ? opts.width : null;
    let lensAperture = opts && 'lensAperture' in opts ? opts.lensAperture : null;
    let sensorExposureTime = opts && 'sensorExposureTime' in opts ? opts.sensorExposureTime : null;
    let sensorSensitivity = opts && 'sensorSensitivity' in opts ? opts.sensorSensitivity : null;
    this[format$] = format;
    this[planes$] = planes;
    this[height$1] = height;
    this[width$1] = width;
    this[lensAperture$] = lensAperture;
    this[sensorExposureTime$] = sensorExposureTime;
    this[sensorSensitivity$] = sensorSensitivity;
    ;
  }).prototype = camera_image_data.CameraImageData.prototype;
  dart.addTypeTests(camera_image_data.CameraImageData);
  dart.addTypeCaches(camera_image_data.CameraImageData);
  dart.setLibraryUri(camera_image_data.CameraImageData, I[54]);
  dart.setFieldSignature(camera_image_data.CameraImageData, () => ({
    __proto__: dart.getFields(camera_image_data.CameraImageData.__proto__),
    format: dart.finalFieldType(camera_image_data.CameraImageFormat),
    height: dart.finalFieldType(core.int),
    width: dart.finalFieldType(core.int),
    planes: dart.finalFieldType(core.List$(camera_image_data.CameraImagePlane)),
    lensAperture: dart.finalFieldType(dart.nullable(core.double)),
    sensorExposureTime: dart.finalFieldType(dart.nullable(core.int)),
    sensorSensitivity: dart.finalFieldType(dart.nullable(core.double))
  }));
  exposure_mode.ExposureMode = class ExposureMode extends core._Enum {
    [_enumToString]() {
      return "ExposureMode." + this[_name];
    }
  };
  (exposure_mode.ExposureMode.new = function(index, name) {
    exposure_mode.ExposureMode.__proto__.new.call(this, index, name);
    ;
  }).prototype = exposure_mode.ExposureMode.prototype;
  dart.addTypeTests(exposure_mode.ExposureMode);
  dart.addTypeCaches(exposure_mode.ExposureMode);
  dart.setMethodSignature(exposure_mode.ExposureMode, () => ({
    __proto__: dart.getMethods(exposure_mode.ExposureMode.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(exposure_mode.ExposureMode, I[55]);
  dart.setStaticFieldSignature(exposure_mode.ExposureMode, () => ['values', 'auto', 'locked']);
  dart.defineLazy(exposure_mode.ExposureMode, {
    /*exposure_mode.ExposureMode.values*/get values() {
      return C[1623] || CT.C1623;
    },
    /*exposure_mode.ExposureMode.auto*/get auto() {
      return C[1624] || CT.C1624;
    },
    /*exposure_mode.ExposureMode.locked*/get locked() {
      return C[1625] || CT.C1625;
    }
  }, false);
  exposure_mode.serializeExposureMode = function serializeExposureMode(exposureMode) {
    switch (exposureMode) {
      case C[1625] || CT.C1625:
        {
          return "locked";
        }
      case C[1624] || CT.C1624:
        {
          return "auto";
        }
    }
  };
  exposure_mode.deserializeExposureMode = function deserializeExposureMode(str) {
    switch (str) {
      case "locked":
        {
          return exposure_mode.ExposureMode.locked;
        }
      case "auto":
        {
          return exposure_mode.ExposureMode.auto;
        }
      default:
        {
          dart.throw(new core.ArgumentError.new("\"" + str + "\" is not a valid ExposureMode value"));
        }
    }
  };
  flash_mode.FlashMode = class FlashMode extends core._Enum {
    [_enumToString]() {
      return "FlashMode." + this[_name];
    }
  };
  (flash_mode.FlashMode.new = function(index, name) {
    flash_mode.FlashMode.__proto__.new.call(this, index, name);
    ;
  }).prototype = flash_mode.FlashMode.prototype;
  dart.addTypeTests(flash_mode.FlashMode);
  dart.addTypeCaches(flash_mode.FlashMode);
  dart.setMethodSignature(flash_mode.FlashMode, () => ({
    __proto__: dart.getMethods(flash_mode.FlashMode.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(flash_mode.FlashMode, I[56]);
  dart.setStaticFieldSignature(flash_mode.FlashMode, () => ['values', 'off', 'auto', 'always', 'torch']);
  dart.defineLazy(flash_mode.FlashMode, {
    /*flash_mode.FlashMode.values*/get values() {
      return C[1626] || CT.C1626;
    },
    /*flash_mode.FlashMode.off*/get off() {
      return C[1613] || CT.C1613;
    },
    /*flash_mode.FlashMode.auto*/get auto() {
      return C[1614] || CT.C1614;
    },
    /*flash_mode.FlashMode.always*/get always() {
      return C[1615] || CT.C1615;
    },
    /*flash_mode.FlashMode.torch*/get torch() {
      return C[1616] || CT.C1616;
    }
  }, false);
  focus_mode.FocusMode = class FocusMode extends core._Enum {
    [_enumToString]() {
      return "FocusMode." + this[_name];
    }
  };
  (focus_mode.FocusMode.new = function(index, name) {
    focus_mode.FocusMode.__proto__.new.call(this, index, name);
    ;
  }).prototype = focus_mode.FocusMode.prototype;
  dart.addTypeTests(focus_mode.FocusMode);
  dart.addTypeCaches(focus_mode.FocusMode);
  dart.setMethodSignature(focus_mode.FocusMode, () => ({
    __proto__: dart.getMethods(focus_mode.FocusMode.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(focus_mode.FocusMode, I[57]);
  dart.setStaticFieldSignature(focus_mode.FocusMode, () => ['values', 'auto', 'locked']);
  dart.defineLazy(focus_mode.FocusMode, {
    /*focus_mode.FocusMode.values*/get values() {
      return C[1627] || CT.C1627;
    },
    /*focus_mode.FocusMode.auto*/get auto() {
      return C[1628] || CT.C1628;
    },
    /*focus_mode.FocusMode.locked*/get locked() {
      return C[1629] || CT.C1629;
    }
  }, false);
  focus_mode.serializeFocusMode = function serializeFocusMode(focusMode) {
    switch (focusMode) {
      case C[1629] || CT.C1629:
        {
          return "locked";
        }
      case C[1628] || CT.C1628:
        {
          return "auto";
        }
    }
  };
  focus_mode.deserializeFocusMode = function deserializeFocusMode(str) {
    switch (str) {
      case "locked":
        {
          return focus_mode.FocusMode.locked;
        }
      case "auto":
        {
          return focus_mode.FocusMode.auto;
        }
      default:
        {
          dart.throw(new core.ArgumentError.new("\"" + str + "\" is not a valid FocusMode value"));
        }
    }
  };
  image_format_group.ImageFormatGroup = class ImageFormatGroup extends core._Enum {
    [_enumToString]() {
      return "ImageFormatGroup." + this[_name];
    }
  };
  (image_format_group.ImageFormatGroup.new = function(index, name) {
    image_format_group.ImageFormatGroup.__proto__.new.call(this, index, name);
    ;
  }).prototype = image_format_group.ImageFormatGroup.prototype;
  dart.addTypeTests(image_format_group.ImageFormatGroup);
  dart.addTypeCaches(image_format_group.ImageFormatGroup);
  dart.setMethodSignature(image_format_group.ImageFormatGroup, () => ({
    __proto__: dart.getMethods(image_format_group.ImageFormatGroup.__proto__),
    [_enumToString]: dart.fnType(core.String, [])
  }));
  dart.setLibraryUri(image_format_group.ImageFormatGroup, I[58]);
  dart.setStaticFieldSignature(image_format_group.ImageFormatGroup, () => ['values', 'unknown', 'yuv420', 'bgra8888', 'jpeg', 'nv21']);
  dart.defineLazy(image_format_group.ImageFormatGroup, {
    /*image_format_group.ImageFormatGroup.values*/get values() {
      return C[1630] || CT.C1630;
    },
    /*image_format_group.ImageFormatGroup.unknown*/get unknown() {
      return C[1557] || CT.C1557;
    },
    /*image_format_group.ImageFormatGroup.yuv420*/get yuv420() {
      return C[1631] || CT.C1631;
    },
    /*image_format_group.ImageFormatGroup.bgra8888*/get bgra8888() {
      return C[1632] || CT.C1632;
    },
    /*image_format_group.ImageFormatGroup.jpeg*/get jpeg() {
      return C[1633] || CT.C1633;
    },
    /*image_format_group.ImageFormatGroup.nv21*/get nv21() {
      return C[1634] || CT.C1634;
    }
  }, false);
  image_format_group['ImageFormatGroupName|name'] = function ImageFormatGroupName$124name($this) {
    switch ($this) {
      case C[1632] || CT.C1632:
        {
          return "bgra8888";
        }
      case C[1631] || CT.C1631:
        {
          return "yuv420";
        }
      case C[1633] || CT.C1633:
        {
          return "jpeg";
        }
      case C[1634] || CT.C1634:
        {
          return "nv21";
        }
      case C[1557] || CT.C1557:
        {
          return "unknown";
        }
    }
  };
  image_format_group['ImageFormatGroupName|get#name'] = function ImageFormatGroupName$124get$35name($this) {
    return dart.fn(() => image_format_group['ImageFormatGroupName|name']($this), T$.VoidToString());
  };
  var cameraId$1 = dart.privateName(video_capture_options, "VideoCaptureOptions.cameraId");
  var maxDuration$ = dart.privateName(video_capture_options, "VideoCaptureOptions.maxDuration");
  var streamCallback$ = dart.privateName(video_capture_options, "VideoCaptureOptions.streamCallback");
  var streamOptions$ = dart.privateName(video_capture_options, "VideoCaptureOptions.streamOptions");
  video_capture_options.VideoCaptureOptions = class VideoCaptureOptions extends core.Object {
    get cameraId() {
      return this[cameraId$1];
    }
    set cameraId(value) {
      super.cameraId = value;
    }
    get maxDuration() {
      return this[maxDuration$];
    }
    set maxDuration(value) {
      super.maxDuration = value;
    }
    get streamCallback() {
      return this[streamCallback$];
    }
    set streamCallback(value) {
      super.streamCallback = value;
    }
    get streamOptions() {
      return this[streamOptions$];
    }
    set streamOptions(value) {
      super.streamOptions = value;
    }
    static ['_#new#tearOff'](cameraId, opts) {
      let maxDuration = opts && 'maxDuration' in opts ? opts.maxDuration : null;
      let streamCallback = opts && 'streamCallback' in opts ? opts.streamCallback : null;
      let streamOptions = opts && 'streamOptions' in opts ? opts.streamOptions : null;
      return new video_capture_options.VideoCaptureOptions.new(cameraId, {maxDuration: maxDuration, streamCallback: streamCallback, streamOptions: streamOptions});
    }
    _equals(other) {
      if (other == null) return false;
      return this === other || video_capture_options.VideoCaptureOptions.is(other) && this[$runtimeType]._equals(other[$runtimeType]) && this.cameraId === other.cameraId && dart.equals(this.maxDuration, other.maxDuration) && dart.equals(this.streamCallback, other.streamCallback) && dart.equals(this.streamOptions, other.streamOptions);
    }
    get hashCode() {
      return core.Object.hash(this.cameraId, this.maxDuration, this.streamCallback, this.streamOptions);
    }
  };
  (video_capture_options.VideoCaptureOptions.new = function(cameraId, opts) {
    let maxDuration = opts && 'maxDuration' in opts ? opts.maxDuration : null;
    let streamCallback = opts && 'streamCallback' in opts ? opts.streamCallback : null;
    let streamOptions = opts && 'streamOptions' in opts ? opts.streamOptions : null;
    this[cameraId$1] = cameraId;
    this[maxDuration$] = maxDuration;
    this[streamCallback$] = streamCallback;
    this[streamOptions$] = streamOptions;
    if (!(streamOptions == null || streamCallback != null)) dart.assertFailed("Must specify streamCallback if providing streamOptions.", I[59], 19, 11, "streamOptions == null || streamCallback != null");
    ;
  }).prototype = video_capture_options.VideoCaptureOptions.prototype;
  dart.addTypeTests(video_capture_options.VideoCaptureOptions);
  dart.addTypeCaches(video_capture_options.VideoCaptureOptions);
  dart.setLibraryUri(video_capture_options.VideoCaptureOptions, I[60]);
  dart.setFieldSignature(video_capture_options.VideoCaptureOptions, () => ({
    __proto__: dart.getFields(video_capture_options.VideoCaptureOptions.__proto__),
    cameraId: dart.finalFieldType(core.int),
    maxDuration: dart.finalFieldType(dart.nullable(core.Duration)),
    streamCallback: dart.finalFieldType(dart.nullable(dart.fnType(dart.dynamic, [camera_image_data.CameraImageData]))),
    streamOptions: dart.finalFieldType(dart.nullable(camera_image_data.CameraImageStreamOptions))
  }));
  dart.defineExtensionMethods(video_capture_options.VideoCaptureOptions, ['_equals']);
  dart.defineExtensionAccessors(video_capture_options.VideoCaptureOptions, ['hashCode']);
  aggregate_sample['AggregateSample|aggregateSample'] = function AggregateSample$124aggregateSample(T, S, $this, opts) {
    let trigger = opts && 'trigger' in opts ? opts.trigger : null;
    let aggregate = opts && 'aggregate' in opts ? opts.aggregate : null;
    let longPoll = opts && 'longPoll' in opts ? opts.longPoll : null;
    let onEmpty = opts && 'onEmpty' in opts ? opts.onEmpty : null;
    let controller = $this.isBroadcast ? async.StreamController$(S).broadcast({sync: true}) : async.StreamController$(S).new({sync: true});
    let currentResults = null;
    let hasCurrentResults = false;
    let activeLongPoll = false;
    let isTriggerDone = false;
    let isValueDone = false;
    let valueSub = null;
    let triggerSub = null;
    function emit(results) {
      currentResults = null;
      hasCurrentResults = false;
      controller.add(results);
    }
    dart.fn(emit, dart.fnType(dart.void, [S]));
    function onValue(value) {
      currentResults = aggregate(value, currentResults);
      hasCurrentResults = true;
      if (!longPoll) return;
      if (activeLongPoll) {
        activeLongPoll = false;
        emit(S.as(currentResults));
      }
      if (isTriggerDone) {
        dart.nullCheck(valueSub).cancel();
        controller.close();
      }
    }
    dart.fn(onValue, dart.fnType(dart.void, [T]));
    function onValuesDone() {
      let t145;
      isValueDone = true;
      if (!hasCurrentResults) {
        t145 = triggerSub;
        t145 == null ? null : t145.cancel();
        controller.close();
      }
    }
    dart.fn(onValuesDone, T$.VoidTovoid());
    function onTrigger(_) {
      if (hasCurrentResults) {
        emit(S.as(currentResults));
      } else if (longPoll) {
        activeLongPoll = true;
      } else {
        onEmpty(controller);
      }
      if (isValueDone) {
        dart.nullCheck(triggerSub).cancel();
        controller.close();
      }
    }
    dart.fn(onTrigger, T$.dynamicTovoid());
    function onTriggerDone() {
      let t145;
      isTriggerDone = true;
      if (!activeLongPoll) {
        t145 = valueSub;
        t145 == null ? null : t145.cancel();
        controller.close();
      }
    }
    dart.fn(onTriggerDone, T$.VoidTovoid());
    controller.onListen = dart.fn(() => {
      let t145;
      if (!(valueSub == null)) dart.assertFailed(null, I[61], 108, 14, "valueSub == null");
      valueSub = $this.listen(onValue, {onError: dart.bind(controller, 'addError'), onDone: onValuesDone});
      let priorTriggerSub = triggerSub;
      if (priorTriggerSub != null) {
        if (priorTriggerSub.isPaused) priorTriggerSub.resume();
      } else {
        triggerSub = trigger.listen(onTrigger, {onError: dart.bind(controller, 'addError'), onDone: onTriggerDone});
      }
      if (!$this.isBroadcast) {
        t145 = controller;
        (() => {
          t145.onPause = dart.fn(() => {
            let t146, t146$;
            t146 = valueSub;
            t146 == null ? null : t146.pause();
            t146$ = triggerSub;
            t146$ == null ? null : t146$.pause();
          }, T$.VoidTovoid());
          t145.onResume = dart.fn(() => {
            let t146, t146$;
            t146 = valueSub;
            t146 == null ? null : t146.resume();
            t146$ = triggerSub;
            t146$ == null ? null : t146$.resume();
          }, T$.VoidTovoid());
          return t145;
        })();
      }
      controller.onCancel = dart.fn(() => {
        let cancels = (() => {
          let t145 = T$.JSArrayOfFutureOfvoid().of([]);
          if (!isValueDone) t145.push(dart.nullCheck(valueSub).cancel());
          return t145;
        })();
        valueSub = null;
        if (trigger.isBroadcast || !$this.isBroadcast) {
          if (!isTriggerDone) cancels[$add](dart.nullCheck(triggerSub).cancel());
          triggerSub = null;
        } else {
          dart.nullCheck(triggerSub).pause();
        }
        cancels[$removeWhere](dart.fn(f => f == null, T$.ObjectNTobool()));
        if (cancels[$isEmpty]) return null;
        return async.Future.wait(dart.void, cancels).then(dart.void, dart.fn(_ => null, T$.ListOfvoidToNull()));
      }, T$.VoidToFutureNOfvoid());
    }, T$.VoidTovoid());
    return controller.stream;
  };
  aggregate_sample['AggregateSample|get#aggregateSample'] = function AggregateSample$124get$35aggregateSample(T, $this) {
    return dart.fn((S, opts) => {
      let trigger = opts && 'trigger' in opts ? opts.trigger : null;
      let aggregate = opts && 'aggregate' in opts ? opts.aggregate : null;
      let longPoll = opts && 'longPoll' in opts ? opts.longPoll : null;
      let onEmpty = opts && 'onEmpty' in opts ? opts.onEmpty : null;
      return aggregate_sample['AggregateSample|aggregateSample'](T, S, $this, {trigger: trigger, aggregate: aggregate, longPoll: longPoll, onEmpty: onEmpty});
    }, dart.gFnType(S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      var __t$SN = () => (__t$SN = dart.constFn(dart.nullable(S)))();
      var __t$SinkOfS = () => (__t$SinkOfS = dart.constFn(core.Sink$(S)))();
      var __t$SinkOfSTovoid = () => (__t$SinkOfSTovoid = dart.constFn(dart.fnType(dart.void, [__t$SinkOfS()])))();
      return [__t$StreamOfS(), [], {aggregate: dart.fnType(S, [T, __t$SN()]), longPoll: core.bool, onEmpty: __t$SinkOfSTovoid(), trigger: T$.StreamOfvoid()}, {}];
    }, S => {
      var __t$StreamOfS = () => (__t$StreamOfS = dart.constFn(async.Stream$(S)))();
      var __t$SN = () => (__t$SN = dart.constFn(dart.nullable(S)))();
      var __t$SinkOfS = () => (__t$SinkOfS = dart.constFn(core.Sink$(S)))();
      var __t$SinkOfSTovoid = () => (__t$SinkOfSTovoid = dart.constFn(dart.fnType(dart.void, [__t$SinkOfS()])))();
      return [T$.ObjectN()];
    }));
  };
  from_handlers['TransformByHandlers|transformByHandlers'] = function TransformByHandlers$124transformByHandlers(S, T, $this, opts) {
    let t148, t148$, t148$0;
    let onData = opts && 'onData' in opts ? opts.onData : null;
    let onError = opts && 'onError' in opts ? opts.onError : null;
    let onDone = opts && 'onDone' in opts ? opts.onDone : null;
    let handleData = (t148 = onData, t148 == null ? dart.gbind(C[1635] || CT.C1635, S, T) : t148);
    let handleError = (t148$ = onError, t148$ == null ? dart.gbind(C[1636] || CT.C1636, T) : t148$);
    let handleDone = (t148$0 = onDone, t148$0 == null ? dart.gbind(C[1637] || CT.C1637, T) : t148$0);
    let controller = $this.isBroadcast ? async.StreamController$(T).broadcast({sync: true}) : async.StreamController$(T).new({sync: true});
    let subscription = null;
    controller.onListen = dart.fn(() => {
      let t148;
      if (!(subscription == null)) dart.assertFailed(null, I[62], 27, 14, "subscription == null");
      let valuesDone = false;
      subscription = $this.listen(dart.fn(value => handleData(value, controller), dart.fnType(dart.void, [S])), {onError: dart.fn((error, stackTrace) => {
          handleError(error, stackTrace, controller);
        }, T$.ObjectAndStackTraceToNull()), onDone: dart.fn(() => {
          valuesDone = true;
          handleDone(controller);
        }, T$.VoidTovoid())});
      if (!$this.isBroadcast) {
        t148 = controller;
        (() => {
          t148.onPause = dart.bind(dart.nullCheck(subscription), 'pause');
          t148.onResume = dart.bind(dart.nullCheck(subscription), 'resume');
          return t148;
        })();
      }
      controller.onCancel = dart.fn(() => {
        let toCancel = subscription;
        subscription = null;
        if (!valuesDone) return dart.nullCheck(toCancel).cancel();
        return null;
      }, T$.VoidToFutureNOfvoid());
    }, T$.VoidTovoid());
    return controller.stream;
  };
  from_handlers['TransformByHandlers|get#transformByHandlers'] = function TransformByHandlers$124get$35transformByHandlers(S, $this) {
    return dart.fn((T, opts) => {
      let onData = opts && 'onData' in opts ? opts.onData : null;
      let onError = opts && 'onError' in opts ? opts.onError : null;
      let onDone = opts && 'onDone' in opts ? opts.onDone : null;
      return from_handlers['TransformByHandlers|transformByHandlers'](S, T, $this, {onData: onData, onError: onError, onDone: onDone});
    }, dart.gFnType(T => {
      var __t$StreamOfT = () => (__t$StreamOfT = dart.constFn(async.Stream$(T)))();
      var __t$EventSinkOfT = () => (__t$EventSinkOfT = dart.constFn(async.EventSink$(T)))();
      var __t$EventSinkOfTTovoid = () => (__t$EventSinkOfTTovoid = dart.constFn(dart.fnType(dart.void, [__t$EventSinkOfT()])))();
      var __t$EventSinkOfTToNvoid = () => (__t$EventSinkOfTToNvoid = dart.constFn(dart.nullable(__t$EventSinkOfTTovoid())))();
      var __t$ObjectAndStackTraceAndEventSinkOfTTovoid = () => (__t$ObjectAndStackTraceAndEventSinkOfTTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace, __t$EventSinkOfT()])))();
      var __t$ObjectAndStackTraceAndEventSinkOfTToNvoid = () => (__t$ObjectAndStackTraceAndEventSinkOfTToNvoid = dart.constFn(dart.nullable(__t$ObjectAndStackTraceAndEventSinkOfTTovoid())))();
      return [__t$StreamOfT(), [], {onData: dart.nullable(dart.fnType(dart.void, [S, __t$EventSinkOfT()])), onDone: __t$EventSinkOfTToNvoid(), onError: __t$ObjectAndStackTraceAndEventSinkOfTToNvoid()}, {}];
    }, T => {
      var __t$StreamOfT = () => (__t$StreamOfT = dart.constFn(async.Stream$(T)))();
      var __t$EventSinkOfT = () => (__t$EventSinkOfT = dart.constFn(async.EventSink$(T)))();
      var __t$EventSinkOfTTovoid = () => (__t$EventSinkOfTTovoid = dart.constFn(dart.fnType(dart.void, [__t$EventSinkOfT()])))();
      var __t$EventSinkOfTToNvoid = () => (__t$EventSinkOfTToNvoid = dart.constFn(dart.nullable(__t$EventSinkOfTTovoid())))();
      var __t$ObjectAndStackTraceAndEventSinkOfTTovoid = () => (__t$ObjectAndStackTraceAndEventSinkOfTTovoid = dart.constFn(dart.fnType(dart.void, [core.Object, core.StackTrace, __t$EventSinkOfT()])))();
      var __t$ObjectAndStackTraceAndEventSinkOfTToNvoid = () => (__t$ObjectAndStackTraceAndEventSinkOfTToNvoid = dart.constFn(dart.nullable(__t$ObjectAndStackTraceAndEventSinkOfTTovoid())))();
      return [T$.ObjectN()];
    }));
  };
  from_handlers['TransformByHandlers|_defaultHandleData'] = function TransformByHandlers$124_defaultHandleData(S, T, value, sink) {
    sink.add(T.as(value));
  };
  from_handlers['TransformByHandlers|_defaultHandleError'] = function TransformByHandlers$124_defaultHandleError(T, error, stackTrace, sink) {
    sink.addError(error, stackTrace);
  };
  from_handlers['TransformByHandlers|_defaultHandleDone'] = function TransformByHandlers$124_defaultHandleDone(T, sink) {
    sink.close();
  };
  var __XFile__path = dart.privateName(html$, "_#XFile#_path");
  var _browserBlob = dart.privateName(html$, "_browserBlob");
  var __XFile__target = dart.privateName(html$, "_#XFile#_target");
  var _mimeType = dart.privateName(html$, "_mimeType");
  var _length = dart.privateName(html$, "_length");
  var _overrides = dart.privateName(html$, "_overrides");
  var _lastModified = dart.privateName(html$, "_lastModified");
  var _name$ = dart.privateName(html$, "_name");
  var _createBlobFromBytes = dart.privateName(html$, "_createBlobFromBytes");
  var _path = dart.privateName(html$, "_path");
  var _target = dart.privateName(html$, "_target");
  var _hasTestOverrides = dart.privateName(html$, "_hasTestOverrides");
  var _blob = dart.privateName(html$, "_blob");
  var _blobToByteBuffer = dart.privateName(html$, "_blobToByteBuffer");
  var Utf8Codec__allowMalformed = dart.privateName(convert, "Utf8Codec._allowMalformed");
  base.XFileBase = class XFileBase extends core.Object {
    saveTo(path) {
      dart.throw(new core.UnimplementedError.new("saveTo has not been implemented."));
    }
    get path() {
      dart.throw(new core.UnimplementedError.new(".path has not been implemented."));
    }
    get name() {
      dart.throw(new core.UnimplementedError.new(".name has not been implemented."));
    }
    get mimeType() {
      dart.throw(new core.UnimplementedError.new(".mimeType has not been implemented."));
    }
    length() {
      dart.throw(new core.UnimplementedError.new(".length() has not been implemented."));
    }
    readAsString(opts) {
      let encoding = opts && 'encoding' in opts ? opts.encoding : C[1638] || CT.C1638;
      dart.throw(new core.UnimplementedError.new("readAsString() has not been implemented."));
    }
    readAsBytes() {
      dart.throw(new core.UnimplementedError.new("readAsBytes() has not been implemented."));
    }
    openRead(start = null, end = null) {
      dart.throw(new core.UnimplementedError.new("openRead() has not been implemented."));
    }
    lastModified() {
      dart.throw(new core.UnimplementedError.new("lastModified() has not been implemented."));
    }
  };
  (base.XFileBase.new = function(path) {
    ;
  }).prototype = base.XFileBase.prototype;
  dart.addTypeTests(base.XFileBase);
  dart.addTypeCaches(base.XFileBase);
  dart.setMethodSignature(base.XFileBase, () => ({
    __proto__: dart.getMethods(base.XFileBase.__proto__),
    saveTo: dart.fnType(async.Future$(dart.void), [core.String]),
    length: dart.fnType(async.Future$(core.int), []),
    readAsString: dart.fnType(async.Future$(core.String), [], {encoding: convert.Encoding}, {}),
    readAsBytes: dart.fnType(async.Future$(typed_data.Uint8List), []),
    openRead: dart.fnType(async.Stream$(typed_data.Uint8List), [], [dart.nullable(core.int), dart.nullable(core.int)]),
    lastModified: dart.fnType(async.Future$(core.DateTime), [])
  }));
  dart.setGetterSignature(base.XFileBase, () => ({
    __proto__: dart.getGetters(base.XFileBase.__proto__),
    path: core.String,
    name: core.String,
    mimeType: dart.nullable(core.String)
  }));
  dart.setLibraryUri(base.XFileBase, I[64]);
  html$.XFile = class XFile extends base.XFileBase {
    static ['_#new#tearOff'](path, opts) {
      let mimeType = opts && 'mimeType' in opts ? opts.mimeType : null;
      let name = opts && 'name' in opts ? opts.name : null;
      let length = opts && 'length' in opts ? opts.length : null;
      let bytes = opts && 'bytes' in opts ? opts.bytes : null;
      let lastModified = opts && 'lastModified' in opts ? opts.lastModified : null;
      let overrides = opts && 'overrides' in opts ? opts.overrides : null;
      return new html$.XFile.new(path, {mimeType: mimeType, name: name, length: length, bytes: bytes, lastModified: lastModified, overrides: overrides});
    }
    static ['_#fromData#tearOff'](bytes, opts) {
      let mimeType = opts && 'mimeType' in opts ? opts.mimeType : null;
      let name = opts && 'name' in opts ? opts.name : null;
      let length = opts && 'length' in opts ? opts.length : null;
      let lastModified = opts && 'lastModified' in opts ? opts.lastModified : null;
      let path = opts && 'path' in opts ? opts.path : null;
      let overrides = opts && 'overrides' in opts ? opts.overrides : null;
      return new html$.XFile.fromData(bytes, {mimeType: mimeType, name: name, length: length, lastModified: lastModified, path: path, overrides: overrides});
    }
    [_createBlobFromBytes](bytes, mimeType) {
      return mimeType == null ? html.Blob.new([bytes]) : html.Blob.new([bytes], mimeType);
    }
    get [_path]() {
      let t149;
      t149 = this[__XFile__path];
      return t149 == null ? dart.throw(new _internal.LateError.fieldNI("_path")) : t149;
    }
    set [_path](_path$35param) {
      this[__XFile__path] = _path$35param;
    }
    get [_target]() {
      let t149;
      t149 = this[__XFile__target];
      return t149 == null ? dart.throw(new _internal.LateError.fieldNI("_target")) : t149;
    }
    set [_target](_target$35param) {
      this[__XFile__target] = _target$35param;
    }
    get [_hasTestOverrides]() {
      return this[_overrides] != null;
    }
    get mimeType() {
      return this[_mimeType];
    }
    get name() {
      return this[_name$];
    }
    get path() {
      return this[_path];
    }
    lastModified() {
      return async.async(core.DateTime, (function* lastModified() {
        return this[_lastModified];
      }).bind(this));
    }
    get [_blob]() {
      return async.async(html.Blob, (function* _blob() {
        if (this[_browserBlob] != null) {
          return dart.nullCheck(this[_browserBlob]);
        }
        if (web_helpers.isSafari() && this[_length] != null && dart.nullCheck(this[_length]) >= 4294967296) {
          dart.throw(core.Exception.new("Safari cannot handle XFiles larger than 4GB."));
        }
        let request = null;
        function request$35get() {
          let t150;
          t150 = request;
          return t150 == null ? dart.throw(new _internal.LateError.localNI("request")) : t150;
        }
        function request$35set(request$35param) {
          return request = request$35param;
        }
        try {
          request$35set(yield html.HttpRequest.request(this.path, {responseType: "blob"}));
        } catch (e$) {
          let e = dart.getThrown(e$);
          if (html.ProgressEvent.is(e)) {
            if (e[$type] === "error") {
              dart.throw(core.Exception.new("Could not load Blob from its URL. Has it been revoked?"));
            }
            dart.rethrow(e$);
          } else
            throw e$;
        }
        this[_browserBlob] = T$.BlobN().as(request$35get()[$response]);
        if (!(this[_browserBlob] != null)) dart.assertFailed("The Blob backing this XFile cannot be null!", I[63], 147, 12, "_browserBlob != null");
        return dart.nullCheck(this[_browserBlob]);
      }).bind(this));
    }
    readAsBytes() {
      return async.async(typed_data.Uint8List, (function* readAsBytes() {
        return this[_blob].then(typed_data.Uint8List, dart.bind(this, _blobToByteBuffer));
      }).bind(this));
    }
    length() {
      return async.async(core.int, (function* length() {
        let t153;
        t153 = this[_length];
        return t153 == null ? (yield this[_blob])[$size] : t153;
      }).bind(this));
    }
    readAsString(opts) {
      let encoding = opts && 'encoding' in opts ? opts.encoding : C[1638] || CT.C1638;
      return async.async(core.String, (function* readAsString() {
        return this.readAsBytes().then(core.String, T$.ListOfintToString().as(dart.bind(encoding, 'decode')));
      }).bind(this));
    }
    openRead(start = null, end = null) {
      return new (T$._AsyncStarImplOfUint8List()).new((function* openRead(stream) {
        let t153, t153$;
        let blob = (yield this[_blob]);
        let slice = blob[$slice]((t153 = start, t153 == null ? 0 : t153), (t153$ = end, t153$ == null ? blob[$size] : t153$), blob[$type]);
        let convertedSlice = (yield this[_blobToByteBuffer](slice));
        if (stream.add(convertedSlice)) return;
        yield;
      }).bind(this)).stream;
    }
    [_blobToByteBuffer](blob) {
      return async.async(typed_data.Uint8List, function* _blobToByteBuffer() {
        let reader = html.FileReader.new();
        reader.readAsArrayBuffer(blob);
        yield reader[$onLoadEnd].first;
        let result = T$.Uint8ListN().as(reader[$result]);
        if (result == null) {
          dart.throw(core.Exception.new("Cannot read bytes from Blob. Is it still available?"));
        }
        return result;
      });
    }
    saveTo(path) {
      return async.async(dart.void, (function* saveTo() {
        let t155, t154, t153;
        this[_target] = web_helpers.ensureInitialized("__x_file_dom_element");
        let element = this[_hasTestOverrides] ? html.AnchorElement.as((t153 = dart.nullCheck(this[_overrides]), t154 = this.path, t155 = this.name, t153.createAnchorElement(t154, t155))) : web_helpers.createAnchorElement(this.path, this.name);
        this[_target][$children][$clear]();
        web_helpers.addElementToContainerAndClick(this[_target], element);
      }).bind(this));
    }
  };
  (html$.XFile.new = function(path, opts) {
    let t149, t149$;
    let mimeType = opts && 'mimeType' in opts ? opts.mimeType : null;
    let name = opts && 'name' in opts ? opts.name : null;
    let length = opts && 'length' in opts ? opts.length : null;
    let bytes = opts && 'bytes' in opts ? opts.bytes : null;
    let lastModified = opts && 'lastModified' in opts ? opts.lastModified : null;
    let overrides = opts && 'overrides' in opts ? opts.overrides : null;
    this[__XFile__path] = null;
    this[_browserBlob] = null;
    this[__XFile__target] = null;
    this[_mimeType] = mimeType;
    this[__XFile__path] = path;
    this[_length] = length;
    this[_overrides] = overrides;
    this[_lastModified] = (t149 = lastModified, t149 == null ? new core.DateTime.fromMillisecondsSinceEpoch(0) : t149);
    this[_name$] = (t149$ = name, t149$ == null ? "" : t149$);
    html$.XFile.__proto__.new.call(this, path);
    if (bytes != null) {
      this[_browserBlob] = this[_createBlobFromBytes](bytes, mimeType);
    }
  }).prototype = html$.XFile.prototype;
  (html$.XFile.fromData = function(bytes, opts) {
    let t149, t149$;
    let mimeType = opts && 'mimeType' in opts ? opts.mimeType : null;
    let name = opts && 'name' in opts ? opts.name : null;
    let length = opts && 'length' in opts ? opts.length : null;
    let lastModified = opts && 'lastModified' in opts ? opts.lastModified : null;
    let path = opts && 'path' in opts ? opts.path : null;
    let overrides = opts && 'overrides' in opts ? opts.overrides : null;
    this[__XFile__path] = null;
    this[_browserBlob] = null;
    this[__XFile__target] = null;
    this[_mimeType] = mimeType;
    this[_length] = length;
    this[_overrides] = overrides;
    this[_lastModified] = (t149 = lastModified, t149 == null ? new core.DateTime.fromMillisecondsSinceEpoch(0) : t149);
    this[_name$] = (t149$ = name, t149$ == null ? "" : t149$);
    html$.XFile.__proto__.new.call(this, path);
    if (path == null) {
      this[_browserBlob] = this[_createBlobFromBytes](bytes, mimeType);
      this[_path] = html.Url.createObjectUrl(this[_browserBlob]);
    } else {
      this[_path] = path;
    }
  }).prototype = html$.XFile.prototype;
  dart.addTypeTests(html$.XFile);
  dart.addTypeCaches(html$.XFile);
  dart.setMethodSignature(html$.XFile, () => ({
    __proto__: dart.getMethods(html$.XFile.__proto__),
    [_createBlobFromBytes]: dart.fnType(html.Blob, [typed_data.Uint8List, dart.nullable(core.String)]),
    [_blobToByteBuffer]: dart.fnType(async.Future$(typed_data.Uint8List), [html.Blob])
  }));
  dart.setGetterSignature(html$.XFile, () => ({
    __proto__: dart.getGetters(html$.XFile.__proto__),
    [_path]: core.String,
    [_target]: html.Element,
    [_hasTestOverrides]: core.bool,
    [_blob]: async.Future$(html.Blob)
  }));
  dart.setSetterSignature(html$.XFile, () => ({
    __proto__: dart.getSetters(html$.XFile.__proto__),
    [_path]: core.String,
    [_target]: html.Element
  }));
  dart.setLibraryUri(html$.XFile, I[65]);
  dart.setFieldSignature(html$.XFile, () => ({
    __proto__: dart.getFields(html$.XFile.__proto__),
    [_mimeType]: dart.finalFieldType(dart.nullable(core.String)),
    [_name$]: dart.finalFieldType(core.String),
    [__XFile__path]: dart.fieldType(dart.nullable(core.String)),
    [_length]: dart.finalFieldType(dart.nullable(core.int)),
    [_lastModified]: dart.finalFieldType(core.DateTime),
    [_browserBlob]: dart.fieldType(dart.nullable(html.Blob)),
    [__XFile__target]: dart.fieldType(dart.nullable(html.Element)),
    [_overrides]: dart.finalFieldType(dart.nullable(html$.CrossFileTestOverrides))
  }));
  var createAnchorElement$ = dart.privateName(html$, "CrossFileTestOverrides.createAnchorElement");
  html$.CrossFileTestOverrides = class CrossFileTestOverrides extends core.Object {
    get createAnchorElement() {
      return this[createAnchorElement$];
    }
    set createAnchorElement(value) {
      this[createAnchorElement$] = value;
    }
    static ['_#new#tearOff'](opts) {
      let createAnchorElement = opts && 'createAnchorElement' in opts ? opts.createAnchorElement : null;
      return new html$.CrossFileTestOverrides.new({createAnchorElement: createAnchorElement});
    }
  };
  (html$.CrossFileTestOverrides.new = function(opts) {
    let createAnchorElement = opts && 'createAnchorElement' in opts ? opts.createAnchorElement : null;
    this[createAnchorElement$] = createAnchorElement;
    ;
  }).prototype = html$.CrossFileTestOverrides.prototype;
  dart.addTypeTests(html$.CrossFileTestOverrides);
  dart.addTypeCaches(html$.CrossFileTestOverrides);
  dart.setLibraryUri(html$.CrossFileTestOverrides, I[65]);
  dart.setFieldSignature(html$.CrossFileTestOverrides, () => ({
    __proto__: dart.getFields(html$.CrossFileTestOverrides.__proto__),
    createAnchorElement: dart.fieldType(dart.fnType(html.Element, [core.String, core.String]))
  }));
  dart.defineLazy(html$, {
    /*html$._fourGigabytes*/get _fourGigabytes() {
      return 4294967296;
    }
  }, false);
  type_conversion.cameraImageFromPlatformData = function cameraImageFromPlatformData(data) {
    return new camera_image_data.CameraImageData.new({format: type_conversion._cameraImageFormatFromPlatformData(data[$_get]("format")), height: core.int.as(data[$_get]("height")), width: core.int.as(data[$_get]("width")), lensAperture: T$.doubleN().as(data[$_get]("lensAperture")), sensorExposureTime: T$.intN().as(data[$_get]("sensorExposureTime")), sensorSensitivity: T$.doubleN().as(data[$_get]("sensorSensitivity")), planes: T$.ListOfCameraImagePlane().unmodifiable(core.List.as(data[$_get]("planes"))[$map](camera_image_data.CameraImagePlane, dart.fn(planeData => type_conversion._cameraImagePlaneFromPlatformData(core.Map.as(planeData)), T$.dynamicToCameraImagePlane())))});
  };
  type_conversion._cameraImageFormatFromPlatformData = function _cameraImageFormatFromPlatformData(data) {
    return new camera_image_data.CameraImageFormat.new(type_conversion._imageFormatGroupFromPlatformData(data), {raw: data});
  };
  type_conversion._imageFormatGroupFromPlatformData = function _imageFormatGroupFromPlatformData(data) {
    if (platform.defaultTargetPlatform === platform.TargetPlatform.android) {
      switch (data) {
        case 35:
          {
            return image_format_group.ImageFormatGroup.yuv420;
          }
        case 256:
          {
            return image_format_group.ImageFormatGroup.jpeg;
          }
      }
    }
    if (platform.defaultTargetPlatform === platform.TargetPlatform.iOS) {
      switch (data) {
        case 875704438:
          {
            return image_format_group.ImageFormatGroup.yuv420;
          }
        case 1111970369:
          {
            return image_format_group.ImageFormatGroup.bgra8888;
          }
      }
    }
    return image_format_group.ImageFormatGroup.unknown;
  };
  type_conversion._cameraImagePlaneFromPlatformData = function _cameraImagePlaneFromPlatformData(data) {
    return new camera_image_data.CameraImagePlane.new({bytes: typed_data.Uint8List.as(data[$_get]("bytes")), bytesPerPixel: T$.intN().as(data[$_get]("bytesPerPixel")), bytesPerRow: core.int.as(data[$_get]("bytesPerRow")), height: T$.intN().as(data[$_get]("height")), width: T$.intN().as(data[$_get]("width"))});
  };
  web_helpers.createAnchorElement = function createAnchorElement(href, suggestedName) {
    let element = html.AnchorElement.new({href: href});
    if (suggestedName == null) {
      element.download = "download";
    } else {
      element.download = suggestedName;
    }
    return element;
  };
  web_helpers.addElementToContainerAndClick = function addElementToContainerAndClick(container, element) {
    container[$children][$add](element);
    element.click();
  };
  web_helpers.ensureInitialized = function ensureInitialized(id) {
    let t153;
    let target = html.querySelector("#" + id);
    if (target == null) {
      let targetElement = (t153 = html.Element.tag("flt-x-file"), (() => {
        t153[$id] = id;
        return t153;
      })());
      dart.nullCheck(html.querySelector("body"))[$children][$add](targetElement);
      target = targetElement;
    }
    return target;
  };
  web_helpers.isSafari = function isSafari() {
    return html.window[$navigator][$vendor] === "Apple Computer, Inc.";
  };
  dart.trackLibraries("zapp_user_main", {
    "file:///zapp/project/.zapp_entry.dart": $46zapp_entry,
    "file:///zapp/project/lib/testpage.dart": testpage,
    "file:///zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart": web_plugin_registrant,
    "package:provider/provider.dart": provider,
    "package:flutter_app/providers/video_provider.dart": video_provider,
    "file:///zapp/project/lib/pages/feed.dart": feed,
    "package:camera_web/camera_web.dart": camera_web,
    "package:provider/src/async_provider.dart": async_provider,
    "package:provider/src/change_notifier_provider.dart": change_notifier_provider,
    "package:provider/src/consumer.dart": consumer,
    "package:provider/src/listenable_provider.dart": listenable_provider,
    "package:provider/src/provider.dart": provider$,
    "package:provider/src/proxy_provider.dart": proxy_provider,
    "package:provider/src/reassemble_handler.dart": reassemble_handler,
    "package:provider/src/selector.dart": selector$,
    "package:provider/src/value_listenable_provider.dart": value_listenable_provider,
    "package:flutter_app/providers/video.dart": video,
    "package:flutter_boxicons/flutter_boxicons.dart": flutter_boxicons,
    "package:flutter_app/pages/ViewProf.dart": ViewProf,
    "package:flutter_app/pages/search.dart": search,
    "package:flutter_app/widgets/botnav.dart": botnav,
    "package:camera_web/src/camera_web.dart": camera_web$,
    "package:nested/nested.dart": nested,
    "package:flutter_app/pages/transaction.dart": transaction,
    "package:flutter_app/pages/under_cons.dart": under_cons,
    "package:flutter_app/pages/courses.dart": courses,
    "package:flutter_app/pages/feed.dart": feed$,
    "package:camera_platform_interface/camera_platform_interface.dart": camera_platform_interface,
    "package:stream_transform/stream_transform.dart": stream_transform,
    "package:camera_web/src/camera.dart": camera$,
    "package:camera_web/src/camera_service.dart": camera_service,
    "package:camera_web/src/types/types.dart": types,
    "package:flutter_app/widgets/action_button.dart": action_button,
    "package:cross_file/cross_file.dart": cross_file,
    "package:camera_platform_interface/src/events/camera_event.dart": camera_event,
    "package:camera_platform_interface/src/events/device_event.dart": device_event,
    "package:camera_platform_interface/src/platform_interface/camera_platform.dart": camera_platform,
    "package:camera_platform_interface/src/types/media_settings.dart": media_settings,
    "package:camera_platform_interface/src/types/types.dart": types$,
    "package:stream_transform/src/async_expand.dart": async_expand,
    "package:stream_transform/src/async_map.dart": async_map,
    "package:stream_transform/src/combine_latest.dart": combine_latest,
    "package:stream_transform/src/concatenate.dart": concatenate,
    "package:stream_transform/src/merge.dart": merge,
    "package:stream_transform/src/rate_limit.dart": rate_limit,
    "package:stream_transform/src/scan.dart": scan,
    "package:stream_transform/src/switch.dart": $switch,
    "package:stream_transform/src/take_until.dart": take_until,
    "package:stream_transform/src/tap.dart": tap,
    "package:stream_transform/src/where.dart": where,
    "package:camera_web/src/shims/dart_ui.dart": dart_ui,
    "package:camera_web/src/shims/dart_js_util.dart": dart_js_util,
    "package:camera_web/src/types/camera_error_code.dart": camera_error_code,
    "package:camera_web/src/types/camera_metadata.dart": camera_metadata,
    "package:camera_web/src/types/camera_options.dart": camera_options,
    "package:camera_web/src/types/camera_web_exception.dart": camera_web_exception,
    "package:camera_web/src/types/media_device_kind.dart": media_device_kind,
    "package:camera_web/src/types/orientation_type.dart": orientation_type,
    "package:camera_web/src/types/zoom_level_capability.dart": zoom_level_capability,
    "package:cross_file/src/x_file.dart": x_file,
    "package:camera_platform_interface/src/utils/utils.dart": utils,
    "package:plugin_platform_interface/plugin_platform_interface.dart": plugin_platform_interface,
    "package:camera_platform_interface/src/method_channel/method_channel_camera.dart": method_channel_camera,
    "package:camera_platform_interface/src/types/resolution_preset.dart": resolution_preset,
    "package:camera_platform_interface/src/types/camera_description.dart": camera_description,
    "package:camera_platform_interface/src/types/camera_exception.dart": camera_exception,
    "package:camera_platform_interface/src/types/camera_image_data.dart": camera_image_data,
    "package:camera_platform_interface/src/types/exposure_mode.dart": exposure_mode,
    "package:camera_platform_interface/src/types/flash_mode.dart": flash_mode,
    "package:camera_platform_interface/src/types/focus_mode.dart": focus_mode,
    "package:camera_platform_interface/src/types/image_format_group.dart": image_format_group,
    "package:camera_platform_interface/src/types/video_capture_options.dart": video_capture_options,
    "package:stream_transform/src/aggregate_sample.dart": aggregate_sample,
    "package:stream_transform/src/from_handlers.dart": from_handlers,
    "package:camera_web/src/shims/dart_ui_real.dart": dart_ui_real,
    "package:cross_file/src/types/html.dart": html$,
    "package:camera_platform_interface/src/method_channel/type_conversion.dart": type_conversion,
    "package:cross_file/src/web_helpers/web_helpers.dart": web_helpers,
    "package:cross_file/src/types/base.dart": base
  }, {
    "package:provider/src/provider.dart": ["deferred_inherited_provider.dart", "devtool.dart", "inherited_provider.dart"]
  }, '{"version":3,"sourceRoot":"","sources":["/zapp/project/.zapp_entry.dart","/zapp/project/lib/testpage.dart","/zapp/project/.dart_tool/dartpad/web_plugin_registrant.dart","/zapp/project/lib/providers/video_provider.dart","/zapp/project/lib/pages/feed.dart","/zapp/pub/.pub_cache/hosted/pub.dev/nested-1.0.0/lib/nested.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/inherited_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/deferred_inherited_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/async_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/listenable_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/change_notifier_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/consumer.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/devtool.dart","/workspace/build/dart-sdk/packages/flutter/lib/src/widgets/framework.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/proxy_provider.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/reassemble_handler.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/selector.dart","/zapp/pub/.pub_cache/hosted/pub.dev/provider-6.1.2/lib/src/value_listenable_provider.dart","/zapp/project/lib/providers/video.dart","/zapp/pub/.pub_cache/hosted/pub.dev/flutter_boxicons-3.1.0/lib/flutter_boxicons.dart","/zapp/project/lib/pages/ViewProf.dart","/zapp/project/lib/pages/search.dart","/zapp/project/lib/widgets/botnav.dart","/zapp/pub/.pub_cache/hosted/pub.dev/plugin_platform_interface-2.1.6/lib/plugin_platform_interface.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_platform_interface-2.6.0/lib/src/platform_interface/camera_platform.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_web-0.3.2+2/lib/src/camera_web.dart","/zapp/project/lib/pages/transaction.dart","/zapp/project/lib/pages/under_cons.dart","/zapp/project/lib/pages/courses.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_web-0.3.2+2/lib/src/camera.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_web-0.3.2+2/lib/src/camera_service.dart","/zapp/project/lib/widgets/action_button.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_platform_interface-2.6.0/lib/src/events/camera_event.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_platform_interface-2.6.0/lib/src/events/device_event.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_platform_interface-2.6.0/lib/src/types/media_settings.dart","/zapp/pub/.pub_cache/hosted/pub.dev/stream_transform-2.1.0/lib/src/async_expand.dart","/zapp/pub/.pub_cache/hosted/pub.dev/stream_transform-2.1.0/lib/src/async_map.dart","/zapp/pub/.pub_cache/hosted/pub.dev/stream_transform-2.1.0/lib/src/combine_latest.dart","/zapp/pub/.pub_cache/hosted/pub.dev/stream_transform-2.1.0/lib/src/concatenate.dart","/zapp/pub/.pub_cache/hosted/pub.dev/stream_transform-2.1.0/lib/src/merge.dart","/zapp/pub/.pub_cache/hosted/pub.dev/stream_transform-2.1.0/lib/src/rate_limit.dart","/zapp/pub/.pub_cache/hosted/pub.dev/stream_transform-2.1.0/lib/src/scan.dart","/zapp/pub/.pub_cache/hosted/pub.dev/stream_transform-2.1.0/lib/src/switch.dart","/zapp/pub/.pub_cache/hosted/pub.dev/stream_transform-2.1.0/lib/src/take_until.dart","/zapp/pub/.pub_cache/hosted/pub.dev/stream_transform-2.1.0/lib/src/tap.dart","/zapp/pub/.pub_cache/hosted/pub.dev/stream_transform-2.1.0/lib/src/where.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_web-0.3.2+2/lib/src/shims/dart_js_util.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_web-0.3.2+2/lib/src/types/camera_error_code.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_web-0.3.2+2/lib/src/types/camera_metadata.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_web-0.3.2+2/lib/src/types/camera_options.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_web-0.3.2+2/lib/src/types/camera_web_exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_web-0.3.2+2/lib/src/types/media_device_kind.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_web-0.3.2+2/lib/src/types/orientation_type.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_web-0.3.2+2/lib/src/types/zoom_level_capability.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_platform_interface-2.6.0/lib/src/utils/utils.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_platform_interface-2.6.0/lib/src/method_channel/method_channel_camera.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_platform_interface-2.6.0/lib/src/types/resolution_preset.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_platform_interface-2.6.0/lib/src/types/camera_description.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_platform_interface-2.6.0/lib/src/types/camera_exception.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_platform_interface-2.6.0/lib/src/types/camera_image_data.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_platform_interface-2.6.0/lib/src/types/exposure_mode.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_platform_interface-2.6.0/lib/src/types/flash_mode.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_platform_interface-2.6.0/lib/src/types/focus_mode.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_platform_interface-2.6.0/lib/src/types/image_format_group.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_platform_interface-2.6.0/lib/src/types/video_capture_options.dart","/zapp/pub/.pub_cache/hosted/pub.dev/stream_transform-2.1.0/lib/src/aggregate_sample.dart","/zapp/pub/.pub_cache/hosted/pub.dev/stream_transform-2.1.0/lib/src/from_handlers.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cross_file-0.3.3+6/lib/src/types/base.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cross_file-0.3.3+6/lib/src/types/html.dart","/zapp/pub/.pub_cache/hosted/pub.dev/camera_platform_interface-2.6.0/lib/src/method_channel/type_conversion.dart","/zapp/pub/.pub_cache/hosted/pub.dev/cross_file-0.3.3+6/lib/src/web_helpers/web_helpers.dart"],"names":[],"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","file":"main.js"}');
  // Exports:
  return {
    zapp__project__$46zapp_entry: $46zapp_entry,
    zapp__project__lib__testpage: testpage,
    zapp__project__$46dart_tool__dartpad__web_plugin_registrant: web_plugin_registrant,
    provider: provider,
    providers__video_provider: video_provider,
    zapp__project__lib__pages__feed: feed,
    camera_web: camera_web,
    src__async_provider: async_provider,
    src__change_notifier_provider: change_notifier_provider,
    src__consumer: consumer,
    src__listenable_provider: listenable_provider,
    src__provider: provider$,
    src__proxy_provider: proxy_provider,
    src__reassemble_handler: reassemble_handler,
    src__selector: selector$,
    src__value_listenable_provider: value_listenable_provider,
    providers__video: video,
    flutter_boxicons: flutter_boxicons,
    pages__ViewProf: ViewProf,
    pages__search: search,
    widgets__botnav: botnav,
    src__camera_web: camera_web$,
    nested: nested,
    pages__transaction: transaction,
    pages__under_cons: under_cons,
    pages__courses: courses,
    pages__feed: feed$,
    camera_platform_interface: camera_platform_interface,
    stream_transform: stream_transform,
    src__camera: camera$,
    src__camera_service: camera_service,
    src__types__types: types,
    widgets__action_button: action_button,
    cross_file: cross_file,
    src__events__camera_event: camera_event,
    src__events__device_event: device_event,
    src__platform_interface__camera_platform: camera_platform,
    src__types__media_settings: media_settings,
    src__types__types: types$,
    src__async_expand: async_expand,
    src__async_map: async_map,
    src__combine_latest: combine_latest,
    src__concatenate: concatenate,
    src__merge: merge,
    src__rate_limit: rate_limit,
    src__scan: scan,
    src__switch: $switch,
    src__take_until: take_until,
    src__tap: tap,
    src__where: where,
    src__shims__dart_ui: dart_ui,
    src__shims__dart_js_util: dart_js_util,
    src__types__camera_error_code: camera_error_code,
    src__types__camera_metadata: camera_metadata,
    src__types__camera_options: camera_options,
    src__types__camera_web_exception: camera_web_exception,
    src__types__media_device_kind: media_device_kind,
    src__types__orientation_type: orientation_type,
    src__types__zoom_level_capability: zoom_level_capability,
    src__x_file: x_file,
    src__utils__utils: utils,
    plugin_platform_interface: plugin_platform_interface,
    src__method_channel__method_channel_camera: method_channel_camera,
    src__types__resolution_preset: resolution_preset,
    src__types__camera_description: camera_description,
    src__types__camera_exception: camera_exception,
    src__types__camera_image_data: camera_image_data,
    src__types__exposure_mode: exposure_mode,
    src__types__flash_mode: flash_mode,
    src__types__focus_mode: focus_mode,
    src__types__image_format_group: image_format_group,
    src__types__video_capture_options: video_capture_options,
    src__aggregate_sample: aggregate_sample,
    src__from_handlers: from_handlers,
    src__shims__dart_ui_real: dart_ui_real,
    src__types__html: html$,
    src__method_channel__type_conversion: type_conversion,
    src__web_helpers__web_helpers: web_helpers,
    src__types__base: base
  };
}));

//# sourceMappingURL=main.js.map
